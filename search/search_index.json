{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Risk Atlas Nexus","text":"<p>\ud83d\udc49 (Feb-2025) Our new HF spaces demo site is available! </p>"},{"location":"#overview","title":"Overview","text":"<p>Risk Atlas Nexus aims to provide tooling to help bring together disparate resources related to governance of foundation models. We support a community driven approach to curating and cataloguing resources such as datasets, benchmarks and mitigations.  Our goal is to turn abstract risk definitions into actionable workflows that streamline AI governance processes. By connecting fragmented resources, Risk Atlas Nexus seeks to fill a critical gap in AI governance, enabling stakeholders to build more robust, transparent, and accountable systems. Risk Atlas Nexus builds on the IBM AI Risk Atlas making this educational resource a nexus of governance assets and tooling.  An AI System's Knowledge Graph is used to provide a unified structure that links and contextualize the very heterogeneous domain data. </p> <p>Our intention is to create a starting point for an open AI Systems ontology whose focus is on risk and that the community can extend and enhance. This ontology serves as the foundation that unifies innovation and tooling in the AI risk space. By lowering the barrier to entry for developers, it fosters a governance-first approach to AI solutions, while also inviting the broader community to contribute their own tools and methodologies to expand its impact.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83c\udfd7\ufe0f An ontology has been provided, that combines the AI risk view (taxonomies, risks, actions) with an AI model view (AI systems, AI models, model evaluations) into one coherent schema </li> <li>\ud83d\udcda AI Risks were collected from IBM AI Risk Atlas, IBM Granite Guardian, MIT AI Risk Repository, NIST Artificial Intelligence Risk Management Framework: Generative Artificial Intelligence Profile, the AI Risk Taxonomy (AIR 2024), the AILuminate Benchmark, Credo's Unified Control Framework, and OWASP Top 10 for Large Language Model Applications</li> <li>\ud83d\udd17 Mappings are proposed between the taxonomies and between risks and actions</li> <li>\ud83d\udd0d Use the python library methods to quickly explore available risks, relations and actions </li> <li>\ud83d\udea8 Use the python library methods to detect potential risks in your usecase </li> <li>\ud83d\udce4 Download an exported graph populated with data instances</li> <li>\u2728 Example use-case of auto-assistance in compliance questionnaires using CoT examples and Risk Atlas Nexus</li> </ul>"},{"location":"#architecture","title":"Architecture","text":""},{"location":"#coming-soon","title":"Coming soon","text":"<ul> <li>Tooling to convert the LinkML schema and instance data into a Cypher representation to populate a graph database</li> </ul>"},{"location":"#links","title":"Links","text":"<ul> <li>AI Risk Ontology<ul> <li>LinkML schema documentation</li> <li>LinkML instance data for an example knowledge graph</li> <li>Download a populated graph</li> <li>Contribute your own taxonomy files and CoT templates</li> </ul> </li> <li>Notebooks: <ul> <li>Risk Atlas Nexus Quickstart Overview of library functionality</li> <li>Risk identification Uncover risks related to your usecase</li> <li>Auto assist questionnaire Auto-fill questionnaire using Chain of Thought or Few-Shot Examples</li> <li>AI Tasks identification Uncover ai tasks related to your usecase</li> </ul> </li> <li>Additional Resources:<ul> <li>IBM AI Risk Atlas</li> <li>Usage Governance Advisor: From Intent to AI Governance</li> </ul> </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>This project targets python version \"&gt;=3.11, &lt;3.12\". You can download specific versions of python here: https://www.python.org/downloads/</p> <p>Install the risk_atlas_nexus library <pre><code>git clone git@github.com:IBM/risk-atlas-nexus.git\ncd risk-atlas-nexus\npython -m venv vrisk-atlas-nexus\nsource vrisk-atlas-nexus/bin/activate\npip install -e .\n</code></pre></p>"},{"location":"#install-for-inference-apis","title":"Install for inference APIs","text":"<p>Risk Atlas Nexus uses Large Language Models (LLMs) to infer risks and risks data. Therefore, requires access to LLMs to inference or call the model. The following LLM inference APIs are supported:</p> <ul> <li>IBM Watsonx AI (Watson Machine Learning)</li> <li>Ollama</li> <li>vLLM</li> <li>RITS (IBM Internal Only)</li> </ul>"},{"location":"#ibm-watsonx-ai-wml","title":"IBM Watsonx AI (WML)","text":"<p>When using the WML platform, you need to:</p> <ol> <li>Add configuration to <code>.env</code> file as follows. Please follow this documentation on obtaining WML credentials.</li> </ol> <pre><code>WML_API_KEY=&lt;WML api key goes here&gt;\nWML_API_URL=&lt;WML url key goes here&gt;\nWML_PROJECT_ID=&lt;WML project id goes here, Optional&gt;\nWML_SPACE_ID=&lt;WML space id goes here, Optional&gt;\n</code></pre> <p>Either 'WML_PROJECT_ID' or 'WML_SPACE_ID' need to be specified.</p> <ol> <li>Install WML dependencies as follows:</li> </ol> <pre><code>pip install -e \".[wml]\"\n</code></pre>"},{"location":"#ollama","title":"Ollama","text":"<p>When using the Ollama inference, you need to:</p> <ol> <li>Install Ollama dependencies as follows:</li> </ol> <pre><code>pip install -e \".[ollama]\"\n</code></pre> <ol> <li> <p>Please follow the quickstart guide to start Ollama LLM server. Server will start by default at http://localhost:11434</p> </li> <li> <p>When selecting Ollama engine in Risk Atlas Nexus, use the server address <code>localhost:11434</code> as the <code>api_url</code> in the credentials or set the environment variable <code>OLLAMA_API_URL</code> with this value.</p> </li> </ol>"},{"location":"#vllm","title":"vLLM","text":"<p>When using the vLLM inference, you need to:</p> <ol> <li> <p>For Mac users, follow the instuctions here. Users need to build from the source vLLM to natively run on macOS.</p> </li> <li> <p>For Linux users, install vLLM dependencies as follows:</p> </li> </ol> <pre><code>pip install -e \".[vllm]\"\n</code></pre> <p>Above package is enough to run vLLM in once-off offline mode. When selecting vLLM execution from Risk Atlas Nexus, <code>credentials</code> should be passed as <code>None</code> to use vLLM offline mode.</p> <ol> <li>(Optional) To run vLLM on an OpenAI-Compatible vLLM Server, execute the command:</li> </ol> <pre><code>vllm serve ibm-granite/granite-3.1-8b-instruct --max_model_len 4096 --host localhost --port 8000 --api-key &lt;CUSTOM_API_KEY&gt;\n</code></pre> <p>The CUSTOM_API_KEY can be any string that you choose to use as your API key. Above command will start vLLM server at http://localhost:8000. The server currently hosts one model at a time. Check all supported APIs at <code>http://localhost:8000/docs</code></p> <p>Note: When selecting vLLM engine in Risk Atlas Nexus, pass <code>api_url</code> as <code>host:port</code> and given <code>api_key</code> to <code>credentials</code> with values from the vllm serve command above.</p>"},{"location":"#rits-ibm-internal-only","title":"RITS (IBM Internal Only)","text":"<p>When using the RITS platform, you need to:</p> <ol> <li>Add configuration to <code>.env</code> file as follows:</li> </ol> <pre><code>RITS_API_KEY=&lt;RITS api key goes here&gt;\nRITS_API_URL=&lt;RITS url key goes here&gt;\n</code></pre> <ol> <li>Install RITS dependencies as follows:</li> </ol> <pre><code>pip install -e \".[rits]\"\n</code></pre>"},{"location":"#compatibility","title":"Compatibility","text":"<ul> <li>View the changelog.</li> </ul>"},{"location":"#referencing-the-project","title":"Referencing the project","text":"<p>If you use Risk Atlas Nexus in your projects, please consider citing the following: <pre><code>@article{airiskatlas2025,\n      title={AI Risk Atlas: Taxonomy and Tooling for Navigating AI Risks and Resources}, \n      author={Frank Bagehorn and Kristina Brimijoin and Elizabeth M. Daly and Jessica He and Michael Hind and Luis Garces-Erice and Christopher Giblin and Ioana Giurgiu and Jacquelyn Martino and Rahul Nair and David Piorkowski and Ambrish Rawat and John Richards and Sean Rooney and Dhaval Salwala and Seshu Tirupathi and Peter Urbanetz and Kush R. Varshney and Inge Vejsbjerg and Mira L. Wolf-Bauwens},\n      year={2025},\n      eprint={2503.05780},\n      archivePrefix={arXiv},\n      primaryClass={cs.CY},\n      url={https://arxiv.org/abs/2503.05780}\n}\n</code></pre></p>"},{"location":"#license","title":"License","text":"<p>Risk Atlas Nexus is under Apache 2.0 license.</p>"},{"location":"#contributing","title":"Contributing","text":"<ul> <li>Get started by checking our contribution guidelines.</li> <li>Read the wiki for more technical and design details.</li> <li>If you have any questions, just ask!</li> <li>Contribute your own taxonomy files and CoT templates</li> </ul> <p>Tip: Use the makefile provided to regenerate artifacts provided in the repository by running <code>make</code> in this repository.</p>"},{"location":"#find-out-more","title":"Find out more","text":"<ul> <li>Try out a quick demo at the HF spaces demo site</li> <li>IBM's AI Risk Atlas</li> <li>Read the the IBM AI Ethics Board publication Foundation models: Opportunities, risks and mitigations which goes into more detail about the risk taxonomy, and describes the point of view of IBM on the ethics of foundation models.</li> <li>'Usage Governance Advisor: From Intent to AI Governance' presents a system for semi-structured governance information, identifying and prioritising risks according to the intended use case, recommending appropriate benchmarks and risk assessments and proposing mitigation strategies and actions.</li> </ul>"},{"location":"#ibm-open-source-ai","title":"IBM \u2764\ufe0f Open Source AI","text":"<p>Risk Atlas Nexus has been brought to you by IBM.</p>"},{"location":"concepts/","title":"Concepts","text":"<p>The IBM AI Risk Atlas has been used many of IBM's enterprise customers to help them reason about the risks in their AI systems. In order to enable efforts to leverage these risks to operationalise governance and risk mitigation frameworks we created Risk Atlas Nexus.</p> <p>The Risk Atlas Nexus is a collection of tooling and resources related to governance of foundation models. It contributes an ontology and a knowledge graph which contains the risks from different existing taxonomies (for example; the OWASP Top 10 for LLMs and Generative AI Apps, the NIST AI Risk Management Framework, the MIT AI Risk Repository, the AILuminate Benchmark, the AIR taxonomy 2024), Credo's Unified Control Framework) and the mappings between them.  </p> <p>The ontology has been modeled using LinkML, which allows the generation of different data representations (e.g. RDF, OWL) in a simple way. The risk taxonomies have been stored as LinkML data instance YAML files.</p> <p>A python implementation is provided to traverse the underlying graph, to more easily allow users to make use of the abstract risk definitions into their own actionable workflows and AI governance processes. </p> <p>Compliance questionnaires are usually required prior to deploying an AI model into production. These enable a thorough understanding of the specific use case and associated risk exposures. The Risk Atlas Nexus supports the development and curation of questionnaires to a desired taxonomy. Additionally, the content can support Large Language Models (LLMs) to assist users in responding to time-consuming compliance questionnaires, thereby reducing manual effort and minimizing errors</p>"},{"location":"concepts/Contributing_a_taxonomy/","title":"Contributing a taxonomy or CoT templates","text":"<p>This document will describe how to contribute custom  taxonomy files and CoT templates to the Risk Atlas Nexus project.</p> <ol> <li>Overview<ol> <li>What are the taxonomy files?</li> <li>How are mappings created between taxonomies?</li> </ol> </li> <li>Add your own taxonomies/risks/actions<ol> <li>An example addition of a risk</li> </ol> </li> <li>Add your own mappings</li> <li>Add your own Chain of Thought templates<ol> <li>Contribute the templates</li> </ol> </li> </ol>"},{"location":"concepts/Contributing_a_taxonomy/#overview","title":"Overview","text":"<p>You may wish to contribute your own taxonomy definitions, entity mappings or Chain of Thought templates to the Risk Atlas Nexus project. We welcome any contributions.</p> <p>Please familiarise yourself with the general contribution guidelines and set up your own fork of the project.</p>"},{"location":"concepts/Contributing_a_taxonomy/#what-are-the-taxonomy-files","title":"What are the taxonomy files?","text":"<p>The Risk Atlas Nexus ontology combines the AI risk view (taxonomies, risks, actions) with an AI model view (AI systems, AI models, model evaluations) into one schema. These are loaded into the system with LinkML, through yaml representations, stored in the knowledge graph data folder.</p>"},{"location":"concepts/Contributing_a_taxonomy/#how-are-mappings-maintained-between-taxonomies","title":"How are mappings maintained between taxonomies?","text":"<p>To express some semantically meaningful mapping between risks from different taxonomies, we have used the Simple Standard for Sharing Ontological Mappings (SSSOM) . The mappings are maintained in SSOM TSV files and are converted to LinkML data YAML using Python helper scripts.</p>"},{"location":"concepts/Contributing_a_taxonomy/#add-your-own-taxonomiesrisksactions","title":"Add your own taxonomies/risks/actions","text":"<p>You can add your own risk definitions by adding yaml to knowledge graph data folder. Ensure the entries comply with the schema</p>"},{"location":"concepts/Contributing_a_taxonomy/#an-example-addition-of-a-risk","title":"An example addition of a risk","text":"<p>If you would like to contribute your own taxonomy files to the project for others to use, add one or more yaml files to the  knowledge graph data directory .</p> <p>For example, to add a new risk, create a file with the following sample content, and add it to the knowledge graph data directory.</p> <pre><code>- id: my-own-risk\n  name: A very risky AI behaviour\n  description: An LLM-based system is often very risky\n  isDefinedByTaxonomy: my-taxonomy\n</code></pre>"},{"location":"concepts/Contributing_a_taxonomy/#add-your-own-mappings","title":"Add your own mappings","text":"<ol> <li>Prepare a TSV file either<ol> <li>manually, or</li> <li>semi-automatically, with aid of the python notebook Prepare taxonomy mappings.</li> </ol> </li> <li>Verify the TSV mappings are correct.</li> <li>Lift all the TSV files to yaml mapping entries by executing <code>make lift_mappings_from_tsv</code>. </li> <li>Ensure the changes were saved to the knowledge graph data mapping folder .</li> </ol>"},{"location":"concepts/Contributing_a_taxonomy/#save-your-changes","title":"Save your changes","text":"<ul> <li>Save your new taxonomy files in   the knowledge graph data directory   . Push your changes and make a PR to the main project.</li> </ul>"},{"location":"concepts/Contributing_a_taxonomy/#add-your-own-chain-of-thought-templates","title":"Add your own Chain of Thought templates","text":"<p>The template used in <code>risk_atlas_nexus/data/templates/cot_examples.json</code> defines the few-shot examples which are use for the auto-assist functionality.</p> <p>Customization: To adapt this auto-assist functionality to custom questionnaires, users need to provide their own set of questions, example intents, and corresponding answers in a json file (e.g.,<code>risk_atlas_nexus/data/templates/cot_examples.json</code>). This will enable the LLM to learn from these few-shot examples and generate responses for unseen queries.</p> <p>Template Structure:</p> <ul> <li>Each question is associated with a list of example intents and   corresponding answers.</li> <li>The format is:<ul> <li><code>Question</code></li> <li><code>- intents:</code> (list of example intents)</li> <li><code>- answers:</code> (list of corresponding answers for the respective intents above)</li> </ul> </li> </ul>"},{"location":"concepts/Contributing_a_taxonomy/#contribute-the-templates","title":"Contribute the templates","text":"<p>If you would like to contribute your own templates to the project for others to use:</p> <ul> <li>Save your new template in the <code>risk_atlas_nexus/data/templates/</code> folder, push your changes and make a PR to the main   project.</li> </ul>"},{"location":"concepts/IBM_AI_Risk_Atlas/","title":"IBM AI Risk Atlas","text":"<p>IBM AI Risk Atlas is a structured taxonomy that consolidates AI risks from diverse sources and aligns them with governance frameworks.</p> <p>The IBM AI Risk Atlas is a taxonomy of AI risks collected from prior research, real-world examples, and from experts in the field. It defines risks posed by AI systems and explain potential consequences of those risks. Each risk is grouped into one of four categories based on where the risk originates. The categories are input risks, inference risks, output risks and non-technical risks. Within each category, risks are further grouped into risk dimensions such as accuracy, fairness, or explainability. These dimensions classify the individual risks into groups, and enable a user of the Atlas to focus on the dimensions relevant to them.</p> <p></p>"},{"location":"concepts/IBM_AI_Risk_Atlas/#find-out-more","title":"Find out more","text":"<ul> <li>IBM's AI Risk Atlas</li> <li>Read the the IBM AI Ethics Board publication Foundation models: Opportunities, risks and mitigations which goes into more detail about the risk taxonomy, and describes the point of view of IBM on the ethics of foundation models.</li> </ul>"},{"location":"concepts/architecture/","title":"Architecture","text":""},{"location":"examples/","title":"Examples","text":"<ul> <li>Risk Atlas Nexus Quickstart An overview of library functionality</li> <li>Risk identification Uncover risks related to your usecase </li> <li>Auto assist questionnaire Auto-fill questionnaire using Chain of Thought or Few-Shot Examples</li> <li>AI Tasks identification Uncover ai tasks related to your usecase</li> </ul>"},{"location":"examples/notebooks/","title":"Index","text":""},{"location":"examples/notebooks/#notebooks","title":"Notebooks","text":"<p>This directory contains various python notebooks which show how you might use the Risk Atlas nexus.</p> <ul> <li>Risk Atlas Nexus Quickstart An overview of library functionality</li> <li>Risk identification Uncover risks related to your usecase </li> <li>Auto assist questionnaire Auto-fill questionnaire using Chain of Thought or Few-Shot Examples</li> <li>AI Tasks identification Uncover ai tasks related to your usecase</li> </ul>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/","title":"Risk Atlas Nexus: Preparing taxonomy mappings","text":"In\u00a0[\u00a0]: Copied! <pre>import os\n\nfrom sssom_schema import Mapping, MappingSet\nfrom sssom.sssom_document import MappingSetDocument \nfrom sssom.util import MappingSetDataFrame \nfrom sssom.writers import write_table\nfrom curies import Converter\nfrom enum import Enum\n\nfrom risk_atlas_nexus import RiskAtlasNexus\n\nfrom risk_atlas_nexus.blocks.inference import (\n    RITSInferenceEngine,\n    WMLInferenceEngine,\n    OllamaInferenceEngine,\n    VLLMInferenceEngine,\n)\nfrom risk_atlas_nexus.blocks.inference.params import (\n    InferenceEngineCredentials,\n    RITSInferenceEngineParams,\n    WMLInferenceEngineParams,\n    OllamaInferenceEngineParams,\n    VLLMInferenceEngineParams,\n)\n</pre> import os  from sssom_schema import Mapping, MappingSet from sssom.sssom_document import MappingSetDocument  from sssom.util import MappingSetDataFrame  from sssom.writers import write_table from curies import Converter from enum import Enum  from risk_atlas_nexus import RiskAtlasNexus  from risk_atlas_nexus.blocks.inference import (     RITSInferenceEngine,     WMLInferenceEngine,     OllamaInferenceEngine,     VLLMInferenceEngine, ) from risk_atlas_nexus.blocks.inference.params import (     InferenceEngineCredentials,     RITSInferenceEngineParams,     WMLInferenceEngineParams,     OllamaInferenceEngineParams,     VLLMInferenceEngineParams, )  In\u00a0[\u00a0]: Copied! <pre>#inference_engine = None\n\ninference_engine = RITSInferenceEngine(\n    model_name_or_path=\"ibm/granite-20b-code-instruct\",\n    credentials={\n        \"api_key\": \"&lt;YOUR_API_KEY&gt;\",\n        \"api_url\": \"&lt;YOUR_API_URL&gt;\",\n    },\n    parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7),\n)\n\nclass MappingMethod(Enum):\n    SEMANTIC = \"SEMANTIC\"\n    INFERENCE = \"INFERENCE\"\n\n\ndef prepare_mapping_metadata(cm) -&gt; MappingSet:\n    mapping_set_metadata = MappingSet(license=cm[\"license\"], curie_map=cm[\"curie_map\"], mapping_set_id=cm[\"mapping_set_id\"], mapping_set_description=cm[\"mapping_set_description\"], mapping_date=cm[\"mapping_date\"])\n    return mapping_set_metadata\n\ndef prepare_mapping_block(new_risks, existing_risks, new_prefix, mapping_method=MappingMethod.SEMANTIC):\n    ran = RiskAtlasNexus()\n    mappings = ran.generate_proposed_mappings(new_risks=new_risks, existing_risks=existing_risks, inference_engine=inference_engine, new_prefix=new_prefix, mapping_method=mapping_method)\n    return mappings\n\ndef combine_blocks_and_write_to_file(cm, metadata, mappings, path):\n    metadata.mappings = mappings\n    converter = Converter.from_prefix_map(cm[\"curie_map\"])\n    document = MappingSetDocument(mapping_set=metadata, converter=converter)\n    print(f\"\\n# The mapping set document instance has been prepared.\") \n    msdf = MappingSetDataFrame.from_mapping_set_document(document)\n    print(f\"\\n# The mapping set dataframe instance has been prepared.\") \n    with open(path, \"w\") as tmp_file:\n        write_table(msdf, tmp_file)\n</pre> #inference_engine = None  inference_engine = RITSInferenceEngine(     model_name_or_path=\"ibm/granite-20b-code-instruct\",     credentials={         \"api_key\": \"\",         \"api_url\": \"\",     },     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7), )  class MappingMethod(Enum):     SEMANTIC = \"SEMANTIC\"     INFERENCE = \"INFERENCE\"   def prepare_mapping_metadata(cm) -&gt; MappingSet:     mapping_set_metadata = MappingSet(license=cm[\"license\"], curie_map=cm[\"curie_map\"], mapping_set_id=cm[\"mapping_set_id\"], mapping_set_description=cm[\"mapping_set_description\"], mapping_date=cm[\"mapping_date\"])     return mapping_set_metadata  def prepare_mapping_block(new_risks, existing_risks, new_prefix, mapping_method=MappingMethod.SEMANTIC):     ran = RiskAtlasNexus()     mappings = ran.generate_proposed_mappings(new_risks=new_risks, existing_risks=existing_risks, inference_engine=inference_engine, new_prefix=new_prefix, mapping_method=mapping_method)     return mappings  def combine_blocks_and_write_to_file(cm, metadata, mappings, path):     metadata.mappings = mappings     converter = Converter.from_prefix_map(cm[\"curie_map\"])     document = MappingSetDocument(mapping_set=metadata, converter=converter)     print(f\"\\n# The mapping set document instance has been prepared.\")      msdf = MappingSetDataFrame.from_mapping_set_document(document)     print(f\"\\n# The mapping set dataframe instance has been prepared.\")      with open(path, \"w\") as tmp_file:         write_table(msdf, tmp_file)  In\u00a0[\u00a0]: Copied! <pre>import yaml\ncm = yaml.safe_load(\"\"\"\ncurie_map:\n ibm-risk-atlas: https://www.ibm.com/docs/en/watsonx/saas?topic=\n semapv: https://w3id.org/semapv/vocab/\n skos: http://www.w3.org/2004/02/skos/core#\n ailuminate-v1.0: https://mlcommons.org/ailuminate/\n credo-ucf: https://arxiv.org/pdf/2503.05937v1/\n ibm-granite-guardian: https://arxiv.org/abs/2412.07724\n ibm-risk-atlas: https://www.ibm.com/docs/en/watsonx/saas?topic=\n nist-ai-rmf: https://www.nist.gov/itl/ai-risk-management-framework/\n mit-ai-risk-repository: https://airisk.mit.edu/\n owasp-llm-2.0: https://owasp.org/www-project-top-10-for-large-language-model-applications/\nmapping_set_id: https://github.com/IBM/risk-atlas-nexus/tree/main/src/data/mappings/ailuminate.tsv\nmapping_set_description: Mapping from IBM AI Risk Atlas to AILuminate benchmark\nlicense: https://www.apache.org/licenses/LICENSE-2.0.html\nmapping_date: \"2025-01-29\"\n\"\"\")\n\nprint(f\"\\n# The YAML you will use has been prepared.\") \nprint(cm)\n</pre> import yaml cm = yaml.safe_load(\"\"\" curie_map:  ibm-risk-atlas: https://www.ibm.com/docs/en/watsonx/saas?topic=  semapv: https://w3id.org/semapv/vocab/  skos: http://www.w3.org/2004/02/skos/core#  ailuminate-v1.0: https://mlcommons.org/ailuminate/  credo-ucf: https://arxiv.org/pdf/2503.05937v1/  ibm-granite-guardian: https://arxiv.org/abs/2412.07724  ibm-risk-atlas: https://www.ibm.com/docs/en/watsonx/saas?topic=  nist-ai-rmf: https://www.nist.gov/itl/ai-risk-management-framework/  mit-ai-risk-repository: https://airisk.mit.edu/  owasp-llm-2.0: https://owasp.org/www-project-top-10-for-large-language-model-applications/ mapping_set_id: https://github.com/IBM/risk-atlas-nexus/tree/main/src/data/mappings/ailuminate.tsv mapping_set_description: Mapping from IBM AI Risk Atlas to AILuminate benchmark license: https://www.apache.org/licenses/LICENSE-2.0.html mapping_date: \"2025-01-29\" \"\"\")  print(f\"\\n# The YAML you will use has been prepared.\")  print(cm) In\u00a0[\u00a0]: Copied! <pre>ms_metadata = prepare_mapping_metadata(cm)\nprint(f\"\\n# The mapping set metadata instance has been prepared.\") \nms_metadata\n</pre> ms_metadata = prepare_mapping_metadata(cm) print(f\"\\n# The mapping set metadata instance has been prepared.\")  ms_metadata In\u00a0[\u00a0]: Copied! <pre># Prepare the mapping block (manual_mb)\nm1 = Mapping(predicate_id='skos:relatedMatch', mapping_justification='semapv:ManualMappingCuration', subject_id='new_prefix:my-risk-1-id', subject_label='Violent Crimes', object_id='ibm-risk-atlas:atlas-harmful-output', object_label=' Harmful output', author_id=['my_author_email_address'], mapping_date='2025-03-31', comment='A sample mapping')\nm2 = Mapping(predicate_id='rdfs:seeAlso', mapping_justification='semapv:ManualMappingCuration', subject_id='new_prefix:my-risk-2-id', subject_label='Nonviolent Crimes', object_id='ibm-risk-atlas:atlas-harmful-output', object_label=' Harmful output', author_id=['my_author_email_address'], mapping_date='2025-03-31',  comment='A sample mapping')\nmanual_mb = [m1, m2]\n\n# bring it together with metadata and write to file\ntmp_path = os.path.join(\"test_write_sssom_dataframe_manual.tsv\")\ncombine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=manual_mb, path=tmp_path)\n</pre> # Prepare the mapping block (manual_mb) m1 = Mapping(predicate_id='skos:relatedMatch', mapping_justification='semapv:ManualMappingCuration', subject_id='new_prefix:my-risk-1-id', subject_label='Violent Crimes', object_id='ibm-risk-atlas:atlas-harmful-output', object_label=' Harmful output', author_id=['my_author_email_address'], mapping_date='2025-03-31', comment='A sample mapping') m2 = Mapping(predicate_id='rdfs:seeAlso', mapping_justification='semapv:ManualMappingCuration', subject_id='new_prefix:my-risk-2-id', subject_label='Nonviolent Crimes', object_id='ibm-risk-atlas:atlas-harmful-output', object_label=' Harmful output', author_id=['my_author_email_address'], mapping_date='2025-03-31',  comment='A sample mapping') manual_mb = [m1, m2]  # bring it together with metadata and write to file tmp_path = os.path.join(\"test_write_sssom_dataframe_manual.tsv\") combine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=manual_mb, path=tmp_path)  In\u00a0[\u00a0]: Copied! <pre># Set up Risk Atlas Nexus with all risks or the subset of risks you want to map to.\n# In this case, specify IBM AI Risk Atlas only\nran = RiskAtlasNexus()\nall_risks = ran.get_all_risks(taxonomy=\"ibm-risk-atlas\")\n\nprint(f\"\\n# The taxonomy ibm-risk-atlas has {len(all_risks)} risks you can map to.\") # 67\nprint(all_risks[:2])\n\n# Set up a second instance Risk Atlas Nexus with only the risks you are proposing to map\n\n# If your risks exist already in the Atlas, just do:\nmy_taxonomy_id = \"ailuminate-v1.0\" # for example\nrisks_to_map = ran.get_all_risks(taxonomy=my_taxonomy_id)\n\n# else if they do not yet exist, use the lines below\n'''\n# Create an instance which extends the graph with your custom definitions\nmy_base_dir='&lt;my_user_input_dir_path&gt;' # path where your custom yaml is\nmy_extended_ran = RiskAtlasNexus(base_dir=my_base_dir)\nrisks_to_map = my_extended_ran.get_all_risks(taxonomy=\"&lt;my-taxonomy-id&gt;\")\n'''\n\nprint(f\"\\n# The taxonomy &lt;my-taxonomy-id&gt; has {len(risks_to_map)} risks you can map to.\") \nprint(risks_to_map[:2])\n\nauto_semantic_mb = prepare_mapping_block(risks_to_map, all_risks, \"new_prefix\", \"SEMANTIC\")\nprint(f\"\\n# The mapping set block instance has been prepared.\") \n\n# bring it together with metadata and write to file\ntmp_path = os.path.join(\"test_write_sssom_dataframe_automatic_semantic.tsv\")\ncombine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=auto_semantic_mb, path=tmp_path)\n</pre> # Set up Risk Atlas Nexus with all risks or the subset of risks you want to map to. # In this case, specify IBM AI Risk Atlas only ran = RiskAtlasNexus() all_risks = ran.get_all_risks(taxonomy=\"ibm-risk-atlas\")  print(f\"\\n# The taxonomy ibm-risk-atlas has {len(all_risks)} risks you can map to.\") # 67 print(all_risks[:2])  # Set up a second instance Risk Atlas Nexus with only the risks you are proposing to map  # If your risks exist already in the Atlas, just do: my_taxonomy_id = \"ailuminate-v1.0\" # for example risks_to_map = ran.get_all_risks(taxonomy=my_taxonomy_id)  # else if they do not yet exist, use the lines below ''' # Create an instance which extends the graph with your custom definitions my_base_dir='' # path where your custom yaml is my_extended_ran = RiskAtlasNexus(base_dir=my_base_dir) risks_to_map = my_extended_ran.get_all_risks(taxonomy=\"\") '''  print(f\"\\n# The taxonomy  has {len(risks_to_map)} risks you can map to.\")  print(risks_to_map[:2])  auto_semantic_mb = prepare_mapping_block(risks_to_map, all_risks, \"new_prefix\", \"SEMANTIC\") print(f\"\\n# The mapping set block instance has been prepared.\")   # bring it together with metadata and write to file tmp_path = os.path.join(\"test_write_sssom_dataframe_automatic_semantic.tsv\") combine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=auto_semantic_mb, path=tmp_path)  In\u00a0[\u00a0]: Copied! <pre>ran = RiskAtlasNexus()\n\nnew_t_ids = [\n    #'ai-risk-taxonomy',\n    'ibm-risk-atlas',\n    'nist-ai-rmf',\n    'ailuminate-v1.0',\n    'mit-ai-risk-repository',\n    'ibm-granite-guardian',\n    'owasp-llm-2.0',\n    'credo-ucf'\n]\n\n# to get around service interruptions, add the completed ones here so they are not done again\ncompleted = ['ibm-risk-atlas']\n\nfor t_id in new_t_ids:\n    mappings = []\n    if t_id not in completed:\n        risks_to_map = ran.get_all_risks(taxonomy=t_id)\n        print(f\"\\n# Proposing matches for taxonomy {t_id} ...\") \n        for taxononomy in ran.get_all_taxonomies():\n            if (taxononomy.id != t_id) and (taxononomy.id !='ai-risk-taxonomy'):\n                t_risks = ran.get_all_risks(taxonomy=taxononomy.id)\n                print(f\"\\n# processing {len(t_risks)} from taxonomy {taxononomy.id}.\") \n                auto_semantic_mb = prepare_mapping_block(risks_to_map, t_risks, taxononomy.id, \"SEMANTIC\")\n                auto_rits_mb = prepare_mapping_block(risks_to_map, t_risks, taxononomy.id, \"INFERENCE\")\n                print(f\"\\n# appending sem: {len(auto_semantic_mb)}, rits: {len(auto_rits_mb)}.\") \n                mappings = mappings + auto_semantic_mb + auto_rits_mb\n            else:\n                pass\n    if t_id not in completed:       \n        # bring it together with metadata and write to file\n        tmp_path = os.path.join(\"test_write_sssom_auto_\" + t_id + \".tsv\")\n        combine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=mappings, path=tmp_path)\n        print(f\"\\n# Writing {len(mappings)} mappings to {tmp_path}.\") \n</pre> ran = RiskAtlasNexus()  new_t_ids = [     #'ai-risk-taxonomy',     'ibm-risk-atlas',     'nist-ai-rmf',     'ailuminate-v1.0',     'mit-ai-risk-repository',     'ibm-granite-guardian',     'owasp-llm-2.0',     'credo-ucf' ]  # to get around service interruptions, add the completed ones here so they are not done again completed = ['ibm-risk-atlas']  for t_id in new_t_ids:     mappings = []     if t_id not in completed:         risks_to_map = ran.get_all_risks(taxonomy=t_id)         print(f\"\\n# Proposing matches for taxonomy {t_id} ...\")          for taxononomy in ran.get_all_taxonomies():             if (taxononomy.id != t_id) and (taxononomy.id !='ai-risk-taxonomy'):                 t_risks = ran.get_all_risks(taxonomy=taxononomy.id)                 print(f\"\\n# processing {len(t_risks)} from taxonomy {taxononomy.id}.\")                  auto_semantic_mb = prepare_mapping_block(risks_to_map, t_risks, taxononomy.id, \"SEMANTIC\")                 auto_rits_mb = prepare_mapping_block(risks_to_map, t_risks, taxononomy.id, \"INFERENCE\")                 print(f\"\\n# appending sem: {len(auto_semantic_mb)}, rits: {len(auto_rits_mb)}.\")                  mappings = mappings + auto_semantic_mb + auto_rits_mb             else:                 pass     if t_id not in completed:                # bring it together with metadata and write to file         tmp_path = os.path.join(\"test_write_sssom_auto_\" + t_id + \".tsv\")         combine_blocks_and_write_to_file(cm=cm, metadata=ms_metadata, mappings=mappings, path=tmp_path)         print(f\"\\n# Writing {len(mappings)} mappings to {tmp_path}.\")"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#risk-atlas-nexus-preparing-taxonomy-mappings","title":"Risk Atlas Nexus: Preparing taxonomy mappings\u00b6","text":""},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#goal-prepare-your-own-mapping-files","title":"Goal: prepare your own mapping files\u00b6","text":"<p>This notebook aims to assist in the understanding of mapping files and aid the user in preparing their own mapping file for risks from a given taxonomy.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#dependencies","title":"Dependencies\u00b6","text":"<p>Tip: Ensure you have followed installation instructions for the risk_atlas_nexus library</p> <pre><code>git clone git@github.com:IBM/risk-atlas-nexus.git\ncd risk-atlas-nexus\npython -m venv vrisk-atlas-nexus\nsource vrisk-atlas-nexus/bin/activate\npip install -e .\n</code></pre>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#introduction","title":"Introduction\u00b6","text":""},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#how-are-mappings-stored-in-risk-atlas-nexus","title":"How are mappings stored in Risk Atlas Nexus?\u00b6","text":"<p>To express some semantically meaningful mapping between risks from different taxonomies, Risk Atlas Nexus makes use of the Simple Standard for Sharing Ontological Mappings (SSSOM) . The mappings are maintained in SSOM TSV files and are converted to LinkML data YAML using Python helper scripts.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#anatomy-of-a-tsv-file","title":"Anatomy of a TSV file\u00b6","text":"<p>A SSSOM/TSV file contains one mapping set object, composed of two different parts:</p> <ul> <li>the metadata block, which contains essentially all the slots of a MappingSet class except the mappings slot;</li> <li>the mappings block (also called the TSV section), which contains the individual mappings.</li> </ul>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#find-out-more","title":"Find out more\u00b6","text":"<ul> <li>Read about The SSSOM/TSV serialisation format</li> </ul>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#scenario-prepare-new-mapping-file","title":"Scenario: prepare new mapping file\u00b6","text":"<p>Consider a case where you would like to generate mappings for your new list of risk against risks already in the nexus graph. In this notebook we can see how to prepare a TSV file either:</p> <ol> <li>Manually</li> <li>Experimental: semi-automatically, with the aid of library functions as shown below</li> </ol> <p>Note: In both cases it is strongly recommended mappings should be carefully reviewed before being used or contributed to the Risk Atlas Nexus project.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#helper-functions","title":"Helper functions\u00b6","text":"<p>A few utility functions to generate the mapping block output are provided below.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#creating-a-tsv-file","title":"Creating a TSV file:\u00b6","text":""},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#prepare-the-metadata-block","title":"Prepare the metadata block\u00b6","text":"<p>The variables declared in yaml in the cell below will be used to below to create a MappingSet instance to create the mapping metadata. Edit them for your case, and remember to add your new prefix to curie map.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#manual-creation","title":"Manual creation\u00b6","text":"<p>You can choose to prepare a list of mappings manually, to populate the mapping block. These should be in Mapping format.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#auto-creation","title":"Auto creation\u00b6","text":"<p>Alternatively, can choose to prepare a list of mappings semi-automatically, to populate the mapping block, using library methods.  This takes as input two lists of risks which are to be mapped to each other.</p> <p>Two methods are available to propose mappings:</p> <ul> <li>Semantic (queries an embedding of available risks)</li> <li>Inference (LLM query to find if risks might be related)</li> </ul>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#usecase-get-proposed-risk-mappings-across-the-taxonomies","title":"Usecase: Get proposed risk mappings across the taxonomies\u00b6","text":"<p>The following code would produce suggestesd mappings across the taxonomies and write it out to TSV files. This simple implementation is not efficient but could be used as a starting point.</p>"},{"location":"examples/notebooks/Prepare_taxonomy_mappings/#next-steps","title":"Next steps\u00b6","text":"<ol> <li>Verify the mappings</li> <li>Lift them to YAML format,</li> <li>Save them in the knowledge graph data mapping folder</li> </ol>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/","title":"Risk Atlas Nexus: Quick Start Guide","text":"In\u00a0[\u00a0]: Copied! <pre># imports\nfrom risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology import Risk\nfrom risk_atlas_nexus import RiskAtlasNexus\n</pre> # imports from risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology import Risk from risk_atlas_nexus import RiskAtlasNexus <p>Risk Atlas Nexus project provides an ontology combining an AI risk view (taxonomies, risks, actions) with an AI model view (AI systems, AI models, model evaluations) into one coherent schema.</p> <p>AI Risks were collected from IBM Risk Atlas, IBM Granite Guardian, MIT AI Risk Repository, NIST Artificial Intelligence Risk Management Framework: Generative Artificial Intelligence Profile, the AILuminate Benchmark, Credo's Unified Control Framework, and OWASP Top 10 for Large Language Model Applications.</p> <p>You can use the python library methods to quickly explore available risks, relations and actions, as well as to detect potential risks in your usecase.</p> <p>Important references:</p> <ul> <li>LinkML schema documentation</li> <li>LinkML instance data for an example knowledge graph</li> </ul> In\u00a0[\u00a0]: Copied! <pre>ran = RiskAtlasNexus() # no args, so default configuration \n\nall_risks = ran.get_all_risks()\nprint(f\"\\n# Total risks available : {len(all_risks)}\") # 480\n\n# Let's just print out a few for now\nprint(f\"\\n# First 2 risks in list \") \nprint(all_risks[:2])\n</pre> ran = RiskAtlasNexus() # no args, so default configuration   all_risks = ran.get_all_risks() print(f\"\\n# Total risks available : {len(all_risks)}\") # 480  # Let's just print out a few for now print(f\"\\n# First 2 risks in list \")  print(all_risks[:2])  In\u00a0[\u00a0]: Copied! <pre># Each risk is returned as a pydantic \"Risk\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology\ntoxic_risk = ran.get_risk(id='atlas-toxic-output')\nprint(f\"\\n# Get a risk by ID, 'atlas-toxic-output'  \") \nprint(dict(toxic_risk))\n\n# Explore related risks\nprint(f\"\\n# Get full entry for each related risks by ID for 'atlas-toxic-output' \") \nrelated_risks = ran.get_related_risks(id='atlas-toxic-output')\nprint(related_risks)\n</pre>  # Each risk is returned as a pydantic \"Risk\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology toxic_risk = ran.get_risk(id='atlas-toxic-output') print(f\"\\n# Get a risk by ID, 'atlas-toxic-output'  \")  print(dict(toxic_risk))  # Explore related risks print(f\"\\n# Get full entry for each related risks by ID for 'atlas-toxic-output' \")  related_risks = ran.get_related_risks(id='atlas-toxic-output') print(related_risks)  In\u00a0[\u00a0]: Copied! <pre># Explore related risks\nprint(f\"\\n# Get the related risk ids by ID for 'atlas-toxic-output'\") \nrelated_risk_ids = ran.get_related_risks(id='atlas-toxic-output')\nprint(related_risk_ids)\n\n# For related risks, maybe you might want the full risk to be returned, instead of just the ID\nprint(f\"\\n# Get full entry for each related risks by ID for 'atlas-toxic-output' \") \nrelated_risks = ran.get_related_risks(id='atlas-toxic-output')\nprint(related_risks)\n</pre> # Explore related risks print(f\"\\n# Get the related risk ids by ID for 'atlas-toxic-output'\")  related_risk_ids = ran.get_related_risks(id='atlas-toxic-output') print(related_risk_ids)  # For related risks, maybe you might want the full risk to be returned, instead of just the ID print(f\"\\n# Get full entry for each related risks by ID for 'atlas-toxic-output' \")  related_risks = ran.get_related_risks(id='atlas-toxic-output') print(related_risks) In\u00a0[\u00a0]: Copied! <pre>all_actions = ran.get_all_actions()\nprint(f\"\\n# Total actions available : {len(all_actions)}\") # 237\n\n# Let's just print out a few for now\nprint(f\"\\n# First 2 actions in list \") \nprint(all_actions[:2])\n\n# View an individual action by ID. Each action is returned as a pydantic \"Action\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology\nan_action = ran.get_action_by_id('GV-1.3-001')\nprint(f\"\\n# Get an action by ID, 'GV-1.3-001' \") \nprint(dict(an_action))\n\n# Get any actions for the IBM risk atlas risk toxic output\nprint(f\"\\n# Get the linked actions by ID for 'atlas-toxic-output'\") \nactions_for_toxic_output = ran.get_related_actions(id='atlas-toxic-output')\nprint(actions_for_toxic_output) # 0 expected\n\n# Hmm, no linked actions recorded.  Let's try the related risks?\nrelated_actions = []\nrelated_risks = ran.get_related_risks(id='atlas-toxic-output')\nfor a_risk in related_risks:\n    related_actions.extend(ran.get_related_actions(id=a_risk.id))\n\nprint(f\"\\n# Get the actions for the risks which are marked as related to'atlas-toxic-output'\") \nprint(related_actions)\n</pre> all_actions = ran.get_all_actions() print(f\"\\n# Total actions available : {len(all_actions)}\") # 237  # Let's just print out a few for now print(f\"\\n# First 2 actions in list \")  print(all_actions[:2])  # View an individual action by ID. Each action is returned as a pydantic \"Action\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology an_action = ran.get_action_by_id('GV-1.3-001') print(f\"\\n# Get an action by ID, 'GV-1.3-001' \")  print(dict(an_action))  # Get any actions for the IBM risk atlas risk toxic output print(f\"\\n# Get the linked actions by ID for 'atlas-toxic-output'\")  actions_for_toxic_output = ran.get_related_actions(id='atlas-toxic-output') print(actions_for_toxic_output) # 0 expected  # Hmm, no linked actions recorded.  Let's try the related risks? related_actions = [] related_risks = ran.get_related_risks(id='atlas-toxic-output') for a_risk in related_risks:     related_actions.extend(ran.get_related_actions(id=a_risk.id))  print(f\"\\n# Get the actions for the risks which are marked as related to'atlas-toxic-output'\")  print(related_actions)  In\u00a0[\u00a0]: Copied! <pre>all_risk_controls = ran.get_all_risk_controls()\nprint(f\"\\n# Total risk controls available : {len(all_risk_controls)}\") # 13\n\n# Let's just print out a few for now\nprint(f\"\\n# First 2 risk controls in list \") \nprint(all_risk_controls[:2])\n\n# View an individual risk control by ID. Each risk control is returned as a pydantic \"RiskControl\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology\na_risk_control = ran.get_risk_control('gg-function-call-detection')\nprint(f\"\\n# Get a risk control by ID, 'gg-function-call-detection' \") \nprint(dict(a_risk_control))\n\n# Get any risk controls for the IBM risk atlas risk harmful output\nprint(f\"\\n# Get the linked risk controls by ID for 'granite-function-call\") \ncontrols_for_granite_function_call = ran.get_related_risk_controls(id='granite-function-call')\nprint(controls_for_granite_function_call) # 1 expected\n</pre> all_risk_controls = ran.get_all_risk_controls() print(f\"\\n# Total risk controls available : {len(all_risk_controls)}\") # 13  # Let's just print out a few for now print(f\"\\n# First 2 risk controls in list \")  print(all_risk_controls[:2])  # View an individual risk control by ID. Each risk control is returned as a pydantic \"RiskControl\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology a_risk_control = ran.get_risk_control('gg-function-call-detection') print(f\"\\n# Get a risk control by ID, 'gg-function-call-detection' \")  print(dict(a_risk_control))  # Get any risk controls for the IBM risk atlas risk harmful output print(f\"\\n# Get the linked risk controls by ID for 'granite-function-call\")  controls_for_granite_function_call = ran.get_related_risk_controls(id='granite-function-call') print(controls_for_granite_function_call) # 1 expected  In\u00a0[\u00a0]: Copied! <pre>all_taxonomies = ran.get_all_taxonomies()\nprint(f\"\\n# Total taxonomies available : {len(all_taxonomies)}\") # 8\nprint(f\"\\n# Taxonomy IDs available : {[taxonomy.id for taxonomy in all_taxonomies]}\") # 8\n\n# Let's just print out a few for now\nprint(f\"\\n# First 2 taxonomies in list \") \nprint(all_taxonomies[:2])\n\n# View an individual taxonomy by ID. Each taxonomy is returned as a pydantic \"RiskTaxonomy\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology\na_taxonomy = ran.get_taxonomy_by_id('nist-ai-rmf')\nprint(f\"\\n# Get a taxonomy by ID, 'nist-ai-rmf' \") \nprint(dict(a_taxonomy))\n</pre> all_taxonomies = ran.get_all_taxonomies() print(f\"\\n# Total taxonomies available : {len(all_taxonomies)}\") # 8 print(f\"\\n# Taxonomy IDs available : {[taxonomy.id for taxonomy in all_taxonomies]}\") # 8  # Let's just print out a few for now print(f\"\\n# First 2 taxonomies in list \")  print(all_taxonomies[:2])  # View an individual taxonomy by ID. Each taxonomy is returned as a pydantic \"RiskTaxonomy\" object as defined in risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology a_taxonomy = ran.get_taxonomy_by_id('nist-ai-rmf') print(f\"\\n# Get a taxonomy by ID, 'nist-ai-rmf' \")  print(dict(a_taxonomy))  <p>We will look at the risks which are coming from NIST AI Risk Management Framework (AI RMF)</p> In\u00a0[\u00a0]: Copied! <pre>all_nist_risks = ran.get_all_risks(taxonomy='nist-ai-rmf')\nprint(f\"\\n# Total risks available : {len(all_risks)}\") # 480\nprint(f\"\\n# Total NIST risks available : {len(all_nist_risks)}\") # 12\n\n# Let's just print out a few for now\nprint(f\"\\n# First 2 risks in NIST risk list \") \nprint(all_nist_risks[:2])\n</pre> all_nist_risks = ran.get_all_risks(taxonomy='nist-ai-rmf') print(f\"\\n# Total risks available : {len(all_risks)}\") # 480 print(f\"\\n# Total NIST risks available : {len(all_nist_risks)}\") # 12  # Let's just print out a few for now print(f\"\\n# First 2 risks in NIST risk list \")  print(all_nist_risks[:2]) In\u00a0[\u00a0]: Copied! <pre>ran.get_all_risks(taxonomy='ai-risk-taxonomy')\n</pre> ran.get_all_risks(taxonomy='ai-risk-taxonomy') In\u00a0[\u00a0]: Copied! <pre># Create an instance which extends the graph with your custom definitions\nmy_base_dir='&lt;my_user_input_dir_path&gt;'\nmy_extended_ran = RiskAtlasNexus(base_dir=my_base_dir)\nmy_extended_risks = my_extended_ran.get_all_risks()\nprint(f\"\\n# Total risks available : {len(my_extended_risks)}\") \n</pre> # Create an instance which extends the graph with your custom definitions my_base_dir='' my_extended_ran = RiskAtlasNexus(base_dir=my_base_dir) my_extended_risks = my_extended_ran.get_all_risks() print(f\"\\n# Total risks available : {len(my_extended_risks)}\")   In\u00a0[\u00a0]: Copied! <pre># Export the total graph\nmy_output_dir='&lt;my_output_dir_path&gt;'\nmy_extended_ran.export(my_output_dir)\nprint(f\"\\n# Graph exported to: {my_output_dir}\") \n\n# Check your risk is in the graph\nmy_risk = ran.get_risk(id='my-own-risk')\nprint(f\"\\n# Get my own risk by ID, 'my-own-risk'  \") \nprint(dict(my_risk))\n</pre> # Export the total graph my_output_dir='' my_extended_ran.export(my_output_dir) print(f\"\\n# Graph exported to: {my_output_dir}\")   # Check your risk is in the graph my_risk = ran.get_risk(id='my-own-risk') print(f\"\\n# Get my own risk by ID, 'my-own-risk'  \")  print(dict(my_risk))"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#risk-atlas-nexus-quick-start-guide","title":"Risk Atlas Nexus: Quick Start Guide\u00b6","text":""},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#dependencies","title":"Dependencies\u00b6","text":"<p>Tip: Ensure you have followed installation instructions for the risk_atlas_nexus library</p> <pre><code>git clone git@github.com:IBM/risk-atlas-nexus.git\ncd risk-atlas-nexus\npython -m venv vrisk-atlas-nexus\nsource vrisk-atlas-nexus/bin/activate\npip install -e .\n</code></pre>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#about-this-notebook","title":"About this notebook\u00b6","text":"<p>This notebook contains three sections. Section 1 showcases the default functionality, while Sections 2-3 exhibit useful configurations.</p> <ol> <li>How to use Risk Atlas Nexus with default configuration?</li> </ol> <p>In this section, we demonstrate a default method to use Risk Alas Nexus to explore risks and related risks</p> <ol> <li>How to use Risk Atlas Nexus to filter results for specific taxonomy?</li> </ol> <p>We provide guidance on filtering the results for a specific taxonomies. This section highlights the ability to filter the taxonomy content.</p> <ol> <li>Bring Your Own Taxonomies/Risks/Actions</li> </ol> <p>Risk Atlas Nexus allows users to define custom Taxonomies/Risks/Actions. In this section, we will show you how to load and configure your own data instances.</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#1-use-case-risk-atlas-nexus-with-default-configuration","title":"1. Use case: Risk Atlas Nexus with default configuration\u00b6","text":"<p>Create a new instance of Risk Atlas Nexus and use it to explore the risks.  By default, it loads in all data from data folder</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#11-explore-risk-object","title":"1.1 Explore risk object\u00b6","text":""},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#12-related-risks","title":"1.2 Related risks\u00b6","text":""},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#13-risk-actions","title":"1.3 Risk Actions\u00b6","text":"<p>Each risk may have the relationship 'hasRelatedAction', a relationship where an entity relates to an action.  We can view all actions available, or drill down into how specific actions are related to a risk.</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#14-risk-controls","title":"1.4 Risk Controls\u00b6","text":"<p>Each risk may have the relationship 'isDetectedBy', a relationship where a risk, risk source, consequence, or impact is detected by a risk control.  We can view all risk controls available, or drill down into how specific controls are related to a risk.</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#2-use-case-risk-atlas-nexus-results-filtered-by-taxonomies","title":"2. Use case: Risk Atlas Nexus results filtered by taxonomies\u00b6","text":"<p>First, we will examine which taxonomies are present.</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#3-usecase-bring-your-own-taxonomiesrisksactions","title":"3. Usecase: Bring Your Own Taxonomies/Risks/Actions\u00b6","text":"<p>You can add your own risk definitions by adding yaml to your own directory and providing the path as an argument to the RAN when creating it. Ensure the risks comply with the schema</p>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#31-add-your-yaml-definitions","title":"3.1 Add your YAML definitions\u00b6","text":"<p>Add one or more yaml files to your chosen directory.  For example, to add a new risk, create a file with the following content .</p> <pre><code>- id: my-own-risk\n  name: A very risky AI behaviour\n  description: An LLM-based system is often very risky\n  isDefinedByTaxonomy: my-taxonomy\n</code></pre>"},{"location":"examples/notebooks/Risk_Atlas_Nexus_Quickstart/#32-exporting-your-graph","title":"3.2 Exporting your graph\u00b6","text":"<p>You may wish to export your extended graph.</p>"},{"location":"examples/notebooks/ai_tasks_identification/","title":"AI Tasks identification","text":"In\u00a0[\u00a0]: Copied! <pre>from risk_atlas_nexus.blocks.inference import (\n    RITSInferenceEngine,\n    WMLInferenceEngine,\n    OllamaInferenceEngine,\n    VLLMInferenceEngine,\n)\nfrom risk_atlas_nexus.blocks.inference.params import (\n    InferenceEngineCredentials,\n    RITSInferenceEngineParams,\n    WMLInferenceEngineParams,\n    OllamaInferenceEngineParams,\n    VLLMInferenceEngineParams,\n)\nfrom risk_atlas_nexus.library import RiskAtlasNexus\n</pre> from risk_atlas_nexus.blocks.inference import (     RITSInferenceEngine,     WMLInferenceEngine,     OllamaInferenceEngine,     VLLMInferenceEngine, ) from risk_atlas_nexus.blocks.inference.params import (     InferenceEngineCredentials,     RITSInferenceEngineParams,     WMLInferenceEngineParams,     OllamaInferenceEngineParams,     VLLMInferenceEngineParams, ) from risk_atlas_nexus.library import RiskAtlasNexus In\u00a0[\u00a0]: Copied! <pre>inference_engine = WMLInferenceEngine(\n    model_name_or_path=\"ibm/granite-20b-code-instruct\",\n    credentials={\n        \"api_key\": \"WML_API_KEY\",\n        \"api_url\": \"WML_API_URL\",\n        \"project_id\": \"WML_PROJECT_ID\",\n    },\n    parameters=WMLInferenceEngineParams(\n        max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1\n    ),\n)\n\n# inference_engine = OllamaInferenceEngine(\n#     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\",\n#     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"),\n#     parameters=OllamaInferenceEngineParams(\n#         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1\n#     ),\n# )\n\n# inference_engine = VLLMInferenceEngine(\n#     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\",\n#     credentials=InferenceEngineCredentials(\n#         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\"\n#     ),\n#     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n\n# inference_engine = RITSInferenceEngine(\n#     model_name_or_path=\"ibm/granite-20b-code-instruct\",\n#     credentials={\n#         \"api_key\": \"RITS_API_KEY\",\n#         \"api_url\": \"RITS_API_URL\",\n#     },\n#     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n</pre> inference_engine = WMLInferenceEngine(     model_name_or_path=\"ibm/granite-20b-code-instruct\",     credentials={         \"api_key\": \"WML_API_KEY\",         \"api_url\": \"WML_API_URL\",         \"project_id\": \"WML_PROJECT_ID\",     },     parameters=WMLInferenceEngineParams(         max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1     ), )  # inference_engine = OllamaInferenceEngine( #     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\", #     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"), #     parameters=OllamaInferenceEngineParams( #         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1 #     ), # )  # inference_engine = VLLMInferenceEngine( #     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\", #     credentials=InferenceEngineCredentials( #         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\" #     ), #     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7), # )  # inference_engine = RITSInferenceEngine( #     model_name_or_path=\"ibm/granite-20b-code-instruct\", #     credentials={ #         \"api_key\": \"RITS_API_KEY\", #         \"api_url\": \"RITS_API_URL\", #     }, #     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7), # ) In\u00a0[\u00a0]: Copied! <pre>risk_atlas_nexus = RiskAtlasNexus()\n</pre> risk_atlas_nexus = RiskAtlasNexus() In\u00a0[\u00a0]: Copied! <pre>usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nrisks = risk_atlas_nexus.identify_ai_tasks_from_usecases(\n    usecases=[usecase],\n    inference_engine=inference_engine,\n)\n\nrisks\n</pre> usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  risks = risk_atlas_nexus.identify_ai_tasks_from_usecases(     usecases=[usecase],     inference_engine=inference_engine, )  risks"},{"location":"examples/notebooks/ai_tasks_identification/#this-notebook-illustrates-how-to-identify-ai-tasks-based-on-specific-use-cases","title":"This notebook illustrates how to identify AI tasks based on specific use cases.\u00b6","text":""},{"location":"examples/notebooks/ai_tasks_identification/#import-libraries","title":"Import libraries\u00b6","text":""},{"location":"examples/notebooks/ai_tasks_identification/#risk-atlas-nexus-uses-large-language-models-llms-to-infer-risks-dimensions-therefore-requires-access-to-llms-to-inference-or-call-the-model","title":"Risk Atlas Nexus uses Large Language Models (LLMs) to infer risks dimensions. Therefore requires access to LLMs to inference or call the model.\u00b6","text":"<p>Available Inference Engines: WML, Ollama, vLLM, RITS. Please follow the Inference APIs guide before going ahead.</p> <p>Note: RITS is intended solely for internal IBM use and requires TUNNELALL VPN for access.</p>"},{"location":"examples/notebooks/ai_tasks_identification/#create-an-instance-of-riskatlasnexus","title":"Create an instance of RiskAtlasNexus\u00b6","text":"<p>Note: (Optional) You can specify your own directory in <code>RiskAtlasNexus(base_dir=&lt;PATH&gt;)</code> to utilize custom AI ontologies. If left blank, the system will use the provided AI ontologies.</p>"},{"location":"examples/notebooks/ai_tasks_identification/#ai-tasks-identification-api","title":"AI Tasks Identification API\u00b6","text":"<p>RiskAtlasNexus.identify_ai_tasks_from_usecases()</p> <p>Params:</p> <ul> <li>usecases (List[str]): A List of strings describing AI usecases</li> <li>inference_engine (InferenceEngine): An LLM inference engine to identify AI tasks from usecases.</li> </ul>"},{"location":"examples/notebooks/autoassist_questionnaire/","title":"Auto assist questionnaire","text":"In\u00a0[1]: Copied! <pre>from risk_atlas_nexus.blocks.inference import (\n    RITSInferenceEngine,\n    WMLInferenceEngine,\n    OllamaInferenceEngine,\n    VLLMInferenceEngine,\n)\nfrom risk_atlas_nexus.blocks.inference.params import (\n    InferenceEngineCredentials,\n    RITSInferenceEngineParams,\n    WMLInferenceEngineParams,\n    OllamaInferenceEngineParams,\n    VLLMInferenceEngineParams,\n)\n\nfrom copy import deepcopy\nfrom risk_atlas_nexus.library import RiskAtlasNexus\n</pre> from risk_atlas_nexus.blocks.inference import (     RITSInferenceEngine,     WMLInferenceEngine,     OllamaInferenceEngine,     VLLMInferenceEngine, ) from risk_atlas_nexus.blocks.inference.params import (     InferenceEngineCredentials,     RITSInferenceEngineParams,     WMLInferenceEngineParams,     OllamaInferenceEngineParams,     VLLMInferenceEngineParams, )  from copy import deepcopy from risk_atlas_nexus.library import RiskAtlasNexus <pre>/Users/dhaval/Projects/Usage-Governance/risk-atlas-nexus/src/risk_atlas_nexus/toolkit/job_utils.py:2: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from tqdm.autonotebook import tqdm\n</pre> In\u00a0[\u00a0]: Copied! <pre>inference_engine = WMLInferenceEngine(\n    model_name_or_path=\"ibm/granite-20b-code-instruct\",\n    credentials={\n        \"api_key\": \"WML_API_KEY\",\n        \"api_url\": \"WML_API_URL\",\n        \"project_id\": \"WML_PROJECT_ID\",\n    },\n    parameters=WMLInferenceEngineParams(\n        max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1\n    ),\n)\n\n# inference_engine = OllamaInferenceEngine(\n#     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\",\n#     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"),\n#     parameters=OllamaInferenceEngineParams(\n#         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1\n#     ),\n# )\n\n# inference_engine = VLLMInferenceEngine(\n#     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\",\n#     credentials=InferenceEngineCredentials(\n#         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\"\n#     ),\n#     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n\n# inference_engine = RITSInferenceEngine(\n#     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\",\n#     credentials={\n#         \"api_key\": \"RITS_API_KEY\",\n#         \"api_url\": \"RITS_API_URL\",\n#     },\n#     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n</pre> inference_engine = WMLInferenceEngine(     model_name_or_path=\"ibm/granite-20b-code-instruct\",     credentials={         \"api_key\": \"WML_API_KEY\",         \"api_url\": \"WML_API_URL\",         \"project_id\": \"WML_PROJECT_ID\",     },     parameters=WMLInferenceEngineParams(         max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1     ), )  # inference_engine = OllamaInferenceEngine( #     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\", #     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"), #     parameters=OllamaInferenceEngineParams( #         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1 #     ), # )  # inference_engine = VLLMInferenceEngine( #     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\", #     credentials=InferenceEngineCredentials( #         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\" #     ), #     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7), # )  # inference_engine = RITSInferenceEngine( #     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\", #     credentials={ #         \"api_key\": \"RITS_API_KEY\", #         \"api_url\": \"RITS_API_URL\", #     }, #     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7), # ) <pre>[2025-03-20 10:47:11:888] - INFO - RiskAtlasNexus - Created WML inference engine.\n</pre> In\u00a0[3]: Copied! <pre>risk_atlas_nexus = RiskAtlasNexus()\n</pre> risk_atlas_nexus = RiskAtlasNexus() <pre>[2025-03-20 10:47:11:960] - INFO - RiskAtlasNexus - Created RiskAtlasNexus instance. Base_dir: None\n</pre> In\u00a0[4]: Copied! <pre>import json\nimport os\nfrom risk_atlas_nexus.data import get_templates_path\n\nwith open(os.path.join(get_templates_path(), \"cot_examples.json\")) as f:\n    cot_data = json.load(f)\nprint(cot_data)\n</pre> import json import os from risk_atlas_nexus.data import get_templates_path  with open(os.path.join(get_templates_path(), \"cot_examples.json\")) as f:     cot_data = json.load(f) print(cot_data) <pre>[{'question': 'In which environment is the system used?', 'examples': {'answers': [\"Insurance Claims Processing or Risk Management or Data Analytics \\nExplanation: 1. Insurance Claims Processing: The system might be used by an insurance company's claims processing department to analyze and identify patterns in healthcare insurance claims. 2. Risk Management: The system could be applied in risk management teams to detect potential risks and opportunities for cost savings. 3. Data Analytics: The system might be used by a data analytics team within the healthcare insurance company to identify patterns in claims data, helping to inform business decisions.\", 'Municipal Waste Management or Private Waste Management departments \\nExplanation: Waste management companies need to efficiently collect and process waste while minimizing costs and environmental impact. By using generative AI to analyze historical data on waste generation, recycling rates, and resource utilization, they can optimize collection routes, reduce fuel consumption, and lower labor costs.', 'Distribution Centers or Retail Chains\\nExplanation: 1. Distribution Centers: Companies that manage large-scale distribution centers could utilize this system to optimize inventory levels and improve supply chain efficiency. 2. Retail Chains: Large retail chains with complex supply chains might benefit from using this application to summarize and analyze data, identify trends, and make informed decisions.', \"Treasury Departments or Asset Management Divisions or Private Banking Units \\nExplanation: 1. Treasury Departments: The system might be used by investment banks' treasury departments to manage cash flows, optimize inventory levels, and streamline procurement processes. 2. Asset Management Divisions: Investment banks with asset management divisions could utilize this application to optimize supply chain management for their fund operations. 3. Private Banking Units: Private banking units within investment banks might benefit from using this system to manage wealth management services and optimize supply chain operations.\", 'Pharmacologists or Toxicologists or Clinical Trial Managers \\nExplanation: Experts that specialize in developing new treatments for various diseases might utilize this application to accelerate their research pipeline or to streamline the drug development process.'], 'intents': ['Find patterns in healthcare insurance claims', 'Generative AI can optimize waste management processes. By analyzing historical data on waste generation, recycling rates, and resource utilization, generative models can generate optimized waste collection routes, recommend recycling strategies, and predict waste generation patterns. This helps in reducing waste generation, optimizing resource allocation, and promoting circular economy practices.', 'Summarize and analyze historic data, industry patterns, create multi-layered models that identify changes as occur, increase supply chain efficiency and optimize inventory levels', 'optimize supply chain management in Investment banks', \"In the context of drug repurposing, generative AI can be employed to analyze vast databases of existing drugs and their clinical trials data. By identifying patterns and similarities, the AI can suggest potential new therapeutic indications for existing drugs, based on the chemical structure and pharmacological properties of the APIs. This process can help streamline the drug development pipeline, as it would reduce the need for time-consuming and expensive clinical trials for new indications. For instance, a drug like Atorvastatin, which is currently used to lower cholesterol, could be repurposed for the treatment of diabetic nephropathy, a kidney disease, based on the AI's analysis of similar drugs and their clinical data. This would not only save resources but also provide new treatment options for patients suffering from this debilitating condition. \"]}}, {'question': 'What domain is the system intended to be used in? Code/software engineering, Communications, Customer service/support, IT/business automation, Writing assistant, Financial, Technical, Product, Information retrieval, Marketing, Security, User Research, Strategy, Sales, Risk and Compliance, Design, Cybersecurity, Customer service/support &amp; Healthcare, Talent and Organization including HR, Other', 'examples': {'answers': ['Other \\nExplanation: Since finding patterns from documents does not fall under any of the categories mentioned ', 'Strategy \\nExplanation: Since this task is to improve waste management processes using historical data', 'Strategy \\nExplanation: Since this task is to improve supply chain efficiency using trends and patterns', 'Customer service/support \\nExplanation: Since the task relates to human conversations or generating human converstations or support. Writing assitant \\nExplanation: Since this helps in improving the quality of text. It is not customer service since this on on the quality of text rather than helping in human conversations.', 'Strategy \\nExplanation: Since the task is involved in improving the processes to ensure better performance. It is not finance since the task is on supply chain optimization and not on financial aspects even though the application domain is banks.', 'Healthcare and strategy \\nExplanation: Since the task is related to healthcare and drug repurposing, which involves analyzing data related to drugs and their clinical trials, this falls under the healthcare domain. It also involves Strategy it talks about using patterns to create new treatment options.'], 'intents': ['Find patterns in healthcare insurance claims', 'Generative AI can optimize waste management processes. By analyzing historical data on waste generation, recycling rates, and resource utilization, generative models can generate optimized waste collection routes, recommend recycling strategies, and predict waste generation patterns. This helps in reducing waste generation, optimizing resource allocation, and promoting circular economy practices.', 'Summarize and analyze historic data, industry patterns, create multi-layered models that identify changes as occur, increase supply chain efficiency and optimize inventory levels', 'Ability to create dialog flows and integrations from natural language instructionscheck if a document has grammatical mistakes', 'optimize supply chain management in Investment banks', \"In the context of drug repurposing, generative AI can be employed to analyze vast databases of existing drugs and their clinical trials data. By identifying patterns and similarities, the AI can suggest potential new therapeutic indications for existing drugs, based on the chemical structure and pharmacological properties of the APIs. This process can help streamline the drug development pipeline, as it would reduce the need for time-consuming and expensive clinical trials for new indications. For instance, a drug like Atorvastatin, which is currently used to lower cholesterol, could be repurposed for the treatment of diabetic nephropathy, a kidney disease, based on the AI's analysis of similar drugs and their clinical data. This would not only save resources but also provide new treatment options for patients suffering from this debilitating condition. \"]}}, {'question': 'What techniques are utilised in the system? Multi-modal: {Document Question/Answering, Image and text to text, Video and text to text, visual question answering}, Natural language processing: {feature extraction, fill mask, question answering, sentence similarity, summarization, table question answering, text classification, text generation, token classification, translation, zero shot classification}, computer vision: {image classification, image segmentation, text to image, object detection}, audio:{audio classification, audio to audio, text to speech}, tabular: {tabular classification, tabular regression}, reinforcement learning', 'examples': {'answers': ['Natural language processing: text classification \\nExplanation: Health insurance claims can be find patterns or to classify claims into categories (e.g., diagnosis, procedure, treatment).', \"Natural language processing: text generation and reinforcement learning \\nExplanation: Text generation techniques are used to generate reports, recommendations, and insights from the analysis of historical data. and Reinforcement learning algorithms can be employed to optimize the generative model's performance in real-time, based on feedback from the environment (e.g., changes in waste generation rates).\", \"Natural Language Processing: Text Classification and Token Classification \\nExplanation: Specifically, Text Classification is used to classify the input text into categories such as 'grammatically correct' or 'contains grammatical errors' Techniques like token classification (also known as part-of-speech tagging) are employed to analyze the document's structure and identify potential grammatical mistakes\"], 'intents': ['Find patterns in healthcare insurance claims', 'Generative AI can optimize waste management processes. By analyzing historical data on waste generation, recycling rates, and resource utilization, generative models can generate optimized waste collection routes, recommend recycling strategies, and predict waste generation patterns. This helps in reducing waste generation, optimizing resource allocation, and promoting circular economy practices.', 'Ability to create dialog flows and integrations from natural language instructionscheck if a document has grammatical mistakes']}}, {'question': 'Who is the intended user of the system?', 'examples': {'answers': ['Insurance companies, government agencies, or other organizations responsible for reimbursing healthcare providers \\nExplanation: Healthcare payers need to efficiently process and reimburse claims while minimizing errors and disputes. By identifying patterns in claims data, they can automate routine tasks, detect potential errors or anomalies, and improve overall payment accuracy', 'Waste Management Companies \\nExplanation: Waste management companies need to efficiently collect and process waste while minimizing costs and environmental impact. By using generative AI to analyze historical data on waste generation, recycling rates, and resource utilization, they can optimize collection routes, reduce fuel consumption, and lower labor costs.', 'Supply Chain companies\\nExplanation: Supply chain managers need to efficiently manage inventory levels, shipping routes, and logistics operations while minimizing costs and maximizing customer satisfaction. By using the system to summarize and analyze historic data, industry patterns, and create multi-layered models that identify changes as they occur, supply chain managers can gain insights into optimal inventory levels, efficient shipping routes, and streamlined logistics processes', 'Investment banks or asset management banks \\nExplanation: have complex supply chains that involve the movement of goods, services, and financial instruments. By using the system to optimize supply chain management, financial institutions can minimize costs, maximize efficiency, and reduce risks associated with inventory levels, shipping routes, and logistics operations', 'Pharmaceutical Companies or  Biotechnology Companies \\nExplanation: companies have a vested interest in optimizing their product portfolios and reducing development costs. By using the system to analyze vast databases of existing drugs and clinical trials data, pharmaceutical companies can quickly identify potential new indications for existing medications, thereby streamlining the drug development pipeline'], 'intents': ['Find patterns in healthcare insurance claims', 'Generative AI can optimize waste management processes. By analyzing historical data on waste generation, recycling rates, and resource utilization, generative models can generate optimized waste collection routes, recommend recycling strategies, and predict waste generation patterns. This helps in reducing waste generation, optimizing resource allocation, and promoting circular economy practices.', 'Summarize and analyze historic data, industry patterns, create multi-layered models that identify changes as occur, increase supply chain efficiency and optimize inventory levels', 'optimize supply chain management in Investment banks', \"In the context of drug repurposing, generative AI can be employed to analyze vast databases of existing drugs and their clinical trials data. By identifying patterns and similarities, the AI can suggest potential new therapeutic indications for existing drugs, based on the chemical structure and pharmacological properties of the APIs. This process can help streamline the drug development pipeline, as it would reduce the need for time-consuming and expensive clinical trials for new indications. For instance, a drug like Atorvastatin, which is currently used to lower cholesterol, could be repurposed for the treatment of diabetic nephropathy, a kidney disease, based on the AI's analysis of similar drugs and their clinical data. This would not only save resources but also provide new treatment options for patients suffering from this debilitating condition. \"]}}, {'question': 'What is the intended purpose of the system?', 'examples': {'answers': ['To create a centralized monitoring system that allows executives to visualize key sales metrics, identify trends, and make data-driven decisions about resource allocation and business strategy.', 'To design an automated HR workflow that streamlines the employee onboarding experience, reducing administrative burden and improving the overall efficiency of the organization.', 'To develop a predictive analytics system that identifies high-value potential customers and provides actionable insights for sales teams, enabling them to prioritize leads and optimize marketing efforts.', 'To create a virtual replica of the physical manufacturing environment, allowing operations teams to analyze and optimize production workflows, reduce waste, and improve overall efficiency and quality'], 'intents': ['Provide a dashboard to track sales performance by region and product line', 'Automate the process of onboarding new employees, including generating necessary documents and assigning benefits', 'Create a recommendation engine to suggest potential clients based on our existing customer base and sales history', 'Develop a digital twin of our manufacturing process to simulate production schedules, equipment usage, and material requirements']}}, {'question': 'What is the application of the system?', 'examples': {'answers': ['Natural Language Processing (NLP): Analyze sales data to identify trends, patterns, and correlations between regions, products, and sales metrics.\\n Machine Learning (ML): Develop predictive models to forecast future sales performance based on historical data and seasonal fluctuations.\\n Computer Vision: Integrate with CRM systems to visualize sales pipelines, track customer interactions, and monitor pipeline health.', 'Robotic Process Automation (RPA): Automate manual tasks such as generating new hire paperwork, updating HR systems, and scheduling interviews. \\n Document Generation: Use AI-powered document generation tools to create customized new hire packets, including contracts, benefits information, and employee handbooks. Predictive Analytics: Analyze new hire data to identify potential risks or challenges and provide personalized recommendations for onboarding.', 'Collaborative Filtering: Analyze customer behavior and preferences to identify patterns and correlations that can inform product recommendations.\\n Knowledge Graph: Build a graph-based knowledge model of customers, products, and services to enable more accurate matchings.\\n Text Analysis: Use NLP to analyze customer feedback and reviews to identify sentiment trends and improve product development.', 'Simulation Software: Develop AI-powered simulation models that can predict production outcomes under various scenarios, including equipment failures or material shortages.\\n Predictive Maintenance: Analyze sensor data from equipment to predict maintenance needs and optimize scheduling. \\n Optimization Engine: Use machine learning algorithms to optimize production processes and minimize waste.'], 'intents': ['Provide a dashboard to track sales performance by region and product line', 'Automate the process of onboarding new employees, including generating necessary documents and assigning benefits', 'Create a recommendation engine to suggest potential clients based on our existing customer base and sales history', 'Develop a digital twin of our manufacturing process to simulate production schedules, equipment usage, and material requirements']}}, {'question': 'What is the subject of the system?', 'examples': {'answers': ['Employees.The system would need to track and analyze data on employee productivity, engagement, and performance across various locations.', 'Business Customers. The system would need to manage data on business customer interactions, including: Customer contact information and preferences, Purchase history and payment records, Invoicing and payment tracking', 'Corporate Travelers. The system would need to collect and analyze data on the preferences and behavior of high-value corporate travelers, including: Customer flight information and itineraries, Hotel reservations and preferences, meal choices and dining experiences', 'Equipment Owners. The system would need to manage data on the condition and usage of critical equipment, including: Equipment serial numbers and models, Maintenance history and records, Sensor data and sensor readings'], 'intents': ['Provide real-time visibility into employee productivity and engagement across multiple locations', 'Automate invoicing and payment processing for large B2B customers', 'Create a personalized travel experience for high-value corporate clients', 'Develop a predictive maintenance model for critical equipment across multiple industries']}}]\n</pre> <p>There are two ways to use the inference engine to get the LLM outputs. <code>generate_zero_shot_output</code> which gives the zero-shot output for the question and <code>generate_few_shot_output</code> which gives the output using few-shot examples defined above.</p> In\u00a0[6]: Copied! <pre>questions = []\nfor data in deepcopy(cot_data):\n    questions.append(data[\"question\"])\n\nusecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nresults = risk_atlas_nexus.generate_zero_shot_output(\n    inference_engine, usecase, questions\n)\n\nresults\n</pre> questions = [] for data in deepcopy(cot_data):     questions.append(data[\"question\"])  usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  results = risk_atlas_nexus.generate_zero_shot_output(     inference_engine, usecase, questions )  results Out[6]: <pre>['Environment: The system is used in a call center environment to support customer service agents in their interactions with customers.',\n 'The system is intended to be used in the domain of customer service/support.',\n 'Multi-modal: {Document Question/Answering, Image and text to text, Video and text to text, visual question answering}, Natural language processing: {feature extraction, fill mask, question answering, sentence similarity, summarization, table question answering, text classification, text generation, token classification, translation, zero shot classification}, computer vision: {image classification, image segmentation, text to image, object detection}, audio:{audio classification, audio to audio, text to speech}, tabular: {tabular classification, tabular regression}, reinforcement learning',\n 'The intended user of the system is the customer support agent who needs to generate personalized, relevant responses, recommendations, and summaries of claims for customers to enhance their interactions with customers.',\n 'The intended purpose of the system is to provide personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.',\n 'The application of the system is to generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.',\n 'The subject of the system is customer support.']</pre> In\u00a0[6]: Copied! <pre>cot_data_with_examples = deepcopy(cot_data)\nusecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nresults = risk_atlas_nexus.generate_few_shot_output(\n    inference_engine, usecase, cot_data_with_examples\n)\n\nresults\n</pre> cot_data_with_examples = deepcopy(cot_data) usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  results = risk_atlas_nexus.generate_few_shot_output(     inference_engine, usecase, cot_data_with_examples )  results <pre>Inferring with OLLAMA: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 7/7 [00:36&lt;00:00,  5.27s/it]\n</pre> Out[6]: <pre>['[Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: In which environment is the system used?] Output: [Insurance Claims Processing or Customer Service or Call Center Operations] Explanation: 1. Insurance Claims Processing: The system might be used by insurance companies to analyze and process claims, providing personalized responses and recommendations to customers. 2. Customer Service: The system could be applied in customer service teams to',\n 'Based on the examples provided, I will attempt to categorize the given task into the corresponding domain. Example 1: [Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: What domain is the system intended to be used in? ...] Output: [Customer service/support] Explanation: Since the task involves generating responses and summaries to support agents in their interactions with customers, it falls under the domain of Customer',\n 'Here are the answers to the question \"What techniques are utilised in the system?\" for the given examples: 1. [Given: Find patterns in healthcare insurance claims] Output: [Natural language processing: text classification Explanation: Health insurance claims can be classified into categories (e.g., diagnosis, procedure, treatment).] 2. [Given: Generative AI can optimize waste management processes. By analyzing historical data on waste generation, recycling rates, and resource utilization, generative models can generate optimized',\n '[Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: Who is the intended user of the system?] Output: [Customer Service Representatives or Insurance Agents Explanation: Customer service representatives and insurance agents need to provide accurate and relevant information to customers to resolve claims and provide excellent customer service. By using the system to generate personalized responses, recommendations, and summaries of claims, customer service representatives can enhance their interactions with',\n '[Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: What is the intended purpose of the system?] Output: [To create an intelligent customer interaction platform that empowers agents to deliver exceptional customer experiences by providing them with actionable insights, personalized content, and automated support, ultimately driving increased customer satisfaction, loyalty, and revenue growth.]',\n '[Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: What is the application of the system?] Output: 1. Natural Language Processing (NLP): Analyze customer data and sentiment to generate personalized responses and recommendations for agents. 2. Machine Learning (ML): Develop predictive models to forecast customer needs and preferences, enabling agents to provide more accurate and relevant support. 3. Text Analysis: Use NLP',\n '[Given: Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.] [Question: What is the subject of the system?] Output: [Customers. The system would need to collect and analyze data on customer claims, including: Claim details and history, Customer preferences and communication records, Agent interactions and response data.] Alternatively, a more specific output could be: [Customers. The system would need to collect and analyze data on individual customer']</pre>"},{"location":"examples/notebooks/autoassist_questionnaire/#auto-fill-questionnaire-using-chain-of-thought-or-few-shot-examples","title":"Auto-fill Questionnaire using Chain of Thought or Few-Shot Examples\u00b6","text":"<p>This notebook showcases the application of few-shot examples in autofilling questionnaires. It utilizes a json file (<code>cot_examples.json</code>) to provide the LLM with example responses for some use-cases.</p> <p>By leveraging these few-shot examples, we can enable seamless completion of lengthy questionnaires, minimizing manual effort and improving overall efficiency.</p>"},{"location":"examples/notebooks/autoassist_questionnaire/#risk-atlas-nexus-uses-large-language-models-llms-to-infer-risks-dimensions-therefore-requires-access-to-llms-to-inference-or-call-the-model","title":"Risk Atlas Nexus uses Large Language Models (LLMs) to infer risks dimensions. Therefore requires access to LLMs to inference or call the model.\u00b6","text":"<p>Available Inference Engines: WML, Ollama, vLLM, RITS. Please follow the Inference APIs guide before going ahead.</p> <p>Note: RITS is intended solely for internal IBM use and requires TUNNELALL VPN for access.</p>"},{"location":"examples/notebooks/autoassist_questionnaire/#create-an-instance-of-riskatlasnexus","title":"Create an instance of RiskAtlasNexus\u00b6","text":"<p>Note: (Optional) You can specify your own directory in <code>RiskAtlasNexus(base_dir=&lt;PATH&gt;)</code> to utilize custom AI ontologies. If left blank, the system will use the provided AI ontologies.</p>"},{"location":"examples/notebooks/autoassist_questionnaire/#defining-few-shot-examples-for-auto-assist-functionality","title":"Defining Few-Shot Examples for Auto-Assist Functionality\u00b6","text":"<p>This cell showcases the template used in <code>risk_atlas_nexus/data/templates/cot_examples.json</code> to provide few-shot examples for auto-assist functionality.</p> <p>Template Structure:</p> <ul> <li>Each question is associated with a list of example intents and corresponding answers.</li> <li>The format is:<ul> <li><code>Question</code></li> <li><code>- intents:</code> (list of example intents)</li> <li><code>- answers:</code> (list of corresponding answers for the respective intents above)</li> </ul> </li> </ul> <p>In this notebook, we're using a simplified template to cover 4 questions from the Airo questionnaire:</p> <ol> <li>System environment</li> <li>Intended domain</li> <li>Utilized techniques</li> <li>Targeted user group</li> </ol> <p>Customization:</p> <p>To adapt this auto-assist functionality to custom questionnaires, users need to provide their own set of questions, example intents, and corresponding answers in a json file (e.g., <code>cot_examples.json</code>). This will enable the LLM to learn from these few-shot examples and generate responses for unseen queries.</p>"},{"location":"examples/notebooks/risk_identification/","title":"Risk identification","text":"In\u00a0[1]: Copied! <pre>from risk_atlas_nexus.blocks.inference import (\n    RITSInferenceEngine,\n    WMLInferenceEngine,\n    OllamaInferenceEngine,\n    VLLMInferenceEngine,\n)\nfrom risk_atlas_nexus.blocks.inference.params import (\n    InferenceEngineCredentials,\n    RITSInferenceEngineParams,\n    WMLInferenceEngineParams,\n    OllamaInferenceEngineParams,\n    VLLMInferenceEngineParams,\n)\nfrom risk_atlas_nexus.library import RiskAtlasNexus\n</pre> from risk_atlas_nexus.blocks.inference import (     RITSInferenceEngine,     WMLInferenceEngine,     OllamaInferenceEngine,     VLLMInferenceEngine, ) from risk_atlas_nexus.blocks.inference.params import (     InferenceEngineCredentials,     RITSInferenceEngineParams,     WMLInferenceEngineParams,     OllamaInferenceEngineParams,     VLLMInferenceEngineParams, ) from risk_atlas_nexus.library import RiskAtlasNexus <pre>/Users/dhaval/Projects/Usage-Governance/risk-atlas-nexus/src/risk_atlas_nexus/toolkit/job_utils.py:2: TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)\n  from tqdm.autonotebook import tqdm\n</pre> In\u00a0[\u00a0]: Copied! <pre>inference_engine = WMLInferenceEngine(\n    model_name_or_path=\"ibm/granite-20b-code-instruct\",\n    credentials={\n        \"api_key\": \"WML_API_KEY\",\n        \"api_url\": \"WML_API_URL\",\n        \"project_id\": \"WML_PROJECT_ID\",\n    },\n    parameters=WMLInferenceEngineParams(\n        max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1\n    ),\n)\n\n# inference_engine = OllamaInferenceEngine(\n#     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\",\n#     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"),\n#     parameters=OllamaInferenceEngineParams(\n#         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1\n#     ),\n# )\n\n# inference_engine = VLLMInferenceEngine(\n#     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\",\n#     credentials=InferenceEngineCredentials(\n#         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\"\n#     ),\n#     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n\n# inference_engine = RITSInferenceEngine(\n#     model_name_or_path=\"ibm/granite-20b-code-instruct\",\n#     credentials={\n#         \"api_key\": \"RITS_API_KEY\",\n#         \"api_url\": \"RITS_API_URL\",\n#     },\n#     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7),\n# )\n</pre> inference_engine = WMLInferenceEngine(     model_name_or_path=\"ibm/granite-20b-code-instruct\",     credentials={         \"api_key\": \"WML_API_KEY\",         \"api_url\": \"WML_API_URL\",         \"project_id\": \"WML_PROJECT_ID\",     },     parameters=WMLInferenceEngineParams(         max_new_tokens=1000, decoding_method=\"greedy\", repetition_penalty=1     ), )  # inference_engine = OllamaInferenceEngine( #     model_name_or_path=\"hf.co/ibm-granite/granite-20b-code-instruct-8k-GGUF\", #     credentials=InferenceEngineCredentials(api_url=\"OLLAMA_API_URL\"), #     parameters=OllamaInferenceEngineParams( #         num_predict=1000, num_ctx=8192, temperature=0.7, repeat_penalty=1 #     ), # )  # inference_engine = VLLMInferenceEngine( #     model_name_or_path=\"ibm-granite/granite-3.1-8b-instruct\", #     credentials=InferenceEngineCredentials( #         api_url=\"VLLM_API_URL\", api_key=\"VLLM_API_KEY\" #     ), #     parameters=VLLMInferenceEngineParams(max_tokens=1000, temperature=0.7), # )  # inference_engine = RITSInferenceEngine( #     model_name_or_path=\"ibm/granite-20b-code-instruct\", #     credentials={ #         \"api_key\": \"RITS_API_KEY\", #         \"api_url\": \"RITS_API_URL\", #     }, #     parameters=RITSInferenceEngineParams(max_tokens=1000, temperature=0.7), # ) <pre>[2025-02-17 21:30:35:969] - INFO - RiskAtlasNexus - Created WML inference engine.\n</pre> In\u00a0[3]: Copied! <pre>risk_atlas_nexus = RiskAtlasNexus()\n</pre> risk_atlas_nexus = RiskAtlasNexus() <pre>[2025-02-17 21:30:36:58] - INFO - RiskAtlasNexus - Created RiskAtlasNexus instance. Base_dir: None\n</pre> In\u00a0[\u00a0]: Copied! <pre>usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nrisks = risk_atlas_nexus.identify_risks_from_usecases(\n    usecases=[usecase],\n    inference_engine=inference_engine,\n    taxonomy=\"ibm-risk-atlas\",\n)\n\nrisks\n</pre> usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  risks = risk_atlas_nexus.identify_risks_from_usecases(     usecases=[usecase],     inference_engine=inference_engine,     taxonomy=\"ibm-risk-atlas\", )  risks <pre>[2025-02-17 21:30:36:63] - INFO - RiskAtlasNexus - Selected taxonomy is IBM AI Risk Atlas. For more info: https://www.ibm.com/docs/en/watsonx/saas?topic=ai-risk-atlas\n</pre> Out[\u00a0]: <pre>[[Risk(id='atlas-data-acquisition', name='Data acquisition restrictions', description='Laws and other regulations might limit the collection of certain types of data for specific AI use cases.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/data-acquisition.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 11), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-data-laws', closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag='data-acquisition', type='training-data', phase=None, descriptor='amplified', concern='\"There are several ways of collecting data for building a foundation models: web scraping, web crawling, crowdsourcing, and curating public datasets. Data acquisition restrictions can also impact the availability of the data that is required for training an AI model and can lead to poorly represented data.\"'),\n  Risk(id='atlas-data-usage-rights', name='Data usage rights restrictions', description='Terms of service, license compliance, or other IP issues may restrict the ability to use certain data for building models.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/data-usage-rights.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-intellectual-property', closeMatch=None, exactMatch=None, broadMatch=['nist-data-privacy', 'nist-value-chain-and-component-integration'], narrowMatch=None, relatedMatch=None, tag='data-usage-rights', type='training-data', phase=None, descriptor='amplified', concern='Laws and regulations concerning the use of data to train AI are unsettled and can vary from country to country, which creates challenges in the development of models.'),\n  Risk(id='atlas-harmful-code-generation', name='Harmful code generation', description='Models might generate code that causes harm or unintentionally affects other systems.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/harmful-code-generation.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-value-alignment', closeMatch=None, exactMatch=None, broadMatch=['nist-dangerous-violent-or-hateful-content', 'nist-information-security'], narrowMatch=None, relatedMatch=None, tag='harmful-code-generation', type='output', phase=None, descriptor='specific', concern='The execution of harmful code might open vulnerabilities in IT systems.'),\n  Risk(id='atlas-data-contamination', name='Data contamination', description='Data contamination occurs when incorrect data is used for training. For example, data that is not aligned with model\u2019s purpose or data that is already set aside for other development tasks such as testing and evaluation.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/data-contamination.html', dateCreated=datetime.date(2024, 9, 24), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-accuracy', closeMatch=None, exactMatch=None, broadMatch=['nist-information-security', 'nist-value-chain-and-component-integration'], narrowMatch=None, relatedMatch=None, tag='data-contamination', type='training-data', phase=None, descriptor='amplified', concern='Data that differs from the intended training data might skew model accuracy and affect model outcomes.'),\n  Risk(id='atlas-untraceable-attribution', name='Untraceable attribution', description='The content of the training data used for generating the model\u2019s output is not accessible.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/untraceable-attribution.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-explainability', closeMatch=None, exactMatch=None, broadMatch=['nist-information-integrity'], narrowMatch=None, relatedMatch=None, tag='untraceable-attribution', type='output', phase=None, descriptor='amplified', concern='Without the ability to access training data content, the possibility of using source attribution techniques can be severely limited or impossible. This makes it difficult for users, model validators, and auditors to understand and trust the model.'),\n  Risk(id='atlas-over-or-under-reliance', name='Over- or under-reliance', description='In AI-assisted decision-making tasks, reliance measures how much a person trusts (and potentially acts on) a model\u2019s output. Over-reliance occurs when a person puts too much trust in a model, accepting a model\u2019s output when the model\u2019s output is likely incorrect. Under-reliance is the opposite, where the person doesn\u2019t trust the model but should.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/over-or-under-reliance.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-value-alignment', closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag='over-or-under-reliance', type='output', phase=None, descriptor='amplified', concern='In tasks where humans make choices based on AI-based suggestions, over/under reliance can lead to poor decision making because of the misplaced trust in the AI system, with negative consequences that increase with the importance of the decision.'),\n  Risk(id='atlas-incorrect-risk-testing', name='Incorrect risk testing', description='A metric selected to measure or track a risk is incorrectly selected, incompletely measuring the risk, or measuring the wrong risk for the given context.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/incorrect-risk-testing.html', dateCreated=datetime.date(2024, 9, 24), dateModified=datetime.date(2024, 9, 24), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-governance', closeMatch=None, exactMatch=None, broadMatch=['nist-value-chain-and-component-integration'], narrowMatch=None, relatedMatch=None, tag='incorrect-risk-testing', type='non-technical', phase=None, descriptor='amplified', concern='If the metrics do not measure the risk as intended, then the understanding of that risk will be incorrect and mitigations might not be applied. If the model\u2019s output is consequential, this might result in societal, reputational, or financial harm.'),\n  Risk(id='atlas-membership-inference-attack', name='Membership inference attack', description=\"A membership inference attack repeatedly queries a model to determine whether a given input was part of the model\u2019s training. More specifically, given a trained model and a data sample, an attacker samples the input space, observing outputs to deduce whether that sample was part of the model's training. \", url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/membership-inference-attack.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-privacy', closeMatch=None, exactMatch=None, broadMatch=['nist-data-privacy'], narrowMatch=None, relatedMatch=None, tag='membership-inference-attack', type='inference', phase=None, descriptor='amplified', concern='Identifying whether a data sample was used for training data can reveal what data was used to train a model. Possibly giving competitors insight into how a model was trained and the opportunity to replicate the model or tamper with it. Models that include publicly-available data are at higher risk of such attacks.'),\n  Risk(id='atlas-hallucination', name='Hallucination', description='Hallucinations generate factually inaccurate or untruthful content with respect to the model\u2019s training data or input. This is also sometimes referred to lack of faithfulness or lack of groundedness.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/hallucination.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-robustness', closeMatch=None, exactMatch=['nist-confabulation'], broadMatch=['owasp-llm062025-excessive-agency'], narrowMatch=None, relatedMatch=None, tag='hallucination', type='output', phase=None, descriptor='specific', concern='Hallucinations can be misleading. These false outputs can mislead users and be incorporated into downstream artifacts, further spreading misinformation. False output can harm both owners and users of the AI models. In some uses, hallucinations can be particularly consequential.'),\n  Risk(id='atlas-output-bias', name='Output bias', description='Generated content might unfairly represent certain groups or individuals.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/output-bias.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-fairness', closeMatch=None, exactMatch=None, broadMatch=['nist-harmful-bias-or-homogenization'], narrowMatch=None, relatedMatch=None, tag='output-bias', type='output', phase=None, descriptor='specific', concern='Bias can harm users of the AI models and magnify existing discriminatory behaviors.'),\n  Risk(id='atlas-toxic-output', name='Toxic output', description='Toxic output occurs when the model produces hateful, abusive, and profane (HAP) or obscene content. This also includes behaviors like bullying.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/toxic-output.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-value-alignment', closeMatch=['nist-dangerous-violent-or-hateful-content', 'nist-obscene-degrading-and-or-abusive-content'], exactMatch=None, broadMatch=['owasp-llm052025-improper-output-handling'], narrowMatch=None, relatedMatch=None, tag='toxic-output', type='output', phase=None, descriptor='specific', concern='Hateful, abusive, and profane (HAP) or obscene content can adversely impact and harm people interacting with the model.'),\n  Risk(id='atlas-unreliable-source-attribution', name='Unreliable source attribution', description=\"Source attribution is the AI system's ability to describe from what training data it generated a portion or all its output. Since current techniques are based on approximations, these attributions might be incorrect.\", url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/unreliable-source-attribution.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2024, 9, 24), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-explainability', closeMatch=None, exactMatch=None, broadMatch=['nist-information-security'], narrowMatch=None, relatedMatch=None, tag='unreliable-source-attribution', type='output', phase=None, descriptor='specific', concern='Low-quality attributions make it difficult for users, model validators, and auditors to understand and trust the model.'),\n  Risk(id='atlas-harmful-output', name='Harmful output', description='A model might generate language that leads to physical harm The language might include overtly violent, covertly dangerous, or otherwise indirectly unsafe statements.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/harmful-output.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-value-alignment', closeMatch=['nist-dangerous-violent-or-hateful-content'], exactMatch=None, broadMatch=['owasp-llm052025-improper-output-handling'], narrowMatch=None, relatedMatch=['nist-cbrn-information-or-capabilities', 'nist-data-privacy', 'nist-obscene-degrading-and-or-abusive-content'], tag='harmful-output', type='output', phase=None, descriptor='specific', concern='A model generating harmful output can cause immediate physical harm or create prejudices that might lead to future harm.'),\n  Risk(id='atlas-confidential-information-in-data', name='Confidential information in data', description='Confidential information might be included as part of the data that is used to train or tune the model.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/confidential-information-in-data.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-intellectual-property', closeMatch=None, exactMatch=None, broadMatch=['nist-intellectual-property'], narrowMatch=None, relatedMatch=None, tag='confidential-information-in-data', type='training-data', phase=None, descriptor='amplified', concern='If confidential data is not properly protected, there could be an unwanted disclosure of confidential information. The model might expose confidential information in the generated output or to unauthorized users.'),\n  Risk(id='atlas-unrepresentative-data', name='Unrepresentative data', description='Unrepresentative data occurs when the training or fine-tuning data is not sufficiently representative of the underlying population or does not measure the phenomenon of interest.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/unrepresentative-data.html', dateCreated=datetime.date(2024, 9, 24), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-accuracy', closeMatch=None, exactMatch=None, broadMatch=['nist-harmful-bias-or-homogenization'], narrowMatch=None, relatedMatch=['nist-value-chain-and-component-integration'], tag='unrepresentative-data', type='training-data', phase=None, descriptor='traditional', concern='If the data is not representative, then the model will not work as intended.'),\n  Risk(id='atlas-spreading-disinformation', name='Spreading disinformation', description='Generative AI models might be used to intentionally create misleading or false information to deceive or influence a targeted audience.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=SSYOK8/wsj/ai-risk-atlas/spreading-disinformation.html', dateCreated=datetime.date(2024, 3, 6), dateModified=datetime.date(2025, 2, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-risk-atlas', isPartOf='ibm-risk-atlas-misuse', closeMatch=None, exactMatch=None, broadMatch=['nist-information-integrity'], narrowMatch=None, relatedMatch=None, tag='spreading-disinformation', type='output', phase=None, descriptor='specific', concern='Spreading disinformation might affect human\u2019s ability to make informed decisions. A model that has this potential must be properly governed.')]]</pre> In\u00a0[\u00a0]: Copied! <pre>usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nrisks = risk_atlas_nexus.identify_risks_from_usecases(\n    usecases=[usecase],\n    inference_engine=inference_engine,\n    taxonomy=\"nist-ai-rmf\",\n)\n\nrisks\n</pre> usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  risks = risk_atlas_nexus.identify_risks_from_usecases(     usecases=[usecase],     inference_engine=inference_engine,     taxonomy=\"nist-ai-rmf\", )  risks <pre>[2025-02-17 21:32:55:113] - INFO - RiskAtlasNexus - Selected taxonomy is NIST AI Risk Management Framework (AI RMF). For more info: https://www.nist.gov/itl/ai-risk-management-framework\n</pre> Out[\u00a0]: <pre>[[Risk(id='nist-confabulation', name='Confabulation', description='The production of confidently stated but erroneous or false content (known colloquially as \u201challucinations\u201d or \u201cfabrications\u201d) by which users may be misled or deceived.', url=None, dateCreated=None, dateModified=None, hasRelatedAction=['GV-1.3-002', 'GV-4.1-001', 'GV-5.1-002', 'MS-2.3-001', 'MS-2.3-002', 'MS-2.3-004', 'MS-2.5-001', 'MS-2.5-003', 'MS-2.6-005', 'MS-2.9-001', 'MS-2.13-001', 'MS-3.2-001', 'MS-4.2-002', 'MG-2.2-009', 'MG-3.2-009', 'MG-4.1-002', 'MG-4.1-004', 'MG-4.3-002'], isDefinedByTaxonomy='nist-ai-rmf', isPartOf=None, closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag=None, type=None, phase=None, descriptor=None, concern=None),\n  Risk(id='nist-harmful-bias-or-homogenization', name='Harmful Bias or Homogenization', description='Amplification and exacerbation of historical, societal, and systemic biases; performance disparities8 between sub-groups or languages, possibly due to non-representative training data, that result in discrimination, amplification of biases, or incorrect presumptions about performance; undesired homogeneity that skews system or model outputs, which may be erroneous, lead to ill-founded decision-making, or amplify harmful biases.', url=None, dateCreated=None, dateModified=None, hasRelatedAction=None, isDefinedByTaxonomy='nist-ai-rmf', isPartOf=None, closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag=None, type=None, phase=None, descriptor=None, concern=None),\n  Risk(id='nist-information-integrity', name='Information Integrity', description='Lowered barrier to entry to generate and support the exchange and consumption of content which may not distinguish fact from opinion or fiction or acknowledge uncertainties, or could be leveraged for large-scale dis- and mis-information campaigns.', url=None, dateCreated=None, dateModified=None, hasRelatedAction=['GV-1.2-001', 'GV-1.3-001', 'GV-1.3-006', 'GV-1.3-007', 'GV-1.5-001', 'GV-1.5-003', 'GV-1.6-003', 'GV-4.3-001', 'GV-4.3-003', 'GV-6.1-003', 'GV-6.1-004', 'GV-6.1-005', 'GV-6.1-006', 'GV-6.1-008', 'GV-6.2-006', 'MP-2.1-001', 'MP-2.2-001', 'MP-2.2-002', 'MP-2.3-001', 'MP-2.3-003', 'MP-2.3-004', 'MP-3.4-001', 'MP-3.4-002', 'MP-3.4-003', 'MP-3.4-005', 'MP-3.4-006', 'MP-5.1-001', 'MP-5.1-002', 'MP-5.1-004', 'MS-1.1-001', 'MS-1.1-002', 'MS-1.1-003', 'MS-1.1-005', 'MS-1.1-007', 'MS-1.1-009', 'MS-2.2-001', 'MS-2.2-002', 'MS-2.2-003', 'MS-2.3-004', 'MS-2.5-005', 'MS-2.6-005', 'MS-2.7-001', 'MS-2.7-002', 'MS-2.7-003', 'MS-2.7-004', 'MS-2.7-005', 'MS-2.7-006', 'MS-2.7-008', 'MS-2.8-003', 'MS-2.9-002', 'MS-2.10-001', 'MS-2.10-002', 'MS-2.13-001', 'MS-3.3-002', 'MS-3.3-004', 'MS-3.3-005', 'MS-4.2-001', 'MS-4.2-003', 'MS-4.2-004', 'MG-2.2-002', 'MG-2.2-003', 'MG-2.2-007', 'MG-2.2-009', 'MG-3.1-005', 'MG-3.2-002', 'MG-3.2-003', 'MG-3.2-005', 'MG-3.2-006', 'MG-3.2-007', 'MG-4.1-001', 'MG-4.1-006', 'MG-4.3-002'], isDefinedByTaxonomy='nist-ai-rmf', isPartOf=None, closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag=None, type=None, phase=None, descriptor=None, concern=None)]]</pre> In\u00a0[\u00a0]: Copied! <pre>usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nrisks = risk_atlas_nexus.identify_risks_from_usecases(\n    usecases=[usecase],\n    inference_engine=inference_engine,\n    taxonomy=\"mit-ai-risk-repository\",\n)\n\nrisks\n</pre> usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  risks = risk_atlas_nexus.identify_risks_from_usecases(     usecases=[usecase],     inference_engine=inference_engine,     taxonomy=\"mit-ai-risk-repository\", )  risks <pre>[2025-02-17 21:33:15:706] - INFO - RiskAtlasNexus - Selected taxonomy is The AI Risk Repository. For more info: https://airisk.mit.edu/\n</pre> Out[\u00a0]: <pre>[[Risk(id='mit-ai-risk-subdomain-7.3', name='Lack of capability or robustness', description='AI systems that fail to perform reliably or effectively under varying conditions, exposing them to errors and failures that can have significant consequences, especially in critical applications or areas that require moral reasoning.', url=None, dateCreated=None, dateModified=None, hasRelatedAction=None, isDefinedByTaxonomy='mit-ai-risk-repository', isPartOf='mit-ai-risk-domain-7', closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag=None, type=None, phase=None, descriptor=None, concern=None),\n  Risk(id='mit-ai-risk-subdomain-7.4', name='Lack of transparency or interpretability', description='Challenges in understanding or explaining the decision-making processes of AI systems, which can lead to mistrust, difficulty in enforcing compliance standards or holding relevant actors accountable for harms, and the inability to identify and correct errors.', url=None, dateCreated=None, dateModified=None, hasRelatedAction=None, isDefinedByTaxonomy='mit-ai-risk-repository', isPartOf='mit-ai-risk-domain-7', closeMatch=None, exactMatch=None, broadMatch=None, narrowMatch=None, relatedMatch=None, tag=None, type=None, phase=None, descriptor=None, concern=None)]]</pre> In\u00a0[\u00a0]: Copied! <pre>usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"\n\nrisks = risk_atlas_nexus.identify_risks_from_usecases(\n    usecases=[usecase],\n    inference_engine=inference_engine,\n    taxonomy=\"ibm-granite-guardian\",\n)\n\nrisks\n</pre> usecase = \"Generate personalized, relevant responses, recommendations, and summaries of claims for customers to support agents to enhance their interactions with customers.\"  risks = risk_atlas_nexus.identify_risks_from_usecases(     usecases=[usecase],     inference_engine=inference_engine,     taxonomy=\"ibm-granite-guardian\", )  risks <pre>[2025-02-17 21:33:33:796] - INFO - RiskAtlasNexus - Selected taxonomy is IBM Granite Guardian. For more info: https://arxiv.org/abs/2412.07724\n</pre> Out[\u00a0]: <pre>[[Risk(id='granite-relevance', name='Context Relevance', description=\"This occurs in when the retrieved or provided context fails to contain information pertinent to answering the user's question or addressing their needs. Irrelevant context may be on a different topic, from an unrelated domain, or contain information that doesn't help in formulating an appropriate response to the user.\", url='https://www.ibm.com/docs/en/watsonx/saas?topic=gg-relevance', dateCreated=datetime.date(2024, 12, 10), dateModified=datetime.date(2024, 12, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-granite-guardian', isPartOf='granite-guardian-rag-safety-group', closeMatch=None, exactMatch=None, broadMatch=['atlas-hallucination'], narrowMatch=None, relatedMatch=None, tag='relevance', type=None, phase=None, descriptor=None, concern=None),\n  Risk(id='granite-answer-relevance', name='Answer Relevance', description=\"This occurs when the LLM response fails to address or properly respond to the user's input. This includes providing off-topic information, misinterpreting the query, or omitting crucial details requested by the User. An irrelevant answer may contain factually correct information but still fail to meet the User's specific needs or answer their intended question.\", url='https://www.ibm.com/docs/en/watsonx/saas?topic=gg-answer-relevance', dateCreated=datetime.date(2024, 12, 10), dateModified=datetime.date(2024, 12, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-granite-guardian', isPartOf='granite-guardian-rag-safety-group', closeMatch=None, exactMatch=None, broadMatch=['atlas-hallucination'], narrowMatch=None, relatedMatch=None, tag='answer-relevance', type=None, phase=None, descriptor=None, concern=None),\n  Risk(id='granite-function-call', name='Function Calling Hallucination', description='This occurs when the LLM response contains function calls that have syntax or semantic errors based on the user query and available tool definition. For instance, if an AI agent purportedly queries an external information source, this capability monitors for fabricated information flows.', url='https://www.ibm.com/docs/en/watsonx/saas?topic=gg-function-call', dateCreated=datetime.date(2024, 12, 10), dateModified=datetime.date(2024, 12, 10), hasRelatedAction=None, isDefinedByTaxonomy='ibm-granite-guardian', isPartOf='granite-guardian-agentic-safety-group', closeMatch=None, exactMatch=None, broadMatch=['atlas-hallucination'], narrowMatch=None, relatedMatch=None, tag='function-call', type=None, phase=None, descriptor=None, concern=None)]]</pre>"},{"location":"examples/notebooks/risk_identification/#this-notebook-explains-how-to-uncover-risks-related-to-your-usecase-based-on-a-given-taxonomy","title":"This notebook explains how to uncover risks related to your usecase based on a given taxonomy.\u00b6","text":""},{"location":"examples/notebooks/risk_identification/#import-libraries","title":"Import libraries\u00b6","text":""},{"location":"examples/notebooks/risk_identification/#risk-atlas-nexus-uses-large-language-models-llms-to-infer-risks-dimensions-therefore-requires-access-to-llms-to-inference-or-call-the-model","title":"Risk Atlas Nexus uses Large Language Models (LLMs) to infer risks dimensions. Therefore requires access to LLMs to inference or call the model.\u00b6","text":"<p>Available Inference Engines: WML, Ollama, vLLM, RITS. Please follow the Inference APIs guide before going ahead.</p> <p>Note: RITS is intended solely for internal IBM use and requires TUNNELALL VPN for access.</p>"},{"location":"examples/notebooks/risk_identification/#create-an-instance-of-riskatlasnexus","title":"Create an instance of RiskAtlasNexus\u00b6","text":"<p>Note: (Optional) You can specify your own directory in <code>RiskAtlasNexus(base_dir=&lt;PATH&gt;)</code> to utilize custom AI ontologies. If left blank, the system will use the provided AI ontologies.</p>"},{"location":"examples/notebooks/risk_identification/#risk-identification-api","title":"Risk Identification API\u00b6","text":"<p>RiskAtlasNexus.identify_risks_from_usecases()</p> <p>Params:</p> <ul> <li>usecases (List[str]): A List of strings describing AI usecases</li> <li>inference_engine (InferenceEngine): An LLM inference engine to infer risks from the usecase.</li> <li>taxonomy (str, optional): The label for a taxonomy. If not specified, If not provided, the default is <code>ibm-risk-atlas</code>.</li> </ul>"},{"location":"examples/notebooks/risk_identification/#risk-identification-using-ibm-ai-risk-taxonomy","title":"Risk Identification using IBM AI Risk taxonomy\u00b6","text":""},{"location":"examples/notebooks/risk_identification/#risk-identification-using-nist-ai-taxonomy","title":"Risk Identification using NIST AI taxonomy\u00b6","text":""},{"location":"examples/notebooks/risk_identification/#risk-identification-using-mit-ai-taxonomy","title":"Risk Identification using MIT AI taxonomy\u00b6","text":""},{"location":"examples/notebooks/risk_identification/#risk-identification-using-granite-guardian-taxonomy","title":"Risk Identification using Granite Guardian taxonomy\u00b6","text":""},{"location":"installation/","title":"Installation","text":"<p>This project targets python version \"&gt;=3.11, &lt;3.12\". You can download specific versions of python here: https://www.python.org/downloads/</p> <p>Install the risk_atlas_nexus library <pre><code>git clone git@github.com:IBM/risk-atlas-nexus.git\ncd risk-atlas-nexus\npython -m venv vrisk-atlas-nexus\nsource vrisk-atlas-nexus/bin/activate\npip install -e .\n</code></pre></p>"},{"location":"installation/#install-for-inference-apis","title":"Install for inference APIs","text":"<p>Risk Atlas Nexus uses Large Language Models (LLMs) to infer risks and risks data. Therefore, requires access to LLMs to inference or call the model. The following LLM inference APIs are supported:</p> <ul> <li>IBM Watsonx AI (Watson Machine Learning)</li> <li>Ollama</li> <li>vLLM</li> <li>RITS (IBM Internal Only)</li> </ul>"},{"location":"installation/#ibm-watsonx-ai-wml","title":"IBM Watsonx AI (WML)","text":"<p>When using the WML platform, you need to:</p> <ol> <li>Add configuration to <code>.env</code> file as follows. Please follow this documentation on obtaining WML credentials.</li> </ol> <pre><code>WML_API_KEY=&lt;WML api key goes here&gt;\nWML_API_URL=&lt;WML url key goes here&gt;\nWML_PROJECT_ID=&lt;WML project id goes here, Optional&gt;\nWML_SPACE_ID=&lt;WML space id goes here, Optional&gt;\n</code></pre> <p>Either 'WML_PROJECT_ID' or 'WML_SPACE_ID' need to be specified.</p> <ol> <li>Install WML dependencies as follows:</li> </ol> <pre><code>pip install -e \".[wml]\"\n</code></pre>"},{"location":"installation/#ollama","title":"Ollama","text":"<p>When using the Ollama inference, you need to:</p> <ol> <li>Install Ollama dependencies as follows:</li> </ol> <pre><code>pip install -e \".[ollama]\"\n</code></pre> <ol> <li> <p>Please follow the quickstart guide to start Ollama LLM server. Server will start by default at http://localhost:11434</p> </li> <li> <p>When selecting Ollama engine in Risk Atlas Nexus, use the server address <code>localhost:11434</code> as the <code>api_url</code> in the credentials or set the environment variable <code>OLLAMA_API_URL</code> with this value.</p> </li> </ol>"},{"location":"installation/#vllm","title":"vLLM","text":"<p>When using the vLLM inference, you need to:</p> <ol> <li> <p>For Mac users, follow the instuctions here. Users need to build from the source vLLM to natively run on macOS.</p> </li> <li> <p>For Linux users, install vLLM dependencies as follows:</p> </li> </ol> <pre><code>pip install -e \".[vllm]\"\n</code></pre> <p>Above package is enough to run vLLM in once-off offline mode. When selecting vLLM execution from Risk Atlas Nexus, <code>credentials</code> should be passed as <code>None</code> to use vLLM offline mode.</p> <ol> <li>(Optional) To run vLLM on an OpenAI-Compatible vLLM Server, execute the command:</li> </ol> <pre><code>vllm serve ibm-granite/granite-3.1-8b-instruct --max_model_len 4096 --host localhost --port 8000 --api-key &lt;CUSTOM_API_KEY&gt;\n</code></pre> <p>The CUSTOM_API_KEY can be any string that you choose to use as your API key. Above command will start vLLM server at http://localhost:8000. The server currently hosts one model at a time. Check all supported APIs at <code>http://localhost:8000/docs</code></p> <p>Note: When selecting vLLM engine in Risk Atlas Nexus, pass <code>api_url</code> as <code>host:port</code> and given <code>api_key</code> to <code>credentials</code> with values from the vllm serve command above.</p>"},{"location":"installation/#rits-ibm-internal-only","title":"RITS (IBM Internal Only)","text":"<p>When using the RITS platform, you need to:</p> <ol> <li>Add configuration to <code>.env</code> file as follows:</li> </ol> <pre><code>RITS_API_KEY=&lt;RITS api key goes here&gt;\nRITS_API_URL=&lt;RITS url key goes here&gt;\n</code></pre> <ol> <li>Install RITS dependencies as follows:</li> </ol> <pre><code>pip install -e \".[rits]\"\n</code></pre>"},{"location":"ontology/","title":"ai-risk-ontology","text":"<p>An ontology describing AI systems and their risks</p> <p>URI: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</p> <p>Name: ai-risk-ontology</p>"},{"location":"ontology/#classes","title":"Classes","text":"Class Description Any None Container An umbrella object that holds the ontology class instances Entity A generic grouping for any identifiable entity. Action Action to remediate a risk AiEval An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities. Question An evaluation where a question has to be answered Questionnaire A questionnaire groups questions AiEvalResult The result of an evaluation for a specific AI model. AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from conception through retirement. AiModelValidation AI model validation steps that have been performed after the model training to ensure high AI model quality. DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality of AI model training data. AiTask A task, such as summarization and classification, performed by an AI. BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc. AiModel A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel). LargeLanguageModel A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture. AiSystem A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models. AiAgent An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools. Dataset A body of structured information describing some topic(s) of interest. Documentation Documented information about a concept or other topic(s) of interest. LargeLanguageModelFamily A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models. License The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software. Modality A modality supported by an Ai component. Examples include text, image, video. Organization Any organizational entity such as a corporation, educational institution, consortium, government, etc. AiOffice The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office) AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge. Risk The state of uncertainty associated with an AI system, that has the potential to cause harms RiskConcept An umbrella term for refering to risk, risk source, consequence and impact. RiskControl A measure that maintains and/or modifies risk (and risk concepts) RiskGroup A group of AI system related risks that are part of a risk taxonomy. RiskTaxonomy A taxonomy of AI system related risks Fact A fact about something, for example the result of a measurement. In addition to the value, evidence is provided."},{"location":"ontology/#slots","title":"Slots","text":"Slot Description actions A list of risk related actions aimodelfamilies A list of AI model families aimodels A list of AI models aitasks A list of AI tasks architecture A description of the architecture of an AI such as 'Decoder-only' bestValue Annotation of the best possible result of the evaluation broadMatch The property is used to state a hierarchical mapping link between two concept... carbon_emitted The number of tons of carbon dioxide equivalent that are emitted during train... closeMatch The property is used to link two concepts that are sufficiently similar that ... concern Some explanation about the concern related to an AI risk contextWindowSize The total length, in bytes, of an AI model's context window datasets A list of data sets dateCreated The date on which the entity was created dateModified The date on which the entity was most recently modified description The description of an entity descriptor Annotates whether an AI risk is a traditional risk, specific to or amplified ... detectsRiskConcept The property airo:detectsRiskConcept indicates the control used for detecting... documents A list of documents evaluations A list of AI evaluation methods evidence Evidence provides a source (typical a chunk, paragraph or link) describing wh... exactMatch The property is used to link two concepts, indicating a high degree of confid... fine_tuning A description of the fine-tuning mechanism(s) applied to a model gpu_hours GPU consumption in terms of hours grants_license A relationship from a granting entity such as an Organization to a License in... hasAiActorTask Pertinent AI Actor Tasks for each subcategory hasDataset A relationship to datasets that are used hasDocumentation Indicates documentation associated with an entity hasEuAiSystemType The type of system as defined by the EU AI Act hasEuRiskCategory The risk category of an AI system as defined by the EU AI Act hasEvaluation A relationship indicating that an entity has an AI evaluation result hasInputModality A relationship indicating the input modalities supported by an AI component hasLicense Indicates licenses associated with a resource hasModelCard A relationship to model card references hasOutputModality A relationship indicating the output modalities supported by an AI component hasPart A relationship where an entity has another entity hasRelatedAction A relationship where an entity relates to an action hasRelatedRisk A relationship where an entity relates to a risk hasRiskControl Indicates the control measures associated with a system or component to modif... hasTrainingData A relationship indicating the datasets an AI model was trained on hasUnitxtCard A relationship to a Unitxt card defining the risk evaluation id A unique identifier to this instance of the model element isComposedOf Relationship indicating the some entity is composed of other entities (includ... isDefinedByTaxonomy A relationship where a risk or a risk group is defined by a risk taxonomy isDeployedBy A relationship indicating that an entity has been deployed by an organization isDetectedBy A relationship where a risk, risk source, consequence, or impact is detected ... isDistributedBy A relationship indicating that an entity has been distributed by an organizat... isImportedBy A relationship indicating that an entity has been imported by an organization isPartOf A relationship where an entity is part of another entity isProvidedBy A relationship indicating the AI model has been provided by an AI model provi... isResultOf A relationship indicating that an entity is the result of an AI evaluation licenses A list of licenses modalities A list of AI modalities name A text name of this instance narrowMatch The property is used to state a hierarchical mapping link between two concept... numParameters A property indicating the number of parameters in a LLM numTrainingTokens The number of tokens a AI model was trained on organizations A list of organizations performsTask relationship indicating the AI tasks an AI model can perform phase Annotation whether an AI risk shows specifically during the training-tuning o... power_consumption_w power consumption in Watts producer A relationship to the Organization instance which produces this instance provider A relationship to the Organization instance that provides this instance relatedMatch The property skos:relatedMatch is used to state an associative mapping link b... riskcontrols A list of AI risk controls riskgroups A list of AI risk groups risks A list of AI risks supported_languages A list of languages, expressed as ISO two letter codes tag A shost version of the name taxonomies A list of AI risk taxonomies text The question itself training_data_preprocessing relationship indicating data preprocessing steps performed on training data s... type Annotation whether an AI risk occurs at input or output or is non-technical url An optional URL associated with this instance validated_by A relationship indicating the model validation steps after AI model training value Some numeric or string value version The version of the entity embodied by a specified resource"},{"location":"ontology/#enumerations","title":"Enumerations","text":"Enumeration Description AiSystemType EuAiRiskCategory"},{"location":"ontology/#types","title":"Types","text":"Type Description Boolean A binary (true or false) value Curie a compact URI Date a date (year, month and day) in an idealized calendar DateOrDatetime Either a date or a datetime Datetime The combination of a date and time Decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... Double A real number that conforms to the xsd:double specification Float A real number that conforms to the xsd:float specification Integer An integer Jsonpath A string encoding a JSON Path Jsonpointer A string encoding a JSON Pointer Ncname Prefix part of CURIE Nodeidentifier A URI, CURIE or BNODE that represents a node in a model Objectidentifier A URI or CURIE that represents an object in the model Sparqlpath A string encoding a SPARQL Property Path String A character string Time A time object represents a (local) time of day, independent of any particular... Uri a complete URI Uriorcurie a URI or a CURIE"},{"location":"ontology/#subsets","title":"Subsets","text":"Subset Description"},{"location":"ontology/Action/","title":"Class: Action","text":"<p>Action to remediate a risk</p> <p>URI: nexus:Action</p> <pre><code> classDiagram\n    class Action\n    click Action href \"../Action\"\n      Entity &lt;|-- Action\n        click Entity href \"../Entity\"\n\n      Action : dateCreated\n\n      Action : dateModified\n\n      Action : description\n\n      Action : hasAiActorTask\n\n      Action : hasDocumentation\n\n\n\n\n    Action --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      Action : hasRelatedRisk\n\n\n\n\n    Action --&gt; \"*\" Risk : hasRelatedRisk\n    click Risk href \"../Risk\"\n\n\n      Action : id\n\n      Action : isDefinedByTaxonomy\n\n\n\n\n    Action --&gt; \"0..1\" RiskTaxonomy : isDefinedByTaxonomy\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n\n\n      Action : name\n\n      Action : url\n\n</code></pre>"},{"location":"ontology/Action/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Action</li> </ul> </li> </ul>"},{"location":"ontology/Action/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasRelatedRisk *  Risk A relationship where an entity relates to a risk direct hasDocumentation *  Documentation Indicates documentation associated with an entity direct isDefinedByTaxonomy 0..1  RiskTaxonomy A relationship where a risk or a risk group is defined by a risk taxonomy direct hasAiActorTask *  String Pertinent AI Actor Tasks for each subcategory direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Action/#usages","title":"Usages","text":"used by used in type used Container actions range Action Risk hasRelatedAction range Action"},{"location":"ontology/Action/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Action/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Action/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:Action native nexus:Action"},{"location":"ontology/Action/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Action/#direct","title":"Direct","text":"<pre><code>name: Action\ndescription: Action to remediate a risk\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- hasRelatedRisk\n- hasDocumentation\n- isDefinedByTaxonomy\n- hasAiActorTask\n</code></pre>"},{"location":"ontology/Action/#induced","title":"Induced","text":"<pre><code>name: Action\ndescription: Action to remediate a risk\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  hasRelatedRisk:\n    name: hasRelatedRisk\n    description: A relationship where an entity relates to a risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: hasRelatedRisk\n    owner: Action\n    domain_of:\n    - Action\n    - AiEval\n    range: Risk\n    multivalued: true\n    inlined: false\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: Action\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  isDefinedByTaxonomy:\n    name: isDefinedByTaxonomy\n    description: A relationship where a risk or a risk group is defined by a risk\n      taxonomy\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isDefinedByTaxonomy\n    owner: Action\n    domain_of:\n    - RiskGroup\n    - Risk\n    - RiskControl\n    - Action\n    range: RiskTaxonomy\n  hasAiActorTask:\n    name: hasAiActorTask\n    description: Pertinent AI Actor Tasks for each subcategory. Not every AI Actor\n      Task listed will apply to every suggested action in the subcategory (i.e., some\n      apply to AI development and others apply to AI deployment).\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasAiActorTask\n    owner: Action\n    domain_of:\n    - Action\n    range: string\n    multivalued: true\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Action\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Action\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Action\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Action\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Action\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Action\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/AiAgent/","title":"Class: AiAgent","text":"<p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>URI: nexus:AiAgent</p> <pre><code> classDiagram\n    class AiAgent\n    click AiAgent href \"../AiAgent\"\n      AiSystem &lt;|-- AiAgent\n        click AiSystem href \"../AiSystem\"\n\n      AiAgent : dateCreated\n\n      AiAgent : dateModified\n\n      AiAgent : description\n\n      AiAgent : hasDocumentation\n\n\n\n\n    AiAgent --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      AiAgent : hasEuAiSystemType\n\n\n\n\n    AiAgent --&gt; \"0..1\" AiSystemType : hasEuAiSystemType\n    click AiSystemType href \"../AiSystemType\"\n\n\n      AiAgent : hasEuRiskCategory\n\n\n\n\n    AiAgent --&gt; \"0..1\" EuAiRiskCategory : hasEuRiskCategory\n    click EuAiRiskCategory href \"../EuAiRiskCategory\"\n\n\n      AiAgent : hasLicense\n\n\n\n\n    AiAgent --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      AiAgent : hasModelCard\n\n      AiAgent : id\n\n      AiAgent : isProvidedBy\n\n\n\n\n    AiAgent --&gt; \"0..1\" AiProvider : isProvidedBy\n    click AiProvider href \"../AiProvider\"\n\n\n      AiAgent : name\n\n      AiAgent : performsTask\n\n\n\n\n    AiAgent --&gt; \"*\" AiTask : performsTask\n    click AiTask href \"../AiTask\"\n\n\n      AiAgent : producer\n\n\n\n\n    AiAgent --&gt; \"0..1\" Organization : producer\n    click Organization href \"../Organization\"\n\n\n      AiAgent : url\n\n</code></pre>"},{"location":"ontology/AiAgent/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>BaseAi<ul> <li>AiSystem<ul> <li>AiAgent</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiAgent/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasEuAiSystemType 0..1  AiSystemType The type of system as defined by the EU AI Act AiSystem hasEuRiskCategory 0..1  EuAiRiskCategory The risk category of an AI system as defined by the EU AI Act AiSystem producer 0..1  Organization A relationship to the Organization instance which produces this instance BaseAi hasModelCard *  String A relationship to model card references BaseAi hasDocumentation *  Documentation Indicates documentation associated with an entity BaseAi hasLicense 0..1  License Indicates licenses associated with a resource BaseAi performsTask *  AiTask relationship indicating the AI tasks an AI model can perform BaseAi isProvidedBy 0..1  AiProvider A relationship indicating the AI agent has been provided by an AI systems pro... BaseAi id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiAgent/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiAgent/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiAgent/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:AiAgent native nexus:AiAgent"},{"location":"ontology/AiAgent/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiAgent/#direct","title":"Direct","text":"<pre><code>name: AiAgent\ndescription: An artificial intelligence (AI) agent refers to a system or program that\n  is capable of autonomously performing tasks on behalf of a user or another system\n  by designing its workflow and utilizing available tools.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiSystem\nslot_usage:\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI agent has been provided by an AI\n      systems provider.\n</code></pre>"},{"location":"ontology/AiAgent/#induced","title":"Induced","text":"<pre><code>name: AiAgent\ndescription: An artificial intelligence (AI) agent refers to a system or program that\n  is capable of autonomously performing tasks on behalf of a user or another system\n  by designing its workflow and utilizing available tools.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiSystem\nslot_usage:\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI agent has been provided by an AI\n      systems provider.\nattributes:\n  hasEuAiSystemType:\n    name: hasEuAiSystemType\n    description: The type of system as defined by the EU AI Act.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasEuAiSystemType\n    owner: AiAgent\n    domain_of:\n    - AiSystem\n    range: AiSystemType\n  hasEuRiskCategory:\n    name: hasEuRiskCategory\n    description: The risk category of an AI system as defined by the EU AI Act.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasEuRiskCategory\n    owner: AiAgent\n    domain_of:\n    - AiSystem\n    range: EuAiRiskCategory\n  producer:\n    name: producer\n    description: A relationship to the Organization instance which produces this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: producer\n    owner: AiAgent\n    domain_of:\n    - BaseAi\n    range: Organization\n  hasModelCard:\n    name: hasModelCard\n    description: A relationship to model card references.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasModelCard\n    owner: AiAgent\n    domain_of:\n    - BaseAi\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: AiAgent\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: AiAgent\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  performsTask:\n    name: performsTask\n    description: relationship indicating the AI tasks an AI model can perform.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: performsTask\n    owner: AiAgent\n    domain_of:\n    - BaseAi\n    range: AiTask\n    multivalued: true\n    inlined: false\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI agent has been provided by an AI\n      systems provider.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:isProvidedBy\n    alias: isProvidedBy\n    owner: AiAgent\n    domain_of:\n    - BaseAi\n    range: AiProvider\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiAgent\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/AiEval/","title":"Class: AiEval","text":"<p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>URI: dqv:Metric</p> <pre><code> classDiagram\n    class AiEval\n    click AiEval href \"../AiEval\"\n      Entity &lt;|-- AiEval\n        click Entity href \"../Entity\"\n\n\n      AiEval &lt;|-- Question\n        click Question href \"../Question\"\n      AiEval &lt;|-- Questionnaire\n        click Questionnaire href \"../Questionnaire\"\n\n\n      AiEval : bestValue\n\n      AiEval : dateCreated\n\n      AiEval : dateModified\n\n      AiEval : description\n\n      AiEval : hasDataset\n\n\n\n\n    AiEval --&gt; \"*\" Dataset : hasDataset\n    click Dataset href \"../Dataset\"\n\n\n      AiEval : hasDocumentation\n\n\n\n\n    AiEval --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      AiEval : hasLicense\n\n\n\n\n    AiEval --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      AiEval : hasRelatedRisk\n\n\n\n\n    AiEval --&gt; \"*\" Risk : hasRelatedRisk\n    click Risk href \"../Risk\"\n\n\n      AiEval : hasUnitxtCard\n\n      AiEval : id\n\n      AiEval : name\n\n      AiEval : url\n\n</code></pre>"},{"location":"ontology/AiEval/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiEval<ul> <li>Question</li> <li>Questionnaire</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiEval/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasDocumentation *  Documentation Indicates documentation associated with an entity direct hasDataset *  Dataset A relationship to datasets that are used direct hasUnitxtCard 0..1  Uri A relationship to a Unitxt card defining the risk evaluation direct hasLicense 0..1  License Indicates licenses associated with a resource direct hasRelatedRisk *  Risk A relationship where an entity relates to a risk direct bestValue 0..1  String Annotation of the best possible result of the evaluation direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiEval/#usages","title":"Usages","text":"used by used in type used Container evaluations range AiEval AiEvalResult isResultOf range AiEval"},{"location":"ontology/AiEval/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiEval/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiEval/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self dqv:Metric native nexus:AiEval"},{"location":"ontology/AiEval/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiEval/#direct","title":"Direct","text":"<pre><code>name: AiEval\ndescription: An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a\n  question or a combination of such entities.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- hasDocumentation\n- hasDataset\n- hasUnitxtCard\n- hasLicense\n- hasRelatedRisk\n- bestValue\nslot_usage:\n  isComposedOf:\n    name: isComposedOf\n    description: A relationship indicating that an AI evaluation maybe composed of\n      other AI evaluations (e.g. it's an overall average of other scores).\n    range: AiEval\nclass_uri: dqv:Metric\n</code></pre>"},{"location":"ontology/AiEval/#induced","title":"Induced","text":"<pre><code>name: AiEval\ndescription: An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a\n  question or a combination of such entities.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslot_usage:\n  isComposedOf:\n    name: isComposedOf\n    description: A relationship indicating that an AI evaluation maybe composed of\n      other AI evaluations (e.g. it's an overall average of other scores).\n    range: AiEval\nattributes:\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: AiEval\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasDataset:\n    name: hasDataset\n    description: A relationship to datasets that are used.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasDataset\n    owner: AiEval\n    domain_of:\n    - AiEval\n    range: Dataset\n    multivalued: true\n    inlined: false\n  hasUnitxtCard:\n    name: hasUnitxtCard\n    description: A relationship to a Unitxt card defining the risk evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: hasUnitxtCard\n    owner: AiEval\n    domain_of:\n    - AiEval\n    range: uri\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: AiEval\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  hasRelatedRisk:\n    name: hasRelatedRisk\n    description: A relationship where an entity relates to a risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: hasRelatedRisk\n    owner: AiEval\n    domain_of:\n    - Action\n    - AiEval\n    range: Risk\n    multivalued: true\n    inlined: false\n  bestValue:\n    name: bestValue\n    description: Annotation of the best possible result of the evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: bestValue\n    owner: AiEval\n    domain_of:\n    - AiEval\n    range: string\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiEval\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: dqv:Metric\n</code></pre>"},{"location":"ontology/AiEvalResult/","title":"Class: AiEvalResult","text":"<p>The result of an evaluation for a specific AI model.</p> <p>URI: dqv:QualityMeasurement</p> <pre><code> classDiagram\n    class AiEvalResult\n    click AiEvalResult href \"../AiEvalResult\"\n      Fact &lt;|-- AiEvalResult\n        click Fact href \"../Fact\"\n      Entity &lt;|-- AiEvalResult\n        click Entity href \"../Entity\"\n\n      AiEvalResult : dateCreated\n\n      AiEvalResult : dateModified\n\n      AiEvalResult : description\n\n      AiEvalResult : evidence\n\n      AiEvalResult : id\n\n      AiEvalResult : isResultOf\n\n\n\n\n    AiEvalResult --&gt; \"0..1\" AiEval : isResultOf\n    click AiEval href \"../AiEval\"\n\n\n      AiEvalResult : name\n\n      AiEvalResult : url\n\n      AiEvalResult : value\n\n</code></pre>"},{"location":"ontology/AiEvalResult/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiEvalResult [ Fact]</li> </ul> </li> </ul>"},{"location":"ontology/AiEvalResult/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance isResultOf 0..1  AiEval A relationship indicating that an entity is the result of an AI evaluation direct value 1  String Some numeric or string value Fact evidence 0..1  String Evidence provides a source (typical a chunk, paragraph or link) describing wh... Fact id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiEvalResult/#usages","title":"Usages","text":"used by used in type used AiModel hasEvaluation range AiEvalResult LargeLanguageModel hasEvaluation range AiEvalResult"},{"location":"ontology/AiEvalResult/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiEvalResult/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiEvalResult/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self dqv:QualityMeasurement native nexus:AiEvalResult"},{"location":"ontology/AiEvalResult/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiEvalResult/#direct","title":"Direct","text":"<pre><code>name: AiEvalResult\ndescription: The result of an evaluation for a specific AI model.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- Fact\nslots:\n- isResultOf\nclass_uri: dqv:QualityMeasurement\n</code></pre>"},{"location":"ontology/AiEvalResult/#induced","title":"Induced","text":"<pre><code>name: AiEvalResult\ndescription: The result of an evaluation for a specific AI model.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- Fact\nattributes:\n  isResultOf:\n    name: isResultOf\n    description: A relationship indicating that an entity is the result of an AI evaluation.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: dqv:isMeasurementOf\n    alias: isResultOf\n    owner: AiEvalResult\n    domain_of:\n    - AiEvalResult\n    range: AiEval\n    inlined: false\n  value:\n    name: value\n    description: Some numeric or string value\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: value\n    owner: AiEvalResult\n    domain_of:\n    - Fact\n    range: string\n    required: true\n  evidence:\n    name: evidence\n    description: Evidence provides a source (typical a chunk, paragraph or link) describing\n      where some value was found or how it was generated.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: evidence\n    owner: AiEvalResult\n    domain_of:\n    - Fact\n    range: string\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiEvalResult\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: dqv:QualityMeasurement\n</code></pre>"},{"location":"ontology/AiLifecyclePhase/","title":"Class: AiLifecyclePhase","text":"<p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: airo:AILifecyclePhase</p> <pre><code> classDiagram\n    class AiLifecyclePhase\n    click AiLifecyclePhase href \"../AiLifecyclePhase\"\n      Entity &lt;|-- AiLifecyclePhase\n        click Entity href \"../Entity\"\n\n\n      AiLifecyclePhase &lt;|-- DataPreprocessing\n        click DataPreprocessing href \"../DataPreprocessing\"\n      AiLifecyclePhase &lt;|-- AiModelValidation\n        click AiModelValidation href \"../AiModelValidation\"\n\n\n      AiLifecyclePhase : dateCreated\n\n      AiLifecyclePhase : dateModified\n\n      AiLifecyclePhase : description\n\n      AiLifecyclePhase : id\n\n      AiLifecyclePhase : name\n\n      AiLifecyclePhase : url\n\n</code></pre>"},{"location":"ontology/AiLifecyclePhase/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiLifecyclePhase<ul> <li>DataPreprocessing</li> <li>AiModelValidation</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiLifecyclePhase/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiLifecyclePhase/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiLifecyclePhase/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiLifecyclePhase/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:AILifecyclePhase native nexus:AiLifecyclePhase"},{"location":"ontology/AiLifecyclePhase/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiLifecyclePhase/#direct","title":"Direct","text":"<pre><code>name: AiLifecyclePhase\ndescription: A Phase of AI lifecycle which indicates evolution of the system from\n  conception through retirement.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nabstract: true\nclass_uri: airo:AILifecyclePhase\n</code></pre>"},{"location":"ontology/AiLifecyclePhase/#induced","title":"Induced","text":"<pre><code>name: AiLifecyclePhase\ndescription: A Phase of AI lifecycle which indicates evolution of the system from\n  conception through retirement.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nabstract: true\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiLifecyclePhase\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:AILifecyclePhase\n</code></pre>"},{"location":"ontology/AiModel/","title":"Class: AiModel","text":"<p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>URI: nexus:AiModel</p> <pre><code> classDiagram\n    class AiModel\n    click AiModel href \"../AiModel\"\n      BaseAi &lt;|-- AiModel\n        click BaseAi href \"../BaseAi\"\n\n\n      AiModel &lt;|-- LargeLanguageModel\n        click LargeLanguageModel href \"../LargeLanguageModel\"\n\n\n      AiModel : architecture\n\n      AiModel : carbon_emitted\n\n      AiModel : dateCreated\n\n      AiModel : dateModified\n\n      AiModel : description\n\n      AiModel : gpu_hours\n\n      AiModel : hasDocumentation\n\n\n\n\n    AiModel --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      AiModel : hasEvaluation\n\n\n\n\n    AiModel --&gt; \"*\" AiEvalResult : hasEvaluation\n    click AiEvalResult href \"../AiEvalResult\"\n\n\n      AiModel : hasLicense\n\n\n\n\n    AiModel --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      AiModel : hasModelCard\n\n      AiModel : hasRiskControl\n\n\n\n\n    AiModel --&gt; \"*\" RiskControl : hasRiskControl\n    click RiskControl href \"../RiskControl\"\n\n\n      AiModel : id\n\n      AiModel : isProvidedBy\n\n\n\n\n    AiModel --&gt; \"0..1\" AiProvider : isProvidedBy\n    click AiProvider href \"../AiProvider\"\n\n\n      AiModel : name\n\n      AiModel : performsTask\n\n\n\n\n    AiModel --&gt; \"*\" AiTask : performsTask\n    click AiTask href \"../AiTask\"\n\n\n      AiModel : power_consumption_w\n\n      AiModel : producer\n\n\n\n\n    AiModel --&gt; \"0..1\" Organization : producer\n    click Organization href \"../Organization\"\n\n\n      AiModel : url\n\n</code></pre>"},{"location":"ontology/AiModel/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>BaseAi<ul> <li>AiModel<ul> <li>LargeLanguageModel</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiModel/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasEvaluation *  AiEvalResult A relationship indicating that an entity has an AI evaluation result direct architecture 0..1  String A description of the architecture of an AI such as 'Decoder-only' direct gpu_hours 0..1  Integer GPU consumption in terms of hours direct power_consumption_w 0..1  Integer power consumption in Watts direct carbon_emitted 0..1  Float The number of tons of carbon dioxide equivalent that are emitted during train... direct hasRiskControl *  RiskControl Indicates the control measures associated with a system or component to modif... direct producer 0..1  Organization A relationship to the Organization instance which produces this instance BaseAi hasModelCard *  String A relationship to model card references BaseAi hasDocumentation *  Documentation Indicates documentation associated with an entity BaseAi hasLicense 0..1  License Indicates licenses associated with a resource BaseAi performsTask *  AiTask relationship indicating the AI tasks an AI model can perform BaseAi isProvidedBy 0..1  AiProvider A relationship indicating the AI model has been provided by an AI model provi... BaseAi id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiModel/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiModel/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiModel/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:AiModel native nexus:AiModel"},{"location":"ontology/AiModel/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiModel/#direct","title":"Direct","text":"<pre><code>name: AiModel\ndescription: A base AI Model class. No assumption about the type (SVM, LLM, etc.).\n  Subclassed by model types (see LargeLanguageModel).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: BaseAi\nslots:\n- hasEvaluation\n- architecture\n- gpu_hours\n- power_consumption_w\n- carbon_emitted\n- hasRiskControl\n</code></pre>"},{"location":"ontology/AiModel/#induced","title":"Induced","text":"<pre><code>name: AiModel\ndescription: A base AI Model class. No assumption about the type (SVM, LLM, etc.).\n  Subclassed by model types (see LargeLanguageModel).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: BaseAi\nattributes:\n  hasEvaluation:\n    name: hasEvaluation\n    description: A relationship indicating that an entity has an AI evaluation result.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: dqv:hasQualityMeasurement\n    alias: hasEvaluation\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: AiEvalResult\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  architecture:\n    name: architecture\n    description: A description of the architecture of an AI such as 'Decoder-only'.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: architecture\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: string\n  gpu_hours:\n    name: gpu_hours\n    description: GPU consumption in terms of hours\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: gpu_hours\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: integer\n    minimum_value: 0\n  power_consumption_w:\n    name: power_consumption_w\n    description: power consumption in Watts\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: power_consumption_w\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: integer\n    minimum_value: 0\n  carbon_emitted:\n    name: carbon_emitted\n    description: The number of tons of carbon dioxide equivalent that are emitted\n      during training\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: carbon_emitted\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: float\n    minimum_value: 0\n    unit:\n      symbol: t CO2-eq\n      descriptive_name: tons of CO2 equivalent\n  hasRiskControl:\n    name: hasRiskControl\n    description: Indicates the control measures associated with a system or component\n      to modify risks.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasRiskControl\n    alias: hasRiskControl\n    owner: AiModel\n    domain_of:\n    - AiModel\n    range: RiskControl\n    multivalued: true\n  producer:\n    name: producer\n    description: A relationship to the Organization instance which produces this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: producer\n    owner: AiModel\n    domain_of:\n    - BaseAi\n    range: Organization\n  hasModelCard:\n    name: hasModelCard\n    description: A relationship to model card references.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasModelCard\n    owner: AiModel\n    domain_of:\n    - BaseAi\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: AiModel\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: AiModel\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  performsTask:\n    name: performsTask\n    description: relationship indicating the AI tasks an AI model can perform.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: performsTask\n    owner: AiModel\n    domain_of:\n    - BaseAi\n    range: AiTask\n    multivalued: true\n    inlined: false\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI model has been provided by an AI\n      model provider.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:isProvidedBy\n    alias: isProvidedBy\n    owner: AiModel\n    domain_of:\n    - BaseAi\n    range: AiProvider\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiModel\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/AiModelValidation/","title":"Class: AiModelValidation","text":"<p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>URI: nexus:AiModelValidation</p> <pre><code> classDiagram\n    class AiModelValidation\n    click AiModelValidation href \"../AiModelValidation\"\n      AiLifecyclePhase &lt;|-- AiModelValidation\n        click AiLifecyclePhase href \"../AiLifecyclePhase\"\n\n      AiModelValidation : dateCreated\n\n      AiModelValidation : dateModified\n\n      AiModelValidation : description\n\n      AiModelValidation : id\n\n      AiModelValidation : name\n\n      AiModelValidation : url\n\n</code></pre>"},{"location":"ontology/AiModelValidation/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiLifecyclePhase<ul> <li>AiModelValidation</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiModelValidation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiModelValidation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiModelValidation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiModelValidation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:AiModelValidation native nexus:AiModelValidation"},{"location":"ontology/AiModelValidation/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiModelValidation/#direct","title":"Direct","text":"<pre><code>name: AiModelValidation\ndescription: AI model validation steps that have been performed after the model training\n  to ensure high AI model quality.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiLifecyclePhase\n</code></pre>"},{"location":"ontology/AiModelValidation/#induced","title":"Induced","text":"<pre><code>name: AiModelValidation\ndescription: AI model validation steps that have been performed after the model training\n  to ensure high AI model quality.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiLifecyclePhase\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiModelValidation\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/AiOffice/","title":"Class: AiOffice","text":"<p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>URI: schema:Organization</p> <pre><code> classDiagram\n    class AiOffice\n    click AiOffice href \"../AiOffice\"\n      Organization &lt;|-- AiOffice\n        click Organization href \"../Organization\"\n\n      AiOffice : dateCreated\n\n      AiOffice : dateModified\n\n      AiOffice : description\n\n      AiOffice : grants_license\n\n\n\n\n    AiOffice --&gt; \"0..1\" License : grants_license\n    click License href \"../License\"\n\n\n      AiOffice : id\n\n      AiOffice : name\n\n      AiOffice : url\n\n</code></pre>"},{"location":"ontology/AiOffice/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Organization<ul> <li>AiOffice</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiOffice/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance grants_license 0..1  License A relationship from a granting entity such as an Organization to a License in... Organization id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiOffice/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiOffice/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiOffice/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:Organization native nexus:AiOffice"},{"location":"ontology/AiOffice/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiOffice/#direct","title":"Direct","text":"<pre><code>name: AiOffice\ndescription: The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Organization\nclass_uri: schema:Organization\n</code></pre>"},{"location":"ontology/AiOffice/#induced","title":"Induced","text":"<pre><code>name: AiOffice\ndescription: The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Organization\nattributes:\n  grants_license:\n    name: grants_license\n    description: A relationship from a granting entity such as an Organization to\n      a License instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: grants_license\n    owner: AiOffice\n    domain_of:\n    - Organization\n    range: License\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiOffice\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: schema:Organization\n</code></pre>"},{"location":"ontology/AiProvider/","title":"Class: AiProvider","text":"<p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>URI: airo:AIProvider</p> <pre><code> classDiagram\n    class AiProvider\n    click AiProvider href \"../AiProvider\"\n      Organization &lt;|-- AiProvider\n        click Organization href \"../Organization\"\n\n      AiProvider : dateCreated\n\n      AiProvider : dateModified\n\n      AiProvider : description\n\n      AiProvider : grants_license\n\n\n\n\n    AiProvider --&gt; \"0..1\" License : grants_license\n    click License href \"../License\"\n\n\n      AiProvider : id\n\n      AiProvider : name\n\n      AiProvider : url\n\n</code></pre>"},{"location":"ontology/AiProvider/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Organization<ul> <li>AiProvider</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiProvider/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance grants_license 0..1  License A relationship from a granting entity such as an Organization to a License in... Organization id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiProvider/#usages","title":"Usages","text":"used by used in type used BaseAi isProvidedBy range AiProvider AiSystem isProvidedBy range AiProvider AiAgent isProvidedBy range AiProvider AiModel isProvidedBy range AiProvider LargeLanguageModel isProvidedBy range AiProvider"},{"location":"ontology/AiProvider/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiProvider/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiProvider/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:AIProvider native nexus:AiProvider"},{"location":"ontology/AiProvider/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiProvider/#direct","title":"Direct","text":"<pre><code>name: AiProvider\ndescription: A provider under the AI Act is defined by Article 3(3) as a natural or\n  legal person or body that develops an AI system or general-purpose AI model or has\n  an AI system or general-purpose AI model developed; and places that system or model\n  on the market, or puts that system into service, under the provider's own name or\n  trademark, whether for payment or free for charge.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Organization\nclass_uri: airo:AIProvider\n</code></pre>"},{"location":"ontology/AiProvider/#induced","title":"Induced","text":"<pre><code>name: AiProvider\ndescription: A provider under the AI Act is defined by Article 3(3) as a natural or\n  legal person or body that develops an AI system or general-purpose AI model or has\n  an AI system or general-purpose AI model developed; and places that system or model\n  on the market, or puts that system into service, under the provider's own name or\n  trademark, whether for payment or free for charge.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Organization\nattributes:\n  grants_license:\n    name: grants_license\n    description: A relationship from a granting entity such as an Organization to\n      a License instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: grants_license\n    owner: AiProvider\n    domain_of:\n    - Organization\n    range: License\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiProvider\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:AIProvider\n</code></pre>"},{"location":"ontology/AiSystem/","title":"Class: AiSystem","text":"<p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>URI: airo:AISystem</p> <pre><code> classDiagram\n    class AiSystem\n    click AiSystem href \"../AiSystem\"\n      BaseAi &lt;|-- AiSystem\n        click BaseAi href \"../BaseAi\"\n\n\n      AiSystem &lt;|-- AiAgent\n        click AiAgent href \"../AiAgent\"\n\n\n      AiSystem : dateCreated\n\n      AiSystem : dateModified\n\n      AiSystem : description\n\n      AiSystem : hasDocumentation\n\n\n\n\n    AiSystem --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      AiSystem : hasEuAiSystemType\n\n\n\n\n    AiSystem --&gt; \"0..1\" AiSystemType : hasEuAiSystemType\n    click AiSystemType href \"../AiSystemType\"\n\n\n      AiSystem : hasEuRiskCategory\n\n\n\n\n    AiSystem --&gt; \"0..1\" EuAiRiskCategory : hasEuRiskCategory\n    click EuAiRiskCategory href \"../EuAiRiskCategory\"\n\n\n      AiSystem : hasLicense\n\n\n\n\n    AiSystem --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      AiSystem : hasModelCard\n\n      AiSystem : id\n\n      AiSystem : isProvidedBy\n\n\n\n\n    AiSystem --&gt; \"0..1\" AiProvider : isProvidedBy\n    click AiProvider href \"../AiProvider\"\n\n\n      AiSystem : name\n\n      AiSystem : performsTask\n\n\n\n\n    AiSystem --&gt; \"*\" AiTask : performsTask\n    click AiTask href \"../AiTask\"\n\n\n      AiSystem : producer\n\n\n\n\n    AiSystem --&gt; \"0..1\" Organization : producer\n    click Organization href \"../Organization\"\n\n\n      AiSystem : url\n\n</code></pre>"},{"location":"ontology/AiSystem/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>BaseAi<ul> <li>AiSystem<ul> <li>AiAgent</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/AiSystem/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasEuAiSystemType 0..1  AiSystemType The type of system as defined by the EU AI Act direct hasEuRiskCategory 0..1  EuAiRiskCategory The risk category of an AI system as defined by the EU AI Act direct producer 0..1  Organization A relationship to the Organization instance which produces this instance BaseAi hasModelCard *  String A relationship to model card references BaseAi hasDocumentation *  Documentation Indicates documentation associated with an entity BaseAi hasLicense 0..1  License Indicates licenses associated with a resource BaseAi performsTask *  AiTask relationship indicating the AI tasks an AI model can perform BaseAi isProvidedBy 0..1  AiProvider A relationship indicating the AI model has been provided by an AI model provi... BaseAi id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiSystem/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiSystem/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiSystem/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:AISystem native nexus:AiSystem"},{"location":"ontology/AiSystem/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiSystem/#direct","title":"Direct","text":"<pre><code>name: AiSystem\ndescription: A compound AI System composed of one or more AI capablities. ChatGPT\n  is an example of an AI system which deploys multiple GPT AI models.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: BaseAi\nslots:\n- hasEuAiSystemType\n- hasEuRiskCategory\nslot_usage:\n  isComposedOf:\n    name: isComposedOf\n    description: Relationship indicating the AI components from which a complete AI\n      system is composed.\n    range: BaseAi\nclass_uri: airo:AISystem\n</code></pre>"},{"location":"ontology/AiSystem/#induced","title":"Induced","text":"<pre><code>name: AiSystem\ndescription: A compound AI System composed of one or more AI capablities. ChatGPT\n  is an example of an AI system which deploys multiple GPT AI models.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: BaseAi\nslot_usage:\n  isComposedOf:\n    name: isComposedOf\n    description: Relationship indicating the AI components from which a complete AI\n      system is composed.\n    range: BaseAi\nattributes:\n  hasEuAiSystemType:\n    name: hasEuAiSystemType\n    description: The type of system as defined by the EU AI Act.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasEuAiSystemType\n    owner: AiSystem\n    domain_of:\n    - AiSystem\n    range: AiSystemType\n  hasEuRiskCategory:\n    name: hasEuRiskCategory\n    description: The risk category of an AI system as defined by the EU AI Act.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasEuRiskCategory\n    owner: AiSystem\n    domain_of:\n    - AiSystem\n    range: EuAiRiskCategory\n  producer:\n    name: producer\n    description: A relationship to the Organization instance which produces this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: producer\n    owner: AiSystem\n    domain_of:\n    - BaseAi\n    range: Organization\n  hasModelCard:\n    name: hasModelCard\n    description: A relationship to model card references.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasModelCard\n    owner: AiSystem\n    domain_of:\n    - BaseAi\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: AiSystem\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: AiSystem\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  performsTask:\n    name: performsTask\n    description: relationship indicating the AI tasks an AI model can perform.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: performsTask\n    owner: AiSystem\n    domain_of:\n    - BaseAi\n    range: AiTask\n    multivalued: true\n    inlined: false\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI model has been provided by an AI\n      model provider.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:isProvidedBy\n    alias: isProvidedBy\n    owner: AiSystem\n    domain_of:\n    - BaseAi\n    range: AiProvider\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiSystem\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:AISystem\n</code></pre>"},{"location":"ontology/AiSystemType/","title":"Enum: AiSystemType","text":"<p>URI: AiSystemType</p>"},{"location":"ontology/AiSystemType/#permissible-values","title":"Permissible Values","text":"Value Meaning Description GPAI None General-purpose AI (GPAI) GPAI_OS None General-purpose AI (GPAI) models released under free and open-source licences PROHIBITED None Prohibited AI system due to unacceptable risk category (e SCIENTIFIC_RD None AI used for scientific research and development MILITARY_SECURITY None AI used for military, defense and security purposes HIGH_RISK None AI systems pursuant to Article 6(1)(2) Classification Rules for High-Risk AI ..."},{"location":"ontology/AiSystemType/#slots","title":"Slots","text":"Name Description hasEuAiSystemType The type of system as defined by the EU AI Act"},{"location":"ontology/AiSystemType/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiSystemType/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiSystemType/#linkml-source","title":"LinkML Source","text":"<pre><code>name: AiSystemType\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\npermissible_values:\n  GPAI:\n    text: GPAI\n    description: General-purpose AI (GPAI)\n  GPAI_OS:\n    text: GPAI_OS\n    description: General-purpose AI (GPAI) models released under free and open-source\n      licences\n  PROHIBITED:\n    text: PROHIBITED\n    description: Prohibited AI system due to unacceptable risk category (e.g. social\n      scoring systems and manipulative AI).\n  SCIENTIFIC_RD:\n    text: SCIENTIFIC_RD\n    description: AI used for scientific research and development\n  MILITARY_SECURITY:\n    text: MILITARY_SECURITY\n    description: AI used for military, defense and security purposes.\n  HIGH_RISK:\n    text: HIGH_RISK\n    description: AI systems pursuant to Article 6(1)(2) Classification Rules for High-Risk\n      AI Systems\n</code></pre>"},{"location":"ontology/AiTask/","title":"Class: AiTask","text":"<p>A task, such as summarization and classification, performed by an AI.</p> <p>URI: airo:AiCapability</p> <pre><code> classDiagram\n    class AiTask\n    click AiTask href \"../AiTask\"\n      Entity &lt;|-- AiTask\n        click Entity href \"../Entity\"\n\n      AiTask : dateCreated\n\n      AiTask : dateModified\n\n      AiTask : description\n\n      AiTask : id\n\n      AiTask : name\n\n      AiTask : url\n\n</code></pre>"},{"location":"ontology/AiTask/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiTask</li> </ul> </li> </ul>"},{"location":"ontology/AiTask/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/AiTask/#usages","title":"Usages","text":"used by used in type used Container aitasks range AiTask BaseAi performsTask range AiTask AiSystem performsTask range AiTask AiAgent performsTask range AiTask AiModel performsTask range AiTask LargeLanguageModel performsTask range AiTask"},{"location":"ontology/AiTask/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/AiTask/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/AiTask/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:AiCapability native nexus:AiTask"},{"location":"ontology/AiTask/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/AiTask/#direct","title":"Direct","text":"<pre><code>name: AiTask\ndescription: A task, such as summarization and classification, performed by an AI.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nclass_uri: airo:AiCapability\n</code></pre>"},{"location":"ontology/AiTask/#induced","title":"Induced","text":"<pre><code>name: AiTask\ndescription: A task, such as summarization and classification, performed by an AI.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: AiTask\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:AiCapability\n</code></pre>"},{"location":"ontology/Any/","title":"Class: Any","text":"<p>URI: linkml:Any</p> <pre><code> classDiagram\n    class Any\n    click Any href \"../Any\"\n</code></pre>"},{"location":"ontology/Any/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance"},{"location":"ontology/Any/#usages","title":"Usages","text":"used by used in type used RiskGroup closeMatch range Any RiskGroup exactMatch range Any RiskGroup broadMatch range Any RiskGroup narrowMatch range Any RiskGroup relatedMatch range Any Risk closeMatch range Any Risk exactMatch range Any Risk broadMatch range Any Risk narrowMatch range Any Risk relatedMatch range Any"},{"location":"ontology/Any/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Any/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Any/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkml:Any native nexus:Any"},{"location":"ontology/Any/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Any/#direct","title":"Direct","text":"<pre><code>name: Any\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nclass_uri: linkml:Any\n</code></pre>"},{"location":"ontology/Any/#induced","title":"Induced","text":"<pre><code>name: Any\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nclass_uri: linkml:Any\n</code></pre>"},{"location":"ontology/BaseAi/","title":"Class: BaseAi","text":"<p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: nexus:BaseAi</p> <pre><code> classDiagram\n    class BaseAi\n    click BaseAi href \"../BaseAi\"\n      Entity &lt;|-- BaseAi\n        click Entity href \"../Entity\"\n\n\n      BaseAi &lt;|-- AiSystem\n        click AiSystem href \"../AiSystem\"\n      BaseAi &lt;|-- AiModel\n        click AiModel href \"../AiModel\"\n\n\n      BaseAi : dateCreated\n\n      BaseAi : dateModified\n\n      BaseAi : description\n\n      BaseAi : hasDocumentation\n\n\n\n\n    BaseAi --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      BaseAi : hasLicense\n\n\n\n\n    BaseAi --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      BaseAi : hasModelCard\n\n      BaseAi : id\n\n      BaseAi : isProvidedBy\n\n\n\n\n    BaseAi --&gt; \"0..1\" AiProvider : isProvidedBy\n    click AiProvider href \"../AiProvider\"\n\n\n      BaseAi : name\n\n      BaseAi : performsTask\n\n\n\n\n    BaseAi --&gt; \"*\" AiTask : performsTask\n    click AiTask href \"../AiTask\"\n\n\n      BaseAi : producer\n\n\n\n\n    BaseAi --&gt; \"0..1\" Organization : producer\n    click Organization href \"../Organization\"\n\n\n      BaseAi : url\n\n</code></pre>"},{"location":"ontology/BaseAi/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>BaseAi<ul> <li>AiSystem</li> <li>AiModel</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/BaseAi/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance producer 0..1  Organization A relationship to the Organization instance which produces this instance direct hasModelCard *  String A relationship to model card references direct hasDocumentation *  Documentation Indicates documentation associated with an entity direct hasLicense 0..1  License Indicates licenses associated with a resource direct performsTask *  AiTask relationship indicating the AI tasks an AI model can perform direct isProvidedBy 0..1  AiProvider A relationship indicating the AI model has been provided by an AI model provi... direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/BaseAi/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/BaseAi/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/BaseAi/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:BaseAi native nexus:BaseAi"},{"location":"ontology/BaseAi/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/BaseAi/#direct","title":"Direct","text":"<pre><code>name: BaseAi\ndescription: Any type of AI, be it a LLM, RL agent, SVM, etc.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nabstract: true\nslots:\n- producer\n- hasModelCard\n- hasDocumentation\n- hasLicense\n- performsTask\n- isProvidedBy\n</code></pre>"},{"location":"ontology/BaseAi/#induced","title":"Induced","text":"<pre><code>name: BaseAi\ndescription: Any type of AI, be it a LLM, RL agent, SVM, etc.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nabstract: true\nattributes:\n  producer:\n    name: producer\n    description: A relationship to the Organization instance which produces this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: producer\n    owner: BaseAi\n    domain_of:\n    - BaseAi\n    range: Organization\n  hasModelCard:\n    name: hasModelCard\n    description: A relationship to model card references.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasModelCard\n    owner: BaseAi\n    domain_of:\n    - BaseAi\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: BaseAi\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: BaseAi\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  performsTask:\n    name: performsTask\n    description: relationship indicating the AI tasks an AI model can perform.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: performsTask\n    owner: BaseAi\n    domain_of:\n    - BaseAi\n    range: AiTask\n    multivalued: true\n    inlined: false\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI model has been provided by an AI\n      model provider.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:isProvidedBy\n    alias: isProvidedBy\n    owner: BaseAi\n    domain_of:\n    - BaseAi\n    range: AiProvider\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: BaseAi\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/Boolean/","title":"Type: Boolean","text":"<p>A binary (true or false) value</p> <p>URI: xsd:boolean</p> <ul> <li> <p>base: Bool</p> </li> <li> <p>uri: xsd:boolean</p> </li> <li> <p>repr: bool</p> </li> </ul>"},{"location":"ontology/Boolean/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Boolean/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Boolean/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:boolean native nexus:boolean exact schema:Boolean"},{"location":"ontology/Container/","title":"Class: Container","text":"<p>An umbrella object that holds the ontology class instances</p> <p>URI: nexus:Container</p> <pre><code> classDiagram\n    class Container\n    click Container href \"../Container\"\n      Container : actions\n\n\n\n\n    Container --&gt; \"*\" Action : actions\n    click Action href \"../Action\"\n\n\n      Container : aimodelfamilies\n\n\n\n\n    Container --&gt; \"*\" LargeLanguageModelFamily : aimodelfamilies\n    click LargeLanguageModelFamily href \"../LargeLanguageModelFamily\"\n\n\n      Container : aimodels\n\n\n\n\n    Container --&gt; \"*\" LargeLanguageModel : aimodels\n    click LargeLanguageModel href \"../LargeLanguageModel\"\n\n\n      Container : aitasks\n\n\n\n\n    Container --&gt; \"*\" AiTask : aitasks\n    click AiTask href \"../AiTask\"\n\n\n      Container : datasets\n\n\n\n\n    Container --&gt; \"*\" Dataset : datasets\n    click Dataset href \"../Dataset\"\n\n\n      Container : documents\n\n\n\n\n    Container --&gt; \"*\" Documentation : documents\n    click Documentation href \"../Documentation\"\n\n\n      Container : evaluations\n\n\n\n\n    Container --&gt; \"*\" AiEval : evaluations\n    click AiEval href \"../AiEval\"\n\n\n      Container : licenses\n\n\n\n\n    Container --&gt; \"*\" License : licenses\n    click License href \"../License\"\n\n\n      Container : modalities\n\n\n\n\n    Container --&gt; \"*\" Modality : modalities\n    click Modality href \"../Modality\"\n\n\n      Container : organizations\n\n\n\n\n    Container --&gt; \"*\" Organization : organizations\n    click Organization href \"../Organization\"\n\n\n      Container : riskcontrols\n\n\n\n\n    Container --&gt; \"*\" RiskControl : riskcontrols\n    click RiskControl href \"../RiskControl\"\n\n\n      Container : riskgroups\n\n\n\n\n    Container --&gt; \"*\" RiskGroup : riskgroups\n    click RiskGroup href \"../RiskGroup\"\n\n\n      Container : risks\n\n\n\n\n    Container --&gt; \"*\" Risk : risks\n    click Risk href \"../Risk\"\n\n\n      Container : taxonomies\n\n\n\n\n    Container --&gt; \"*\" RiskTaxonomy : taxonomies\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n\n\n</code></pre>"},{"location":"ontology/Container/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance organizations *  Organization A list of organizations direct licenses *  License A list of licenses direct modalities *  Modality A list of AI modalities direct aitasks *  AiTask A list of AI tasks direct documents *  Documentation A list of documents direct datasets *  Dataset A list of data sets direct taxonomies *  RiskTaxonomy A list of AI risk taxonomies direct riskgroups *  RiskGroup A list of AI risk groups direct risks *  Risk A list of AI risks direct riskcontrols *  RiskControl A list of AI risk controls direct actions *  Action A list of risk related actions direct evaluations *  AiEval A list of AI evaluation methods direct aimodelfamilies *  LargeLanguageModelFamily A list of AI model families direct aimodels *  LargeLanguageModel A list of AI models direct"},{"location":"ontology/Container/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Container/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Container/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:Container native nexus:Container"},{"location":"ontology/Container/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Container/#direct","title":"Direct","text":"<pre><code>name: Container\ndescription: An umbrella object that holds the ontology class instances\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nattributes:\n  organizations:\n    name: organizations\n    description: A list of organizations\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Organization\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  licenses:\n    name: licenses\n    description: A list of licenses\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: License\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  modalities:\n    name: modalities\n    description: A list of AI modalities\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Modality\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aitasks:\n    name: aitasks\n    description: A list of AI tasks\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: AiTask\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  documents:\n    name: documents\n    description: A list of documents\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Documentation\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  datasets:\n    name: datasets\n    description: A list of data sets\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Dataset\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  taxonomies:\n    name: taxonomies\n    description: A list of AI risk taxonomies\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: RiskTaxonomy\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  riskgroups:\n    name: riskgroups\n    description: A list of AI risk groups\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: RiskGroup\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  risks:\n    name: risks\n    description: A list of AI risks\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Risk\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  riskcontrols:\n    name: riskcontrols\n    description: A list of AI risk controls\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: RiskControl\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  actions:\n    name: actions\n    description: A list of risk related actions\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: Action\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  evaluations:\n    name: evaluations\n    description: A list of AI evaluation methods\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: AiEval\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aimodelfamilies:\n    name: aimodelfamilies\n    description: A list of AI model families\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: LargeLanguageModelFamily\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aimodels:\n    name: aimodels\n    description: A list of AI models\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain_of:\n    - Container\n    range: LargeLanguageModel\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\ntree_root: true\n</code></pre>"},{"location":"ontology/Container/#induced","title":"Induced","text":"<pre><code>name: Container\ndescription: An umbrella object that holds the ontology class instances\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nattributes:\n  organizations:\n    name: organizations\n    description: A list of organizations\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: organizations\n    owner: Container\n    domain_of:\n    - Container\n    range: Organization\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  licenses:\n    name: licenses\n    description: A list of licenses\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: licenses\n    owner: Container\n    domain_of:\n    - Container\n    range: License\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  modalities:\n    name: modalities\n    description: A list of AI modalities\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: modalities\n    owner: Container\n    domain_of:\n    - Container\n    range: Modality\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aitasks:\n    name: aitasks\n    description: A list of AI tasks\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: aitasks\n    owner: Container\n    domain_of:\n    - Container\n    range: AiTask\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  documents:\n    name: documents\n    description: A list of documents\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: documents\n    owner: Container\n    domain_of:\n    - Container\n    range: Documentation\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  datasets:\n    name: datasets\n    description: A list of data sets\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: datasets\n    owner: Container\n    domain_of:\n    - Container\n    range: Dataset\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  taxonomies:\n    name: taxonomies\n    description: A list of AI risk taxonomies\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: taxonomies\n    owner: Container\n    domain_of:\n    - Container\n    range: RiskTaxonomy\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  riskgroups:\n    name: riskgroups\n    description: A list of AI risk groups\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: riskgroups\n    owner: Container\n    domain_of:\n    - Container\n    range: RiskGroup\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  risks:\n    name: risks\n    description: A list of AI risks\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: risks\n    owner: Container\n    domain_of:\n    - Container\n    range: Risk\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  riskcontrols:\n    name: riskcontrols\n    description: A list of AI risk controls\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: riskcontrols\n    owner: Container\n    domain_of:\n    - Container\n    range: RiskControl\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  actions:\n    name: actions\n    description: A list of risk related actions\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: actions\n    owner: Container\n    domain_of:\n    - Container\n    range: Action\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  evaluations:\n    name: evaluations\n    description: A list of AI evaluation methods\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: evaluations\n    owner: Container\n    domain_of:\n    - Container\n    range: AiEval\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aimodelfamilies:\n    name: aimodelfamilies\n    description: A list of AI model families\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: aimodelfamilies\n    owner: Container\n    domain_of:\n    - Container\n    range: LargeLanguageModelFamily\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  aimodels:\n    name: aimodels\n    description: A list of AI models\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: aimodels\n    owner: Container\n    domain_of:\n    - Container\n    range: LargeLanguageModel\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\ntree_root: true\n</code></pre>"},{"location":"ontology/Curie/","title":"Type: Curie","text":"<p>a compact URI</p> <p>URI: xsd:string</p> <ul> <li> <p>base: Curie</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Curie/#comments","title":"Comments","text":"<ul> <li>in RDF serializations this MUST be expanded to a URI</li> <li>in non-RDF serializations MAY be serialized as the compact representation</li> </ul>"},{"location":"ontology/Curie/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Curie/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Curie/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:curie"},{"location":"ontology/DataPreprocessing/","title":"Class: DataPreprocessing","text":"<p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>URI: nexus:DataPreprocessing</p> <pre><code> classDiagram\n    class DataPreprocessing\n    click DataPreprocessing href \"../DataPreprocessing\"\n      AiLifecyclePhase &lt;|-- DataPreprocessing\n        click AiLifecyclePhase href \"../AiLifecyclePhase\"\n\n      DataPreprocessing : dateCreated\n\n      DataPreprocessing : dateModified\n\n      DataPreprocessing : description\n\n      DataPreprocessing : id\n\n      DataPreprocessing : name\n\n      DataPreprocessing : url\n\n</code></pre>"},{"location":"ontology/DataPreprocessing/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiLifecyclePhase<ul> <li>DataPreprocessing</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/DataPreprocessing/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/DataPreprocessing/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/DataPreprocessing/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/DataPreprocessing/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:DataPreprocessing native nexus:DataPreprocessing"},{"location":"ontology/DataPreprocessing/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/DataPreprocessing/#direct","title":"Direct","text":"<pre><code>name: DataPreprocessing\ndescription: Data transformations, such as PI filtering, performed to ensure high\n  quality of AI model training data.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiLifecyclePhase\n</code></pre>"},{"location":"ontology/DataPreprocessing/#induced","title":"Induced","text":"<pre><code>name: DataPreprocessing\ndescription: Data transformations, such as PI filtering, performed to ensure high\n  quality of AI model training data.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiLifecyclePhase\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: DataPreprocessing\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/Dataset/","title":"Class: Dataset","text":"<p>A body of structured information describing some topic(s) of interest.</p> <p>URI: schema:Dataset</p> <pre><code> classDiagram\n    class Dataset\n    click Dataset href \"../Dataset\"\n      Entity &lt;|-- Dataset\n        click Entity href \"../Entity\"\n\n      Dataset : dateCreated\n\n      Dataset : dateModified\n\n      Dataset : description\n\n      Dataset : hasDocumentation\n\n\n\n\n    Dataset --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      Dataset : hasLicense\n\n\n\n\n    Dataset --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      Dataset : id\n\n      Dataset : name\n\n      Dataset : provider\n\n\n\n\n    Dataset --&gt; \"0..1\" Organization : provider\n    click Organization href \"../Organization\"\n\n\n      Dataset : url\n\n</code></pre>"},{"location":"ontology/Dataset/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Dataset</li> </ul> </li> </ul>"},{"location":"ontology/Dataset/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasLicense 0..1  License Indicates licenses associated with a resource direct hasDocumentation *  Documentation Indicates documentation associated with an entity direct provider 0..1  Organization A relationship to the Organization instance that provides this instance direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Dataset/#usages","title":"Usages","text":"used by used in type used Container datasets range Dataset AiEval hasDataset range Dataset Question hasDataset range Dataset Questionnaire hasDataset range Dataset LargeLanguageModel hasTrainingData range Dataset"},{"location":"ontology/Dataset/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Dataset/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Dataset/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:Dataset native nexus:Dataset"},{"location":"ontology/Dataset/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Dataset/#direct","title":"Direct","text":"<pre><code>name: Dataset\ndescription: A body of structured information describing some topic(s) of interest.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- hasLicense\n- hasDocumentation\n- provider\nclass_uri: schema:Dataset\n</code></pre>"},{"location":"ontology/Dataset/#induced","title":"Induced","text":"<pre><code>name: Dataset\ndescription: A body of structured information describing some topic(s) of interest.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: Dataset\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: Dataset\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  provider:\n    name: provider\n    description: A relationship to the Organization instance that provides this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:provider\n    alias: provider\n    owner: Dataset\n    domain_of:\n    - Dataset\n    range: Organization\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Dataset\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: schema:Dataset\n</code></pre>"},{"location":"ontology/Date/","title":"Type: Date","text":"<p>a date (year, month and day) in an idealized calendar</p> <p>URI: xsd:date</p> <ul> <li> <p>base: XSDDate</p> </li> <li> <p>uri: xsd:date</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Date/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Date/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Date/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:date native nexus:date exact schema:Date"},{"location":"ontology/DateOrDatetime/","title":"Type: DateOrDatetime","text":"<p>Either a date or a datetime</p> <p>URI: linkml:DateOrDatetime</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: linkml:DateOrDatetime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/DateOrDatetime/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/DateOrDatetime/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/DateOrDatetime/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self linkml:DateOrDatetime native nexus:date_or_datetime"},{"location":"ontology/Datetime/","title":"Type: Datetime","text":"<p>The combination of a date and time</p> <p>URI: xsd:dateTime</p> <ul> <li> <p>base: XSDDateTime</p> </li> <li> <p>uri: xsd:dateTime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Datetime/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Datetime/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Datetime/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:dateTime native nexus:datetime exact schema:DateTime"},{"location":"ontology/Decimal/","title":"Type: Decimal","text":"<p>A real number with arbitrary precision that conforms to the xsd:decimal specification</p> <p>URI: xsd:decimal</p> <ul> <li> <p>base: Decimal</p> </li> <li> <p>uri: xsd:decimal</p> </li> </ul>"},{"location":"ontology/Decimal/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Decimal/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Decimal/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:decimal native nexus:decimal broad schema:Number"},{"location":"ontology/Documentation/","title":"Class: Documentation","text":"<p>Documented information about a concept or other topic(s) of interest.</p> <p>URI: airo:Documentation</p> <pre><code> classDiagram\n    class Documentation\n    click Documentation href \"../Documentation\"\n      Entity &lt;|-- Documentation\n        click Entity href \"../Entity\"\n\n      Documentation : dateCreated\n\n      Documentation : dateModified\n\n      Documentation : description\n\n      Documentation : id\n\n      Documentation : name\n\n      Documentation : url\n\n</code></pre>"},{"location":"ontology/Documentation/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Documentation</li> </ul> </li> </ul>"},{"location":"ontology/Documentation/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Documentation/#usages","title":"Usages","text":"used by used in type used Container documents range Documentation Dataset hasDocumentation range Documentation RiskTaxonomy hasDocumentation range Documentation Action hasDocumentation range Documentation AiEval hasDocumentation range Documentation Question hasDocumentation range Documentation Questionnaire hasDocumentation range Documentation BaseAi hasDocumentation range Documentation AiSystem hasDocumentation range Documentation AiAgent hasDocumentation range Documentation AiModel hasDocumentation range Documentation LargeLanguageModel hasDocumentation range Documentation LargeLanguageModelFamily hasDocumentation range Documentation"},{"location":"ontology/Documentation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Documentation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Documentation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:Documentation native nexus:Documentation"},{"location":"ontology/Documentation/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Documentation/#direct","title":"Direct","text":"<pre><code>name: Documentation\ndescription: Documented information about a concept or other topic(s) of interest.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nclass_uri: airo:Documentation\n</code></pre>"},{"location":"ontology/Documentation/#induced","title":"Induced","text":"<pre><code>name: Documentation\ndescription: Documented information about a concept or other topic(s) of interest.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Documentation\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:Documentation\n</code></pre>"},{"location":"ontology/Double/","title":"Type: Double","text":"<p>A real number that conforms to the xsd:double specification</p> <p>URI: xsd:double</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:double</p> </li> </ul>"},{"location":"ontology/Double/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Double/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Double/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:double native nexus:double close schema:Float"},{"location":"ontology/Entity/","title":"Class: Entity","text":"<p>A generic grouping for any identifiable entity.</p> <ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: schema:Thing</p> <pre><code> classDiagram\n    class Entity\n    click Entity href \"../Entity\"\n      Entity &lt;|-- Organization\n        click Organization href \"../Organization\"\n      Entity &lt;|-- License\n        click License href \"../License\"\n      Entity &lt;|-- Dataset\n        click Dataset href \"../Dataset\"\n      Entity &lt;|-- Documentation\n        click Documentation href \"../Documentation\"\n      Entity &lt;|-- RiskTaxonomy\n        click RiskTaxonomy href \"../RiskTaxonomy\"\n      Entity &lt;|-- RiskGroup\n        click RiskGroup href \"../RiskGroup\"\n      Entity &lt;|-- Risk\n        click Risk href \"../Risk\"\n      Entity &lt;|-- RiskConcept\n        click RiskConcept href \"../RiskConcept\"\n      Entity &lt;|-- RiskControl\n        click RiskControl href \"../RiskControl\"\n      Entity &lt;|-- Action\n        click Action href \"../Action\"\n      Entity &lt;|-- AiEval\n        click AiEval href \"../AiEval\"\n      Entity &lt;|-- AiEvalResult\n        click AiEvalResult href \"../AiEvalResult\"\n      Entity &lt;|-- BaseAi\n        click BaseAi href \"../BaseAi\"\n      Entity &lt;|-- LargeLanguageModelFamily\n        click LargeLanguageModelFamily href \"../LargeLanguageModelFamily\"\n      Entity &lt;|-- AiTask\n        click AiTask href \"../AiTask\"\n      Entity &lt;|-- AiLifecyclePhase\n        click AiLifecyclePhase href \"../AiLifecyclePhase\"\n      Entity &lt;|-- Modality\n        click Modality href \"../Modality\"\n\n      Entity : dateCreated\n\n      Entity : dateModified\n\n      Entity : description\n\n      Entity : id\n\n      Entity : name\n\n      Entity : url\n\n</code></pre>"},{"location":"ontology/Entity/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Organization</li> <li>License</li> <li>Dataset</li> <li>Documentation</li> <li>RiskTaxonomy</li> <li>RiskGroup [ RiskConcept]</li> <li>Risk [ RiskConcept]</li> <li>RiskConcept</li> <li>RiskControl [ RiskConcept]</li> <li>Action</li> <li>AiEval</li> <li>AiEvalResult [ Fact]</li> <li>BaseAi</li> <li>LargeLanguageModelFamily</li> <li>AiTask</li> <li>AiLifecyclePhase</li> <li>Modality</li> </ul> </li> </ul>"},{"location":"ontology/Entity/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element direct name 0..1  String A text name of this instance direct description 0..1  String The description of an entity direct url 0..1  Uri An optional URL associated with this instance direct dateCreated 0..1  Date The date on which the entity was created direct dateModified 0..1  Date The date on which the entity was most recently modified direct"},{"location":"ontology/Entity/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Entity/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Entity/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:Thing native nexus:Entity"},{"location":"ontology/Entity/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Entity/#direct","title":"Direct","text":"<pre><code>name: Entity\ndescription: A generic grouping for any identifiable entity.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nabstract: true\nslots:\n- id\n- name\n- description\n- url\n- dateCreated\n- dateModified\nclass_uri: schema:Thing\n</code></pre>"},{"location":"ontology/Entity/#induced","title":"Induced","text":"<pre><code>name: Entity\ndescription: A generic grouping for any identifiable entity.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nabstract: true\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Entity\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Entity\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Entity\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Entity\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Entity\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Entity\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: schema:Thing\n</code></pre>"},{"location":"ontology/EuAiRiskCategory/","title":"Enum: EuAiRiskCategory","text":"<p>URI: EuAiRiskCategory</p>"},{"location":"ontology/EuAiRiskCategory/#permissible-values","title":"Permissible Values","text":"Value Meaning Description MINIMAL None LIMITED None HIGH None UNACCEPTABLE None"},{"location":"ontology/EuAiRiskCategory/#slots","title":"Slots","text":"Name Description hasEuRiskCategory The risk category of an AI system as defined by the EU AI Act"},{"location":"ontology/EuAiRiskCategory/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/EuAiRiskCategory/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/EuAiRiskCategory/#linkml-source","title":"LinkML Source","text":"<pre><code>name: EuAiRiskCategory\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\npermissible_values:\n  MINIMAL:\n    text: MINIMAL\n  LIMITED:\n    text: LIMITED\n  HIGH:\n    text: HIGH\n  UNACCEPTABLE:\n    text: UNACCEPTABLE\n</code></pre>"},{"location":"ontology/Fact/","title":"Class: Fact","text":"<p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <ul> <li>NOTE: this is an abstract class and should not be instantiated directly</li> </ul> <p>URI: schema:Statement</p> <pre><code> classDiagram\n    class Fact\n    click Fact href \"../Fact\"\n      Fact &lt;|-- AiEvalResult\n        click AiEvalResult href \"../AiEvalResult\"\n\n      Fact : evidence\n\n      Fact : value\n\n</code></pre>"},{"location":"ontology/Fact/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance value 1  String Some numeric or string value direct evidence 0..1  String Evidence provides a source (typical a chunk, paragraph or link) describing wh... direct"},{"location":"ontology/Fact/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Fact/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Fact/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:Statement native nexus:Fact"},{"location":"ontology/Fact/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Fact/#direct","title":"Direct","text":"<pre><code>name: Fact\ndescription: A fact about something, for example the result of a measurement. In addition\n  to the value, evidence is provided.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nabstract: true\nslots:\n- value\n- evidence\nclass_uri: schema:Statement\n</code></pre>"},{"location":"ontology/Fact/#induced","title":"Induced","text":"<pre><code>name: Fact\ndescription: A fact about something, for example the result of a measurement. In addition\n  to the value, evidence is provided.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nabstract: true\nattributes:\n  value:\n    name: value\n    description: Some numeric or string value\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: value\n    owner: Fact\n    domain_of:\n    - Fact\n    range: string\n    required: true\n  evidence:\n    name: evidence\n    description: Evidence provides a source (typical a chunk, paragraph or link) describing\n      where some value was found or how it was generated.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: evidence\n    owner: Fact\n    domain_of:\n    - Fact\n    range: string\nclass_uri: schema:Statement\n</code></pre>"},{"location":"ontology/Float/","title":"Type: Float","text":"<p>A real number that conforms to the xsd:float specification</p> <p>URI: xsd:float</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:float</p> </li> </ul>"},{"location":"ontology/Float/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Float/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Float/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:float native nexus:float exact schema:Float"},{"location":"ontology/Integer/","title":"Type: Integer","text":"<p>An integer</p> <p>URI: xsd:integer</p> <ul> <li> <p>base: int</p> </li> <li> <p>uri: xsd:integer</p> </li> </ul>"},{"location":"ontology/Integer/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Integer/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Integer/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:integer native nexus:integer exact schema:Integer"},{"location":"ontology/Jsonpath/","title":"Type: Jsonpath","text":"<p>A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Jsonpath/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Jsonpath/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Jsonpath/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:jsonpath"},{"location":"ontology/Jsonpointer/","title":"Type: Jsonpointer","text":"<p>A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Jsonpointer/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Jsonpointer/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Jsonpointer/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:jsonpointer"},{"location":"ontology/LargeLanguageModel/","title":"Class: LargeLanguageModel","text":"<p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>URI: nexus:LargeLanguageModel</p> <pre><code> classDiagram\n    class LargeLanguageModel\n    click LargeLanguageModel href \"../LargeLanguageModel\"\n      AiModel &lt;|-- LargeLanguageModel\n        click AiModel href \"../AiModel\"\n\n      LargeLanguageModel : architecture\n\n      LargeLanguageModel : carbon_emitted\n\n      LargeLanguageModel : contextWindowSize\n\n      LargeLanguageModel : dateCreated\n\n      LargeLanguageModel : dateModified\n\n      LargeLanguageModel : description\n\n      LargeLanguageModel : fine_tuning\n\n      LargeLanguageModel : gpu_hours\n\n      LargeLanguageModel : hasDocumentation\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      LargeLanguageModel : hasEvaluation\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" AiEvalResult : hasEvaluation\n    click AiEvalResult href \"../AiEvalResult\"\n\n\n      LargeLanguageModel : hasInputModality\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" Modality : hasInputModality\n    click Modality href \"../Modality\"\n\n\n      LargeLanguageModel : hasLicense\n\n\n\n\n    LargeLanguageModel --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      LargeLanguageModel : hasModelCard\n\n      LargeLanguageModel : hasOutputModality\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" Modality : hasOutputModality\n    click Modality href \"../Modality\"\n\n\n      LargeLanguageModel : hasRiskControl\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" RiskControl : hasRiskControl\n    click RiskControl href \"../RiskControl\"\n\n\n      LargeLanguageModel : hasTrainingData\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" Dataset : hasTrainingData\n    click Dataset href \"../Dataset\"\n\n\n      LargeLanguageModel : id\n\n      LargeLanguageModel : isPartOf\n\n\n\n\n    LargeLanguageModel --&gt; \"0..1\" LargeLanguageModelFamily : isPartOf\n    click LargeLanguageModelFamily href \"../LargeLanguageModelFamily\"\n\n\n      LargeLanguageModel : isProvidedBy\n\n\n\n\n    LargeLanguageModel --&gt; \"0..1\" AiProvider : isProvidedBy\n    click AiProvider href \"../AiProvider\"\n\n\n      LargeLanguageModel : name\n\n      LargeLanguageModel : numParameters\n\n      LargeLanguageModel : numTrainingTokens\n\n      LargeLanguageModel : performsTask\n\n\n\n\n    LargeLanguageModel --&gt; \"*\" AiTask : performsTask\n    click AiTask href \"../AiTask\"\n\n\n      LargeLanguageModel : power_consumption_w\n\n      LargeLanguageModel : producer\n\n\n\n\n    LargeLanguageModel --&gt; \"0..1\" Organization : producer\n    click Organization href \"../Organization\"\n\n\n      LargeLanguageModel : supported_languages\n\n      LargeLanguageModel : url\n\n</code></pre>"},{"location":"ontology/LargeLanguageModel/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>BaseAi<ul> <li>AiModel<ul> <li>LargeLanguageModel</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/LargeLanguageModel/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance numParameters 0..1  Integer A property indicating the number of parameters in a LLM direct numTrainingTokens 0..1  Integer The number of tokens a AI model was trained on direct contextWindowSize 0..1  Integer The total length, in bytes, of an AI model's context window direct hasInputModality *  Modality A relationship indicating the input modalities supported by an AI component direct hasOutputModality *  Modality A relationship indicating the output modalities supported by an AI component direct hasTrainingData *  Dataset A relationship indicating the datasets an AI model was trained on direct fine_tuning 0..1  String A description of the fine-tuning mechanism(s) applied to a model direct supported_languages *  String A list of languages, expressed as ISO two letter codes direct isPartOf 0..1  LargeLanguageModelFamily Annotation that a Large Language model is part of a family of models direct hasEvaluation *  AiEvalResult A relationship indicating that an entity has an AI evaluation result AiModel architecture 0..1  String A description of the architecture of an AI such as 'Decoder-only' AiModel gpu_hours 0..1  Integer GPU consumption in terms of hours AiModel power_consumption_w 0..1  Integer power consumption in Watts AiModel carbon_emitted 0..1  Float The number of tons of carbon dioxide equivalent that are emitted during train... AiModel hasRiskControl *  RiskControl Indicates the control measures associated with a system or component to modif... AiModel producer 0..1  Organization A relationship to the Organization instance which produces this instance BaseAi hasModelCard *  String A relationship to model card references BaseAi hasDocumentation *  Documentation Indicates documentation associated with an entity BaseAi hasLicense 0..1  License Indicates licenses associated with a resource BaseAi performsTask *  AiTask relationship indicating the AI tasks an AI model can perform BaseAi isProvidedBy 0..1  AiProvider A relationship indicating the AI model has been provided by an AI model provi... BaseAi id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/LargeLanguageModel/#usages","title":"Usages","text":"used by used in type used Container aimodels range LargeLanguageModel"},{"location":"ontology/LargeLanguageModel/#aliases","title":"Aliases","text":"<ul> <li>LLM</li> </ul>"},{"location":"ontology/LargeLanguageModel/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/LargeLanguageModel/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/LargeLanguageModel/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:LargeLanguageModel native nexus:LargeLanguageModel"},{"location":"ontology/LargeLanguageModel/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/LargeLanguageModel/#direct","title":"Direct","text":"<pre><code>name: LargeLanguageModel\ndescription: A large language model (LLM) is an AI model which supports a range of\n  language-related tasks such as generation, summarization, classification, among\n  others. A LLM is implemented as an artificial neural networks using a transformer\n  architecture.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\naliases:\n- LLM\nis_a: AiModel\nslots:\n- numParameters\n- numTrainingTokens\n- contextWindowSize\n- hasInputModality\n- hasOutputModality\n- hasTrainingData\n- fine_tuning\n- supported_languages\n- isPartOf\nslot_usage:\n  isPartOf:\n    name: isPartOf\n    description: Annotation that a Large Language model is part of a family of models\n    range: LargeLanguageModelFamily\n</code></pre>"},{"location":"ontology/LargeLanguageModel/#induced","title":"Induced","text":"<pre><code>name: LargeLanguageModel\ndescription: A large language model (LLM) is an AI model which supports a range of\n  language-related tasks such as generation, summarization, classification, among\n  others. A LLM is implemented as an artificial neural networks using a transformer\n  architecture.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\naliases:\n- LLM\nis_a: AiModel\nslot_usage:\n  isPartOf:\n    name: isPartOf\n    description: Annotation that a Large Language model is part of a family of models\n    range: LargeLanguageModelFamily\nattributes:\n  numParameters:\n    name: numParameters\n    description: A property indicating the number of parameters in a LLM.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: numParameters\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: integer\n    minimum_value: 0\n  numTrainingTokens:\n    name: numTrainingTokens\n    description: The number of tokens a AI model was trained on.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: numTrainingTokens\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: integer\n    minimum_value: 0\n  contextWindowSize:\n    name: contextWindowSize\n    description: The total length, in bytes, of an AI model's context window.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: contextWindowSize\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: integer\n    minimum_value: 0\n  hasInputModality:\n    name: hasInputModality\n    description: A relationship indicating the input modalities supported by an AI\n      component. Examples include text, image, video.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasInputModality\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: Modality\n    multivalued: true\n    inlined: false\n  hasOutputModality:\n    name: hasOutputModality\n    description: A relationship indicating the output modalities supported by an AI\n      component. Examples include text, image, video.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasOutputModality\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: Modality\n    multivalued: true\n    inlined: false\n  hasTrainingData:\n    name: hasTrainingData\n    description: A relationship indicating the datasets an AI model was trained on.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasTrainingData\n    alias: hasTrainingData\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: Dataset\n    multivalued: true\n    inlined: false\n  fine_tuning:\n    name: fine_tuning\n    description: A description of the fine-tuning mechanism(s) applied to a model.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: fine_tuning\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: string\n  supported_languages:\n    name: supported_languages\n    description: A list of languages, expressed as ISO two letter codes. For example,\n      'jp, fr, en, de'\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: supported_languages\n    owner: LargeLanguageModel\n    domain_of:\n    - LargeLanguageModel\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  isPartOf:\n    name: isPartOf\n    description: Annotation that a Large Language model is part of a family of models\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isPartOf\n    owner: LargeLanguageModel\n    domain_of:\n    - Risk\n    - LargeLanguageModel\n    range: LargeLanguageModelFamily\n  hasEvaluation:\n    name: hasEvaluation\n    description: A relationship indicating that an entity has an AI evaluation result.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: dqv:hasQualityMeasurement\n    alias: hasEvaluation\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: AiEvalResult\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  architecture:\n    name: architecture\n    description: A description of the architecture of an AI such as 'Decoder-only'.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: architecture\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: string\n  gpu_hours:\n    name: gpu_hours\n    description: GPU consumption in terms of hours\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: gpu_hours\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: integer\n    minimum_value: 0\n  power_consumption_w:\n    name: power_consumption_w\n    description: power consumption in Watts\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: power_consumption_w\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: integer\n    minimum_value: 0\n  carbon_emitted:\n    name: carbon_emitted\n    description: The number of tons of carbon dioxide equivalent that are emitted\n      during training\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: carbon_emitted\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: float\n    minimum_value: 0\n    unit:\n      symbol: t CO2-eq\n      descriptive_name: tons of CO2 equivalent\n  hasRiskControl:\n    name: hasRiskControl\n    description: Indicates the control measures associated with a system or component\n      to modify risks.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasRiskControl\n    alias: hasRiskControl\n    owner: LargeLanguageModel\n    domain_of:\n    - AiModel\n    range: RiskControl\n    multivalued: true\n  producer:\n    name: producer\n    description: A relationship to the Organization instance which produces this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: producer\n    owner: LargeLanguageModel\n    domain_of:\n    - BaseAi\n    range: Organization\n  hasModelCard:\n    name: hasModelCard\n    description: A relationship to model card references.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasModelCard\n    owner: LargeLanguageModel\n    domain_of:\n    - BaseAi\n    range: string\n    multivalued: true\n    inlined: true\n    inlined_as_list: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: LargeLanguageModel\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: LargeLanguageModel\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  performsTask:\n    name: performsTask\n    description: relationship indicating the AI tasks an AI model can perform.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: performsTask\n    owner: LargeLanguageModel\n    domain_of:\n    - BaseAi\n    range: AiTask\n    multivalued: true\n    inlined: false\n  isProvidedBy:\n    name: isProvidedBy\n    description: A relationship indicating the AI model has been provided by an AI\n      model provider.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:isProvidedBy\n    alias: isProvidedBy\n    owner: LargeLanguageModel\n    domain_of:\n    - BaseAi\n    range: AiProvider\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: LargeLanguageModel\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/LargeLanguageModelFamily/","title":"Class: LargeLanguageModelFamily","text":"<p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>URI: nexus:LargeLanguageModelFamily</p> <pre><code> classDiagram\n    class LargeLanguageModelFamily\n    click LargeLanguageModelFamily href \"../LargeLanguageModelFamily\"\n      Entity &lt;|-- LargeLanguageModelFamily\n        click Entity href \"../Entity\"\n\n      LargeLanguageModelFamily : dateCreated\n\n      LargeLanguageModelFamily : dateModified\n\n      LargeLanguageModelFamily : description\n\n      LargeLanguageModelFamily : hasDocumentation\n\n\n\n\n    LargeLanguageModelFamily --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      LargeLanguageModelFamily : id\n\n      LargeLanguageModelFamily : name\n\n      LargeLanguageModelFamily : url\n\n</code></pre>"},{"location":"ontology/LargeLanguageModelFamily/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>LargeLanguageModelFamily</li> </ul> </li> </ul>"},{"location":"ontology/LargeLanguageModelFamily/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasDocumentation *  Documentation Indicates documentation associated with an entity direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/LargeLanguageModelFamily/#usages","title":"Usages","text":"used by used in type used Container aimodelfamilies range LargeLanguageModelFamily LargeLanguageModel isPartOf range LargeLanguageModelFamily"},{"location":"ontology/LargeLanguageModelFamily/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/LargeLanguageModelFamily/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/LargeLanguageModelFamily/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:LargeLanguageModelFamily native nexus:LargeLanguageModelFamily"},{"location":"ontology/LargeLanguageModelFamily/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/LargeLanguageModelFamily/#direct","title":"Direct","text":"<pre><code>name: LargeLanguageModelFamily\ndescription: A large language model family is a set of models that are provided by\n  the same AI systems provider and are built around the same architecture, but differ\n  e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite\n  models.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- hasDocumentation\n</code></pre>"},{"location":"ontology/LargeLanguageModelFamily/#induced","title":"Induced","text":"<pre><code>name: LargeLanguageModelFamily\ndescription: A large language model family is a set of models that are provided by\n  the same AI systems provider and are built around the same architecture, but differ\n  e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite\n  models.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: LargeLanguageModelFamily\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/License/","title":"Class: License","text":"<p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>URI: airo:License</p> <pre><code> classDiagram\n    class License\n    click License href \"../License\"\n      Entity &lt;|-- License\n        click Entity href \"../Entity\"\n\n      License : dateCreated\n\n      License : dateModified\n\n      License : description\n\n      License : id\n\n      License : name\n\n      License : url\n\n      License : version\n\n</code></pre>"},{"location":"ontology/License/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>License</li> </ul> </li> </ul>"},{"location":"ontology/License/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance version 0..1  String The version of the entity embodied by a specified resource direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/License/#usages","title":"Usages","text":"used by used in type used Container licenses range License Organization grants_license range License Dataset hasLicense range License RiskTaxonomy hasLicense range License AiEval hasLicense range License Question hasLicense range License Questionnaire hasLicense range License AiOffice grants_license range License BaseAi hasLicense range License AiSystem hasLicense range License AiAgent hasLicense range License AiModel hasLicense range License LargeLanguageModel hasLicense range License AiProvider grants_license range License"},{"location":"ontology/License/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/License/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/License/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:License native nexus:License"},{"location":"ontology/License/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/License/#direct","title":"Direct","text":"<pre><code>name: License\ndescription: The general notion of a license which defines terms and grants permissions\n  to users of AI systems, datasets and software.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- version\nclass_uri: airo:License\n</code></pre>"},{"location":"ontology/License/#induced","title":"Induced","text":"<pre><code>name: License\ndescription: The general notion of a license which defines terms and grants permissions\n  to users of AI systems, datasets and software.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  version:\n    name: version\n    description: The version of the entity embodied by a specified resource.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:version\n    alias: version\n    owner: License\n    domain_of:\n    - License\n    - RiskTaxonomy\n    range: string\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: License\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: License\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: License\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: License\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: License\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: License\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:License\n</code></pre>"},{"location":"ontology/Modality/","title":"Class: Modality","text":"<p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>URI: airo:Modality</p> <pre><code> classDiagram\n    class Modality\n    click Modality href \"../Modality\"\n      Entity &lt;|-- Modality\n        click Entity href \"../Entity\"\n\n      Modality : dateCreated\n\n      Modality : dateModified\n\n      Modality : description\n\n      Modality : id\n\n      Modality : name\n\n      Modality : url\n\n</code></pre>"},{"location":"ontology/Modality/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Modality</li> </ul> </li> </ul>"},{"location":"ontology/Modality/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Modality/#usages","title":"Usages","text":"used by used in type used Container modalities range Modality LargeLanguageModel hasInputModality range Modality LargeLanguageModel hasOutputModality range Modality"},{"location":"ontology/Modality/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Modality/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Modality/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:Modality native nexus:Modality"},{"location":"ontology/Modality/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Modality/#direct","title":"Direct","text":"<pre><code>name: Modality\ndescription: A modality supported by an Ai component. Examples include text, image,\n  video.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nclass_uri: airo:Modality\n</code></pre>"},{"location":"ontology/Modality/#induced","title":"Induced","text":"<pre><code>name: Modality\ndescription: A modality supported by an Ai component. Examples include text, image,\n  video.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Modality\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Modality\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Modality\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Modality\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Modality\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Modality\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:Modality\n</code></pre>"},{"location":"ontology/Ncname/","title":"Type: Ncname","text":"<p>Prefix part of CURIE</p> <p>URI: xsd:string</p> <ul> <li> <p>base: NCName</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Ncname/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Ncname/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Ncname/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:ncname"},{"location":"ontology/Nodeidentifier/","title":"Type: Nodeidentifier","text":"<p>A URI, CURIE or BNODE that represents a node in a model.</p> <p>URI: shex:nonLiteral</p> <ul> <li> <p>base: NodeIdentifier</p> </li> <li> <p>uri: shex:nonLiteral</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Nodeidentifier/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Nodeidentifier/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Nodeidentifier/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self shex:nonLiteral native nexus:nodeidentifier"},{"location":"ontology/Objectidentifier/","title":"Type: Objectidentifier","text":"<p>A URI or CURIE that represents an object in the model.</p> <p>URI: shex:iri</p> <ul> <li> <p>base: ElementIdentifier</p> </li> <li> <p>uri: shex:iri</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Objectidentifier/#comments","title":"Comments","text":"<ul> <li>Used for inheritance and type checking</li> </ul>"},{"location":"ontology/Objectidentifier/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Objectidentifier/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Objectidentifier/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self shex:iri native nexus:objectidentifier"},{"location":"ontology/Organization/","title":"Class: Organization","text":"<p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>URI: schema:Organization</p> <pre><code> classDiagram\n    class Organization\n    click Organization href \"../Organization\"\n      Entity &lt;|-- Organization\n        click Entity href \"../Entity\"\n\n\n      Organization &lt;|-- AiOffice\n        click AiOffice href \"../AiOffice\"\n      Organization &lt;|-- AiProvider\n        click AiProvider href \"../AiProvider\"\n\n\n      Organization : dateCreated\n\n      Organization : dateModified\n\n      Organization : description\n\n      Organization : grants_license\n\n\n\n\n    Organization --&gt; \"0..1\" License : grants_license\n    click License href \"../License\"\n\n\n      Organization : id\n\n      Organization : name\n\n      Organization : url\n\n</code></pre>"},{"location":"ontology/Organization/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Organization<ul> <li>AiOffice</li> <li>AiProvider</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/Organization/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance grants_license 0..1  License A relationship from a granting entity such as an Organization to a License in... direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Organization/#usages","title":"Usages","text":"used by used in type used Container organizations range Organization Dataset provider range Organization BaseAi producer range Organization AiSystem producer range Organization AiAgent producer range Organization AiModel producer range Organization LargeLanguageModel producer range Organization"},{"location":"ontology/Organization/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Organization/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Organization/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:Organization native nexus:Organization"},{"location":"ontology/Organization/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Organization/#direct","title":"Direct","text":"<pre><code>name: Organization\ndescription: Any organizational entity such as a corporation, educational institution,\n  consortium, government, etc.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- grants_license\nclass_uri: schema:Organization\n</code></pre>"},{"location":"ontology/Organization/#induced","title":"Induced","text":"<pre><code>name: Organization\ndescription: Any organizational entity such as a corporation, educational institution,\n  consortium, government, etc.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  grants_license:\n    name: grants_license\n    description: A relationship from a granting entity such as an Organization to\n      a License instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: grants_license\n    owner: Organization\n    domain_of:\n    - Organization\n    range: License\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Organization\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Organization\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Organization\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Organization\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Organization\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Organization\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: schema:Organization\n</code></pre>"},{"location":"ontology/Question/","title":"Class: Question","text":"<p>An evaluation where a question has to be answered</p> <p>URI: nexus:Question</p> <pre><code> classDiagram\n    class Question\n    click Question href \"../Question\"\n      AiEval &lt;|-- Question\n        click AiEval href \"../AiEval\"\n\n      Question : bestValue\n\n      Question : dateCreated\n\n      Question : dateModified\n\n      Question : description\n\n      Question : hasDataset\n\n\n\n\n    Question --&gt; \"*\" Dataset : hasDataset\n    click Dataset href \"../Dataset\"\n\n\n      Question : hasDocumentation\n\n\n\n\n    Question --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      Question : hasLicense\n\n\n\n\n    Question --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      Question : hasRelatedRisk\n\n\n\n\n    Question --&gt; \"*\" Risk : hasRelatedRisk\n    click Risk href \"../Risk\"\n\n\n      Question : hasUnitxtCard\n\n      Question : id\n\n      Question : name\n\n      Question : text\n\n      Question : url\n\n</code></pre>"},{"location":"ontology/Question/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiEval<ul> <li>Question</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/Question/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance text 1  String The question itself direct hasDocumentation *  Documentation Indicates documentation associated with an entity AiEval hasDataset *  Dataset A relationship to datasets that are used AiEval hasUnitxtCard 0..1  Uri A relationship to a Unitxt card defining the risk evaluation AiEval hasLicense 0..1  License Indicates licenses associated with a resource AiEval hasRelatedRisk *  Risk A relationship where an entity relates to a risk AiEval bestValue 0..1  String Annotation of the best possible result of the evaluation AiEval id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Question/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Question/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Question/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:Question native nexus:Question"},{"location":"ontology/Question/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Question/#direct","title":"Direct","text":"<pre><code>name: Question\ndescription: An evaluation where a question has to be answered\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiEval\nattributes:\n  text:\n    name: text\n    description: The question itself\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval\n    rank: 1000\n    domain_of:\n    - Question\n    required: true\n</code></pre>"},{"location":"ontology/Question/#induced","title":"Induced","text":"<pre><code>name: Question\ndescription: An evaluation where a question has to be answered\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiEval\nattributes:\n  text:\n    name: text\n    description: The question itself\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval\n    rank: 1000\n    alias: text\n    owner: Question\n    domain_of:\n    - Question\n    range: string\n    required: true\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: Question\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasDataset:\n    name: hasDataset\n    description: A relationship to datasets that are used.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasDataset\n    owner: Question\n    domain_of:\n    - AiEval\n    range: Dataset\n    multivalued: true\n    inlined: false\n  hasUnitxtCard:\n    name: hasUnitxtCard\n    description: A relationship to a Unitxt card defining the risk evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: hasUnitxtCard\n    owner: Question\n    domain_of:\n    - AiEval\n    range: uri\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: Question\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  hasRelatedRisk:\n    name: hasRelatedRisk\n    description: A relationship where an entity relates to a risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: hasRelatedRisk\n    owner: Question\n    domain_of:\n    - Action\n    - AiEval\n    range: Risk\n    multivalued: true\n    inlined: false\n  bestValue:\n    name: bestValue\n    description: Annotation of the best possible result of the evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: bestValue\n    owner: Question\n    domain_of:\n    - AiEval\n    range: string\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Question\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Question\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Question\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Question\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Question\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Question\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/Questionnaire/","title":"Class: Questionnaire","text":"<p>A questionnaire groups questions</p> <p>URI: nexus:Questionnaire</p> <pre><code> classDiagram\n    class Questionnaire\n    click Questionnaire href \"../Questionnaire\"\n      AiEval &lt;|-- Questionnaire\n        click AiEval href \"../AiEval\"\n\n      Questionnaire : bestValue\n\n      Questionnaire : dateCreated\n\n      Questionnaire : dateModified\n\n      Questionnaire : description\n\n      Questionnaire : hasDataset\n\n\n\n\n    Questionnaire --&gt; \"*\" Dataset : hasDataset\n    click Dataset href \"../Dataset\"\n\n\n      Questionnaire : hasDocumentation\n\n\n\n\n    Questionnaire --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      Questionnaire : hasLicense\n\n\n\n\n    Questionnaire --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      Questionnaire : hasRelatedRisk\n\n\n\n\n    Questionnaire --&gt; \"*\" Risk : hasRelatedRisk\n    click Risk href \"../Risk\"\n\n\n      Questionnaire : hasUnitxtCard\n\n      Questionnaire : id\n\n      Questionnaire : name\n\n      Questionnaire : url\n\n</code></pre>"},{"location":"ontology/Questionnaire/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>AiEval<ul> <li>Questionnaire</li> </ul> </li> </ul> </li> </ul>"},{"location":"ontology/Questionnaire/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasDocumentation *  Documentation Indicates documentation associated with an entity AiEval hasDataset *  Dataset A relationship to datasets that are used AiEval hasUnitxtCard 0..1  Uri A relationship to a Unitxt card defining the risk evaluation AiEval hasLicense 0..1  License Indicates licenses associated with a resource AiEval hasRelatedRisk *  Risk A relationship where an entity relates to a risk AiEval bestValue 0..1  String Annotation of the best possible result of the evaluation AiEval id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Questionnaire/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Questionnaire/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Questionnaire/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:Questionnaire native nexus:Questionnaire"},{"location":"ontology/Questionnaire/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Questionnaire/#direct","title":"Direct","text":"<pre><code>name: Questionnaire\ndescription: A questionnaire groups questions\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiEval\nslot_usage:\n  composed_of:\n    name: composed_of\n    range: Question\n</code></pre>"},{"location":"ontology/Questionnaire/#induced","title":"Induced","text":"<pre><code>name: Questionnaire\ndescription: A questionnaire groups questions\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: AiEval\nslot_usage:\n  composed_of:\n    name: composed_of\n    range: Question\nattributes:\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: Questionnaire\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasDataset:\n    name: hasDataset\n    description: A relationship to datasets that are used.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasDataset\n    owner: Questionnaire\n    domain_of:\n    - AiEval\n    range: Dataset\n    multivalued: true\n    inlined: false\n  hasUnitxtCard:\n    name: hasUnitxtCard\n    description: A relationship to a Unitxt card defining the risk evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: hasUnitxtCard\n    owner: Questionnaire\n    domain_of:\n    - AiEval\n    range: uri\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: Questionnaire\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  hasRelatedRisk:\n    name: hasRelatedRisk\n    description: A relationship where an entity relates to a risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: hasRelatedRisk\n    owner: Questionnaire\n    domain_of:\n    - Action\n    - AiEval\n    range: Risk\n    multivalued: true\n    inlined: false\n  bestValue:\n    name: bestValue\n    description: Annotation of the best possible result of the evaluation\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: bestValue\n    owner: Questionnaire\n    domain_of:\n    - AiEval\n    range: string\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Questionnaire\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/Risk/","title":"Class: Risk","text":"<p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>URI: airo:Risk</p> <pre><code> classDiagram\n    class Risk\n    click Risk href \"../Risk\"\n      RiskConcept &lt;|-- Risk\n        click RiskConcept href \"../RiskConcept\"\n      Entity &lt;|-- Risk\n        click Entity href \"../Entity\"\n\n      Risk : broadMatch\n\n\n\n\n    Risk --&gt; \"*\" Any : broadMatch\n    click Any href \"../Any\"\n\n\n      Risk : closeMatch\n\n\n\n\n    Risk --&gt; \"*\" Any : closeMatch\n    click Any href \"../Any\"\n\n\n      Risk : concern\n\n      Risk : dateCreated\n\n      Risk : dateModified\n\n      Risk : description\n\n      Risk : descriptor\n\n      Risk : detectsRiskConcept\n\n\n\n\n    Risk --&gt; \"*\" RiskConcept : detectsRiskConcept\n    click RiskConcept href \"../RiskConcept\"\n\n\n      Risk : exactMatch\n\n\n\n\n    Risk --&gt; \"*\" Any : exactMatch\n    click Any href \"../Any\"\n\n\n      Risk : hasRelatedAction\n\n\n\n\n    Risk --&gt; \"*\" Action : hasRelatedAction\n    click Action href \"../Action\"\n\n\n      Risk : id\n\n      Risk : isDefinedByTaxonomy\n\n\n\n\n    Risk --&gt; \"0..1\" RiskTaxonomy : isDefinedByTaxonomy\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n\n\n      Risk : isDetectedBy\n\n\n\n\n    Risk --&gt; \"*\" RiskControl : isDetectedBy\n    click RiskControl href \"../RiskControl\"\n\n\n      Risk : isPartOf\n\n\n\n\n    Risk --&gt; \"0..1\" RiskGroup : isPartOf\n    click RiskGroup href \"../RiskGroup\"\n\n\n      Risk : name\n\n      Risk : narrowMatch\n\n\n\n\n    Risk --&gt; \"*\" Any : narrowMatch\n    click Any href \"../Any\"\n\n\n      Risk : phase\n\n      Risk : relatedMatch\n\n\n\n\n    Risk --&gt; \"*\" Any : relatedMatch\n    click Any href \"../Any\"\n\n\n      Risk : tag\n\n      Risk : type\n\n      Risk : url\n\n</code></pre>"},{"location":"ontology/Risk/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>Risk [ RiskConcept]</li> </ul> </li> </ul>"},{"location":"ontology/Risk/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance hasRelatedAction *  Action A relationship where an entity relates to an action direct isDefinedByTaxonomy 0..1  RiskTaxonomy A relationship where a risk or a risk group is defined by a risk taxonomy direct isPartOf 0..1  RiskGroup A relationship where a risk is part of a risk group direct closeMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to link two concepts that are sufficiently similar that ... direct exactMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to link two concepts, indicating a high degree of confid... direct broadMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to state a hierarchical mapping link between two concept... direct narrowMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to state a hierarchical mapping link between two concept... direct relatedMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property skos:relatedMatch is used to state an associative mapping link b... direct detectsRiskConcept *  RiskConcept The property airo:detectsRiskConcept indicates the control used for detecting... direct tag 0..1  String A shost version of the name direct type 0..1  String Annotation whether an AI risk occurs at input or output or is non-technical direct phase 0..1  String Annotation whether an AI risk shows specifically during the training-tuning o... direct descriptor 0..1  String Annotates whether an AI risk is a traditional risk, specific to or amplified ... direct concern 0..1  String Some explanation about the concern related to an AI risk direct isDetectedBy *  RiskControl A relationship where a risk, risk source, consequence, or impact is detected ... RiskConcept id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/Risk/#usages","title":"Usages","text":"used by used in type used Container risks range Risk RiskGroup closeMatch any_of[range] Risk RiskGroup exactMatch any_of[range] Risk RiskGroup broadMatch any_of[range] Risk RiskGroup narrowMatch any_of[range] Risk RiskGroup relatedMatch any_of[range] Risk RiskGroup hasPart range Risk Risk closeMatch any_of[range] Risk Risk exactMatch any_of[range] Risk Risk broadMatch any_of[range] Risk Risk narrowMatch any_of[range] Risk Risk relatedMatch any_of[range] Risk Action hasRelatedRisk range Risk AiEval hasRelatedRisk range Risk Question hasRelatedRisk range Risk Questionnaire hasRelatedRisk range Risk"},{"location":"ontology/Risk/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Risk/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Risk/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:Risk native nexus:Risk"},{"location":"ontology/Risk/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/Risk/#direct","title":"Direct","text":"<pre><code>name: Risk\ndescription: The state of uncertainty associated with an AI system, that has the potential\n  to cause harms\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nslots:\n- hasRelatedAction\n- isDefinedByTaxonomy\n- isPartOf\n- closeMatch\n- exactMatch\n- broadMatch\n- narrowMatch\n- relatedMatch\n- detectsRiskConcept\nslot_usage:\n  isPartOf:\n    name: isPartOf\n    description: A relationship where a risk is part of a risk group\n    range: RiskGroup\nattributes:\n  tag:\n    name: tag\n    description: A shost version of the name\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    domain_of:\n    - Risk\n  type:\n    name: type\n    description: Annotation whether an AI risk occurs at input or output or is non-technical.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    domain_of:\n    - Risk\n  phase:\n    name: phase\n    description: Annotation whether an AI risk shows specifically during the training-tuning\n      or inference phase.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    domain_of:\n    - Risk\n  descriptor:\n    name: descriptor\n    description: Annotates whether an AI risk is a traditional risk, specific to or\n      amplified by AI.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    domain_of:\n    - Risk\n  concern:\n    name: concern\n    description: Some explanation about the concern related to an AI risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    domain_of:\n    - Risk\nclass_uri: airo:Risk\n</code></pre>"},{"location":"ontology/Risk/#induced","title":"Induced","text":"<pre><code>name: Risk\ndescription: The state of uncertainty associated with an AI system, that has the potential\n  to cause harms\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nslot_usage:\n  isPartOf:\n    name: isPartOf\n    description: A relationship where a risk is part of a risk group\n    range: RiskGroup\nattributes:\n  tag:\n    name: tag\n    description: A shost version of the name\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    alias: tag\n    owner: Risk\n    domain_of:\n    - Risk\n    range: string\n  type:\n    name: type\n    description: Annotation whether an AI risk occurs at input or output or is non-technical.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    alias: type\n    owner: Risk\n    domain_of:\n    - Risk\n    range: string\n  phase:\n    name: phase\n    description: Annotation whether an AI risk shows specifically during the training-tuning\n      or inference phase.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    alias: phase\n    owner: Risk\n    domain_of:\n    - Risk\n    range: string\n  descriptor:\n    name: descriptor\n    description: Annotates whether an AI risk is a traditional risk, specific to or\n      amplified by AI.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    alias: descriptor\n    owner: Risk\n    domain_of:\n    - Risk\n    range: string\n  concern:\n    name: concern\n    description: Some explanation about the concern related to an AI risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk\n    rank: 1000\n    alias: concern\n    owner: Risk\n    domain_of:\n    - Risk\n    range: string\n  hasRelatedAction:\n    name: hasRelatedAction\n    description: A relationship where an entity relates to an action\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    alias: hasRelatedAction\n    owner: Risk\n    domain_of:\n    - Risk\n    range: Action\n    multivalued: true\n    inlined: false\n  isDefinedByTaxonomy:\n    name: isDefinedByTaxonomy\n    description: A relationship where a risk or a risk group is defined by a risk\n      taxonomy\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isDefinedByTaxonomy\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    - RiskControl\n    - Action\n    range: RiskTaxonomy\n  isPartOf:\n    name: isPartOf\n    description: A relationship where a risk is part of a risk group\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isPartOf\n    owner: Risk\n    domain_of:\n    - Risk\n    - LargeLanguageModel\n    range: RiskGroup\n  closeMatch:\n    name: closeMatch\n    description: The property is used to link two concepts that are sufficiently similar\n      that they can be used interchangeably in some information retrieval applications.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:closeMatch\n    alias: closeMatch\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  exactMatch:\n    name: exactMatch\n    description: The property is used to link two concepts, indicating a high degree\n      of confidence that the concepts can be used interchangeably across a wide range\n      of information retrieval applications\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:exactMatch\n    alias: exactMatch\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  broadMatch:\n    name: broadMatch\n    description: The property is used to state a hierarchical mapping link between\n      two concepts, indicating that the concept linked to, is a broader concept than\n      the originating concept.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:broadMatch\n    alias: broadMatch\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  narrowMatch:\n    name: narrowMatch\n    description: The property is used to state a hierarchical mapping link between\n      two concepts, indicating that the concept linked to, is a narrower concept than\n      the originating concept.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:narrowMatch\n    alias: narrowMatch\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  relatedMatch:\n    name: relatedMatch\n    description: The property skos:relatedMatch is used to state an associative mapping\n      link between two concepts.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:relatedMatch\n    alias: relatedMatch\n    owner: Risk\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  detectsRiskConcept:\n    name: detectsRiskConcept\n    description: The property airo:detectsRiskConcept indicates the control used for\n      detecting risks, risk sources,  consequences, and impacts.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    exact_mappings:\n    - airo:detectsRiskConcept\n    rank: 1000\n    domain: RiskControl\n    alias: detectsRiskConcept\n    owner: Risk\n    domain_of:\n    - Risk\n    - RiskControl\n    inverse: isDetectedBy\n    range: RiskConcept\n    multivalued: true\n    inlined: false\n  isDetectedBy:\n    name: isDetectedBy\n    description: A relationship where a risk, risk source, consequence, or impact\n      is detected by a risk control.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: isDetectedBy\n    owner: Risk\n    domain_of:\n    - RiskConcept\n    inverse: detectsRiskConcept\n    range: RiskControl\n    multivalued: true\n    inlined: false\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: Risk\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: Risk\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: Risk\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: Risk\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: Risk\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: Risk\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:Risk\n</code></pre>"},{"location":"ontology/RiskConcept/","title":"Class: RiskConcept","text":"<p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>URI: airo:RiskConcept</p> <pre><code> classDiagram\n    class RiskConcept\n    click RiskConcept href \"../RiskConcept\"\n      Entity &lt;|-- RiskConcept\n        click Entity href \"../Entity\"\n\n\n      RiskConcept &lt;|-- RiskGroup\n        click RiskGroup href \"../RiskGroup\"\n      RiskConcept &lt;|-- Risk\n        click Risk href \"../Risk\"\n      RiskConcept &lt;|-- RiskControl\n        click RiskControl href \"../RiskControl\"\n\n\n      RiskConcept : dateCreated\n\n      RiskConcept : dateModified\n\n      RiskConcept : description\n\n      RiskConcept : id\n\n      RiskConcept : isDetectedBy\n\n\n\n\n    RiskConcept --&gt; \"*\" RiskControl : isDetectedBy\n    click RiskControl href \"../RiskControl\"\n\n\n      RiskConcept : name\n\n      RiskConcept : url\n\n</code></pre>"},{"location":"ontology/RiskConcept/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>RiskConcept</li> </ul> </li> </ul>"},{"location":"ontology/RiskConcept/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance isDetectedBy *  RiskControl A relationship where a risk, risk source, consequence, or impact is detected ... direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/RiskConcept/#usages","title":"Usages","text":"used by used in type used RiskGroup isDetectedBy domain RiskConcept Risk detectsRiskConcept range RiskConcept Risk isDetectedBy domain RiskConcept RiskConcept isDetectedBy domain RiskConcept RiskControl detectsRiskConcept range RiskConcept RiskControl isDetectedBy domain RiskConcept Action hasRelatedRisk domain RiskConcept AiEval hasRelatedRisk domain RiskConcept Question hasRelatedRisk domain RiskConcept Questionnaire hasRelatedRisk domain RiskConcept"},{"location":"ontology/RiskConcept/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/RiskConcept/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/RiskConcept/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:RiskConcept native nexus:RiskConcept"},{"location":"ontology/RiskConcept/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/RiskConcept/#direct","title":"Direct","text":"<pre><code>name: RiskConcept\ndescription: An umbrella term for refering to risk, risk source, consequence and impact.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- isDetectedBy\nclass_uri: airo:RiskConcept\n</code></pre>"},{"location":"ontology/RiskConcept/#induced","title":"Induced","text":"<pre><code>name: RiskConcept\ndescription: An umbrella term for refering to risk, risk source, consequence and impact.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  isDetectedBy:\n    name: isDetectedBy\n    description: A relationship where a risk, risk source, consequence, or impact\n      is detected by a risk control.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: isDetectedBy\n    owner: RiskConcept\n    domain_of:\n    - RiskConcept\n    inverse: detectsRiskConcept\n    range: RiskControl\n    multivalued: true\n    inlined: false\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: RiskConcept\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:RiskConcept\n</code></pre>"},{"location":"ontology/RiskControl/","title":"Class: RiskControl","text":"<p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>URI: airo:RiskControl</p> <pre><code> classDiagram\n    class RiskControl\n    click RiskControl href \"../RiskControl\"\n      RiskConcept &lt;|-- RiskControl\n        click RiskConcept href \"../RiskConcept\"\n      Entity &lt;|-- RiskControl\n        click Entity href \"../Entity\"\n\n      RiskControl : dateCreated\n\n      RiskControl : dateModified\n\n      RiskControl : description\n\n      RiskControl : detectsRiskConcept\n\n\n\n\n    RiskControl --&gt; \"*\" RiskConcept : detectsRiskConcept\n    click RiskConcept href \"../RiskConcept\"\n\n\n      RiskControl : id\n\n      RiskControl : isDefinedByTaxonomy\n\n\n\n\n    RiskControl --&gt; \"0..1\" RiskTaxonomy : isDefinedByTaxonomy\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n\n\n      RiskControl : isDetectedBy\n\n\n\n\n    RiskControl --&gt; \"*\" RiskControl : isDetectedBy\n    click RiskControl href \"../RiskControl\"\n\n\n      RiskControl : name\n\n      RiskControl : url\n\n</code></pre>"},{"location":"ontology/RiskControl/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>RiskControl [ RiskConcept]</li> </ul> </li> </ul>"},{"location":"ontology/RiskControl/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance detectsRiskConcept *  RiskConcept The property airo:detectsRiskConcept indicates the control used for detecting... direct isDefinedByTaxonomy 0..1  RiskTaxonomy A relationship where a risk or a risk group is defined by a risk taxonomy direct isDetectedBy *  RiskControl A relationship where a risk, risk source, consequence, or impact is detected ... RiskConcept id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/RiskControl/#usages","title":"Usages","text":"used by used in type used Container riskcontrols range RiskControl RiskGroup isDetectedBy range RiskControl Risk detectsRiskConcept domain RiskControl Risk isDetectedBy range RiskControl RiskConcept isDetectedBy range RiskControl RiskControl detectsRiskConcept domain RiskControl RiskControl isDetectedBy range RiskControl AiModel hasRiskControl range RiskControl LargeLanguageModel hasRiskControl range RiskControl"},{"location":"ontology/RiskControl/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/RiskControl/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/RiskControl/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:RiskControl native nexus:RiskControl"},{"location":"ontology/RiskControl/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/RiskControl/#direct","title":"Direct","text":"<pre><code>name: RiskControl\ndescription: A measure that maintains and/or modifies risk (and risk concepts)\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nslots:\n- detectsRiskConcept\n- isDefinedByTaxonomy\nclass_uri: airo:RiskControl\n</code></pre>"},{"location":"ontology/RiskControl/#induced","title":"Induced","text":"<pre><code>name: RiskControl\ndescription: A measure that maintains and/or modifies risk (and risk concepts)\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nattributes:\n  detectsRiskConcept:\n    name: detectsRiskConcept\n    description: The property airo:detectsRiskConcept indicates the control used for\n      detecting risks, risk sources,  consequences, and impacts.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    exact_mappings:\n    - airo:detectsRiskConcept\n    rank: 1000\n    domain: RiskControl\n    alias: detectsRiskConcept\n    owner: RiskControl\n    domain_of:\n    - Risk\n    - RiskControl\n    inverse: isDetectedBy\n    range: RiskConcept\n    multivalued: true\n    inlined: false\n  isDefinedByTaxonomy:\n    name: isDefinedByTaxonomy\n    description: A relationship where a risk or a risk group is defined by a risk\n      taxonomy\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isDefinedByTaxonomy\n    owner: RiskControl\n    domain_of:\n    - RiskGroup\n    - Risk\n    - RiskControl\n    - Action\n    range: RiskTaxonomy\n  isDetectedBy:\n    name: isDetectedBy\n    description: A relationship where a risk, risk source, consequence, or impact\n      is detected by a risk control.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: isDetectedBy\n    owner: RiskControl\n    domain_of:\n    - RiskConcept\n    inverse: detectsRiskConcept\n    range: RiskControl\n    multivalued: true\n    inlined: false\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: RiskControl\n    domain_of:\n    - Entity\n    range: date\n    required: false\nclass_uri: airo:RiskControl\n</code></pre>"},{"location":"ontology/RiskGroup/","title":"Class: RiskGroup","text":"<p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>URI: nexus:RiskGroup</p> <pre><code> classDiagram\n    class RiskGroup\n    click RiskGroup href \"../RiskGroup\"\n      RiskConcept &lt;|-- RiskGroup\n        click RiskConcept href \"../RiskConcept\"\n      Entity &lt;|-- RiskGroup\n        click Entity href \"../Entity\"\n\n      RiskGroup : broadMatch\n\n\n\n\n    RiskGroup --&gt; \"*\" Any : broadMatch\n    click Any href \"../Any\"\n\n\n      RiskGroup : closeMatch\n\n\n\n\n    RiskGroup --&gt; \"*\" Any : closeMatch\n    click Any href \"../Any\"\n\n\n      RiskGroup : dateCreated\n\n      RiskGroup : dateModified\n\n      RiskGroup : description\n\n      RiskGroup : exactMatch\n\n\n\n\n    RiskGroup --&gt; \"*\" Any : exactMatch\n    click Any href \"../Any\"\n\n\n      RiskGroup : hasPart\n\n\n\n\n    RiskGroup --&gt; \"*\" Risk : hasPart\n    click Risk href \"../Risk\"\n\n\n      RiskGroup : id\n\n      RiskGroup : isDefinedByTaxonomy\n\n\n\n\n    RiskGroup --&gt; \"0..1\" RiskTaxonomy : isDefinedByTaxonomy\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n\n\n      RiskGroup : isDetectedBy\n\n\n\n\n    RiskGroup --&gt; \"*\" RiskControl : isDetectedBy\n    click RiskControl href \"../RiskControl\"\n\n\n      RiskGroup : name\n\n      RiskGroup : narrowMatch\n\n\n\n\n    RiskGroup --&gt; \"*\" Any : narrowMatch\n    click Any href \"../Any\"\n\n\n      RiskGroup : relatedMatch\n\n\n\n\n    RiskGroup --&gt; \"*\" Any : relatedMatch\n    click Any href \"../Any\"\n\n\n      RiskGroup : url\n\n</code></pre>"},{"location":"ontology/RiskGroup/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>RiskGroup [ RiskConcept]</li> </ul> </li> </ul>"},{"location":"ontology/RiskGroup/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance isDefinedByTaxonomy 0..1  RiskTaxonomy A relationship where a risk or a risk group is defined by a risk taxonomy direct closeMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to link two concepts that are sufficiently similar that ... direct exactMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to link two concepts, indicating a high degree of confid... direct broadMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to state a hierarchical mapping link between two concept... direct narrowMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property is used to state a hierarchical mapping link between two concept... direct relatedMatch *  Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup The property skos:relatedMatch is used to state an associative mapping link b... direct hasPart *  Risk A relationship where a riskgroup has a risk direct isDetectedBy *  RiskControl A relationship where a risk, risk source, consequence, or impact is detected ... RiskConcept id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/RiskGroup/#usages","title":"Usages","text":"used by used in type used Container riskgroups range RiskGroup RiskGroup closeMatch any_of[range] RiskGroup RiskGroup exactMatch any_of[range] RiskGroup RiskGroup broadMatch any_of[range] RiskGroup RiskGroup narrowMatch any_of[range] RiskGroup RiskGroup relatedMatch any_of[range] RiskGroup Risk isPartOf range RiskGroup Risk closeMatch any_of[range] RiskGroup Risk exactMatch any_of[range] RiskGroup Risk broadMatch any_of[range] RiskGroup Risk narrowMatch any_of[range] RiskGroup Risk relatedMatch any_of[range] RiskGroup"},{"location":"ontology/RiskGroup/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/RiskGroup/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/RiskGroup/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:RiskGroup native nexus:RiskGroup"},{"location":"ontology/RiskGroup/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/RiskGroup/#direct","title":"Direct","text":"<pre><code>name: RiskGroup\ndescription: A group of AI system related risks that are part of a risk taxonomy.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nslots:\n- isDefinedByTaxonomy\n- closeMatch\n- exactMatch\n- broadMatch\n- narrowMatch\n- relatedMatch\n- hasPart\nslot_usage:\n  hasPart:\n    name: hasPart\n    description: A relationship where a riskgroup has a risk\n    range: Risk\n</code></pre>"},{"location":"ontology/RiskGroup/#induced","title":"Induced","text":"<pre><code>name: RiskGroup\ndescription: A group of AI system related risks that are part of a risk taxonomy.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nmixins:\n- RiskConcept\nslot_usage:\n  hasPart:\n    name: hasPart\n    description: A relationship where a riskgroup has a risk\n    range: Risk\nattributes:\n  isDefinedByTaxonomy:\n    name: isDefinedByTaxonomy\n    description: A relationship where a risk or a risk group is defined by a risk\n      taxonomy\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:isPartOf\n    alias: isDefinedByTaxonomy\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    - RiskControl\n    - Action\n    range: RiskTaxonomy\n  closeMatch:\n    name: closeMatch\n    description: The property is used to link two concepts that are sufficiently similar\n      that they can be used interchangeably in some information retrieval applications.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:closeMatch\n    alias: closeMatch\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  exactMatch:\n    name: exactMatch\n    description: The property is used to link two concepts, indicating a high degree\n      of confidence that the concepts can be used interchangeably across a wide range\n      of information retrieval applications\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:exactMatch\n    alias: exactMatch\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  broadMatch:\n    name: broadMatch\n    description: The property is used to state a hierarchical mapping link between\n      two concepts, indicating that the concept linked to, is a broader concept than\n      the originating concept.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:broadMatch\n    alias: broadMatch\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  narrowMatch:\n    name: narrowMatch\n    description: The property is used to state a hierarchical mapping link between\n      two concepts, indicating that the concept linked to, is a narrower concept than\n      the originating concept.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:narrowMatch\n    alias: narrowMatch\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  relatedMatch:\n    name: relatedMatch\n    description: The property skos:relatedMatch is used to state an associative mapping\n      link between two concepts.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: skos:relatedMatch\n    alias: relatedMatch\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    - Risk\n    range: Any\n    multivalued: true\n    inlined: false\n    any_of:\n    - range: Risk\n    - range: RiskGroup\n  hasPart:\n    name: hasPart\n    description: A relationship where a riskgroup has a risk\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:hasPart\n    alias: hasPart\n    owner: RiskGroup\n    domain_of:\n    - RiskGroup\n    range: Risk\n    multivalued: true\n  isDetectedBy:\n    name: isDetectedBy\n    description: A relationship where a risk, risk source, consequence, or impact\n      is detected by a risk control.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    domain: RiskConcept\n    alias: isDetectedBy\n    owner: RiskGroup\n    domain_of:\n    - RiskConcept\n    inverse: detectsRiskConcept\n    range: RiskControl\n    multivalued: true\n    inlined: false\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: RiskGroup\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/RiskTaxonomy/","title":"Class: RiskTaxonomy","text":"<p>A taxonomy of AI system related risks</p> <p>URI: nexus:RiskTaxonomy</p> <pre><code> classDiagram\n    class RiskTaxonomy\n    click RiskTaxonomy href \"../RiskTaxonomy\"\n      Entity &lt;|-- RiskTaxonomy\n        click Entity href \"../Entity\"\n\n      RiskTaxonomy : dateCreated\n\n      RiskTaxonomy : dateModified\n\n      RiskTaxonomy : description\n\n      RiskTaxonomy : hasDocumentation\n\n\n\n\n    RiskTaxonomy --&gt; \"*\" Documentation : hasDocumentation\n    click Documentation href \"../Documentation\"\n\n\n      RiskTaxonomy : hasLicense\n\n\n\n\n    RiskTaxonomy --&gt; \"0..1\" License : hasLicense\n    click License href \"../License\"\n\n\n      RiskTaxonomy : id\n\n      RiskTaxonomy : name\n\n      RiskTaxonomy : url\n\n      RiskTaxonomy : version\n\n</code></pre>"},{"location":"ontology/RiskTaxonomy/#inheritance","title":"Inheritance","text":"<ul> <li>Entity<ul> <li>RiskTaxonomy</li> </ul> </li> </ul>"},{"location":"ontology/RiskTaxonomy/#slots","title":"Slots","text":"Name Cardinality and Range Description Inheritance version 0..1  String The version of the entity embodied by a specified resource direct hasDocumentation *  Documentation Indicates documentation associated with an entity direct hasLicense 0..1  License Indicates licenses associated with a resource direct id 1  String A unique identifier to this instance of the model element Entity name 0..1  String A text name of this instance Entity description 0..1  String The description of an entity Entity url 0..1  Uri An optional URL associated with this instance Entity dateCreated 0..1  Date The date on which the entity was created Entity dateModified 0..1  Date The date on which the entity was most recently modified Entity"},{"location":"ontology/RiskTaxonomy/#usages","title":"Usages","text":"used by used in type used Container taxonomies range RiskTaxonomy RiskGroup isDefinedByTaxonomy range RiskTaxonomy Risk isDefinedByTaxonomy range RiskTaxonomy RiskControl isDefinedByTaxonomy range RiskTaxonomy Action isDefinedByTaxonomy range RiskTaxonomy"},{"location":"ontology/RiskTaxonomy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/RiskTaxonomy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/RiskTaxonomy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:RiskTaxonomy native nexus:RiskTaxonomy"},{"location":"ontology/RiskTaxonomy/#linkml-source","title":"LinkML Source","text":""},{"location":"ontology/RiskTaxonomy/#direct","title":"Direct","text":"<pre><code>name: RiskTaxonomy\ndescription: A taxonomy of AI system related risks\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nslots:\n- version\n- hasDocumentation\n- hasLicense\n</code></pre>"},{"location":"ontology/RiskTaxonomy/#induced","title":"Induced","text":"<pre><code>name: RiskTaxonomy\ndescription: A taxonomy of AI system related risks\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nis_a: Entity\nattributes:\n  version:\n    name: version\n    description: The version of the entity embodied by a specified resource.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:version\n    alias: version\n    owner: RiskTaxonomy\n    domain_of:\n    - License\n    - RiskTaxonomy\n    range: string\n  hasDocumentation:\n    name: hasDocumentation\n    description: Indicates documentation associated with an entity.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasDocumentation\n    alias: hasDocumentation\n    owner: RiskTaxonomy\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - Action\n    - AiEval\n    - BaseAi\n    - LargeLanguageModelFamily\n    range: Documentation\n    multivalued: true\n    inlined: false\n  hasLicense:\n    name: hasLicense\n    description: Indicates licenses associated with a resource\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: airo:hasLicense\n    alias: hasLicense\n    owner: RiskTaxonomy\n    domain_of:\n    - Dataset\n    - RiskTaxonomy\n    - AiEval\n    - BaseAi\n    range: License\n  id:\n    name: id\n    description: A unique identifier to this instance of the model element. Example\n      identifiers include UUID, URI, URN, etc.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:identifier\n    identifier: true\n    alias: id\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: string\n    required: true\n  name:\n    name: name\n    description: A text name of this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:name\n    alias: name\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: string\n  description:\n    name: description\n    description: The description of an entity\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:description\n    alias: description\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: string\n  url:\n    name: url\n    description: An optional URL associated with this instance.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:url\n    alias: url\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: uri\n  dateCreated:\n    name: dateCreated\n    description: The date on which the entity was created.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateCreated\n    alias: dateCreated\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: date\n    required: false\n  dateModified:\n    name: dateModified\n    description: The date on which the entity was most recently modified.\n    from_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\n    rank: 1000\n    slot_uri: schema:dateModified\n    alias: dateModified\n    owner: RiskTaxonomy\n    domain_of:\n    - Entity\n    range: date\n    required: false\n</code></pre>"},{"location":"ontology/Sparqlpath/","title":"Type: Sparqlpath","text":"<p>A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Sparqlpath/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Sparqlpath/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Sparqlpath/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:sparqlpath"},{"location":"ontology/String/","title":"Type: String","text":"<p>A character string</p> <p>URI: xsd:string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> </ul>"},{"location":"ontology/String/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/String/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/String/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:string native nexus:string exact schema:Text"},{"location":"ontology/Time/","title":"Type: Time","text":"<p>A time object represents a (local) time of day, independent of any particular day</p> <p>URI: xsd:time</p> <ul> <li> <p>base: XSDTime</p> </li> <li> <p>uri: xsd:time</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Time/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Time/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Time/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:time native nexus:time exact schema:Time"},{"location":"ontology/Uri/","title":"Type: Uri","text":"<p>a complete URI</p> <p>URI: xsd:anyURI</p> <ul> <li> <p>base: URI</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Uri/#comments","title":"Comments","text":"<ul> <li>in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node</li> </ul>"},{"location":"ontology/Uri/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Uri/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Uri/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:anyURI native nexus:uri close schema:URL"},{"location":"ontology/Uriorcurie/","title":"Type: Uriorcurie","text":"<p>a URI or a CURIE</p> <p>URI: xsd:anyURI</p> <ul> <li> <p>base: URIorCURIE</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"ontology/Uriorcurie/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/Uriorcurie/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/Uriorcurie/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self xsd:anyURI native nexus:uriorcurie"},{"location":"ontology/action_type/","title":"Slot: action_type","text":"<p>Denotes the type of action to be taken, for example are documentation, monitoring, measurement</p> <p>URI: nexus:action_type</p>"},{"location":"ontology/action_type/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Action Action to remediate a risk no"},{"location":"ontology/action_type/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/action_type/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/action_type/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://www.ibm.com/docs/en/watsonx/saas?topic=ontology-ai-risk-ontology</li> </ul>"},{"location":"ontology/action_type/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:action_type native nexus:action_type"},{"location":"ontology/action_type/#linkml-source","title":"LinkML Source","text":"<pre><code>name: action_type\ndescription: Denotes the type of action to be taken, for example are documentation,\n  monitoring, measurement\nfrom_schema: https://www.ibm.com/docs/en/watsonx/saas?topic=ontology-ai-risk-ontology\nrank: 1000\nalias: action_type\nowner: Action\ndomain_of:\n- Action\nrange: string\n</code></pre>"},{"location":"ontology/actions/","title":"Slot: actions","text":"<p>A list of risk related actions</p> <p>URI: nexus:actions</p>"},{"location":"ontology/actions/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/actions/#properties","title":"Properties","text":"<ul> <li> <p>Range: Action</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/actions/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/actions/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/actions/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:actions native nexus:actions"},{"location":"ontology/actions/#linkml-source","title":"LinkML Source","text":"<pre><code>name: actions\ndescription: A list of risk related actions\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: actions\nowner: Container\ndomain_of:\n- Container\nrange: Action\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/ai-risk-ontology/","title":"ai-risk-ontology","text":"<p>An ontology describing AI systems and their risks</p> <p>URI: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</p>"},{"location":"ontology/aiActorTask/","title":"Slot: hasAiActorTask","text":"<p>Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).</p> <p>URI: nexus:hasAiActorTask</p>"},{"location":"ontology/aiActorTask/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Action Action to remediate a risk no"},{"location":"ontology/aiActorTask/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/aiActorTask/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/aiActorTask/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/aiActorTask/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasAiActorTask native nexus:hasAiActorTask"},{"location":"ontology/aiActorTask/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasAiActorTask\ndescription: Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task\n  listed will apply to every suggested action in the subcategory (i.e., some apply\n  to AI development and others apply to AI deployment).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasAiActorTask\nowner: Action\ndomain_of:\n- Action\nrange: string\nmultivalued: true\n</code></pre>"},{"location":"ontology/ai_actor_task/","title":"Slot: hasAiActorTask","text":"<p>Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).</p> <p>URI: nexus:hasAiActorTask</p>"},{"location":"ontology/ai_actor_task/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Action Action to remediate a risk no"},{"location":"ontology/ai_actor_task/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/ai_actor_task/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/ai_actor_task/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/ai_actor_task/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasAiActorTask native nexus:hasAiActorTask"},{"location":"ontology/ai_actor_task/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasAiActorTask\ndescription: Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task\n  listed will apply to every suggested action in the subcategory (i.e., some apply\n  to AI development and others apply to AI deployment).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasAiActorTask\nowner: Action\ndomain_of:\n- Action\nrange: string\nmultivalued: true\n</code></pre>"},{"location":"ontology/ai_risk/","title":"ai_risk","text":"<p>Vocabulary describing AI risks as used by IBM Risk Atlas</p> <p>URI: https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk</p>"},{"location":"ontology/aimodelfamilies/","title":"Slot: aimodelfamilies","text":"<p>A list of AI model families</p> <p>URI: nexus:aimodelfamilies</p>"},{"location":"ontology/aimodelfamilies/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/aimodelfamilies/#properties","title":"Properties","text":"<ul> <li> <p>Range: LargeLanguageModelFamily</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/aimodelfamilies/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/aimodelfamilies/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/aimodelfamilies/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:aimodelfamilies native nexus:aimodelfamilies"},{"location":"ontology/aimodelfamilies/#linkml-source","title":"LinkML Source","text":"<pre><code>name: aimodelfamilies\ndescription: A list of AI model families\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: aimodelfamilies\nowner: Container\ndomain_of:\n- Container\nrange: LargeLanguageModelFamily\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/aimodels/","title":"Slot: aimodels","text":"<p>A list of AI models</p> <p>URI: nexus:aimodels</p>"},{"location":"ontology/aimodels/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/aimodels/#properties","title":"Properties","text":"<ul> <li> <p>Range: LargeLanguageModel</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/aimodels/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/aimodels/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/aimodels/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:aimodels native nexus:aimodels"},{"location":"ontology/aimodels/#linkml-source","title":"LinkML Source","text":"<pre><code>name: aimodels\ndescription: A list of AI models\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: aimodels\nowner: Container\ndomain_of:\n- Container\nrange: LargeLanguageModel\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/aitasks/","title":"Slot: aitasks","text":"<p>A list of AI tasks</p> <p>URI: nexus:aitasks</p>"},{"location":"ontology/aitasks/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/aitasks/#properties","title":"Properties","text":"<ul> <li> <p>Range: AiTask</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/aitasks/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/aitasks/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/aitasks/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:aitasks native nexus:aitasks"},{"location":"ontology/aitasks/#linkml-source","title":"LinkML Source","text":"<pre><code>name: aitasks\ndescription: A list of AI tasks\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: aitasks\nowner: Container\ndomain_of:\n- Container\nrange: AiTask\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/architecture/","title":"Slot: architecture","text":"<p>A description of the architecture of an AI such as 'Decoder-only'.</p> <p>URI: nexus:architecture</p>"},{"location":"ontology/architecture/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/architecture/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/architecture/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/architecture/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/architecture/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:architecture native nexus:architecture"},{"location":"ontology/architecture/#linkml-source","title":"LinkML Source","text":"<pre><code>name: architecture\ndescription: A description of the architecture of an AI such as 'Decoder-only'.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: architecture\ndomain_of:\n- AiModel\nrange: string\n</code></pre>"},{"location":"ontology/bestValue/","title":"Slot: bestValue","text":"<p>Annotation of the best possible result of the evaluation</p> <p>URI: nexus:bestValue</p>"},{"location":"ontology/bestValue/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Questionnaire A questionnaire groups questions no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no"},{"location":"ontology/bestValue/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/bestValue/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/bestValue/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/bestValue/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:bestValue native nexus:bestValue"},{"location":"ontology/bestValue/#linkml-source","title":"LinkML Source","text":"<pre><code>name: bestValue\ndescription: Annotation of the best possible result of the evaluation\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: bestValue\ndomain_of:\n- AiEval\nrange: string\n</code></pre>"},{"location":"ontology/broadMatch/","title":"Slot: broadMatch","text":"<p>The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.</p> <p>URI: skos:broadMatch</p>"},{"location":"ontology/broadMatch/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/broadMatch/#properties","title":"Properties","text":"<ul> <li> <p>Range: Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/broadMatch/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/broadMatch/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/broadMatch/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self skos:broadMatch native nexus:broadMatch"},{"location":"ontology/broadMatch/#linkml-source","title":"LinkML Source","text":"<pre><code>name: broadMatch\ndescription: The property is used to state a hierarchical mapping link between two\n  concepts, indicating that the concept linked to, is a broader concept than the originating\n  concept.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: skos:broadMatch\nalias: broadMatch\ndomain_of:\n- RiskGroup\n- Risk\nrange: Any\nmultivalued: true\ninlined: false\nany_of:\n- range: Risk\n- range: RiskGroup\n</code></pre>"},{"location":"ontology/carbon_emitted/","title":"Slot: carbon_emitted","text":"<p>The number of tons of carbon dioxide equivalent that are emitted during training</p> <p>URI: nexus:carbon_emitted</p>"},{"location":"ontology/carbon_emitted/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/carbon_emitted/#properties","title":"Properties","text":"<ul> <li> <p>Range: Float</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/carbon_emitted/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/carbon_emitted/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/carbon_emitted/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:carbon_emitted native nexus:carbon_emitted"},{"location":"ontology/carbon_emitted/#linkml-source","title":"LinkML Source","text":"<pre><code>name: carbon_emitted\ndescription: The number of tons of carbon dioxide equivalent that are emitted during\n  training\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: carbon_emitted\ndomain_of:\n- AiModel\nrange: float\nminimum_value: 0\nunit:\n  symbol: t CO2-eq\n  descriptive_name: tons of CO2 equivalent\n</code></pre>"},{"location":"ontology/closeMatch/","title":"Slot: closeMatch","text":"<p>The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.</p> <p>URI: skos:closeMatch</p>"},{"location":"ontology/closeMatch/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/closeMatch/#properties","title":"Properties","text":"<ul> <li> <p>Range: Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/closeMatch/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/closeMatch/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/closeMatch/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self skos:closeMatch native nexus:closeMatch"},{"location":"ontology/closeMatch/#linkml-source","title":"LinkML Source","text":"<pre><code>name: closeMatch\ndescription: The property is used to link two concepts that are sufficiently similar\n  that they can be used interchangeably in some information retrieval applications.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: skos:closeMatch\nalias: closeMatch\ndomain_of:\n- RiskGroup\n- Risk\nrange: Any\nmultivalued: true\ninlined: false\nany_of:\n- range: Risk\n- range: RiskGroup\n</code></pre>"},{"location":"ontology/concern/","title":"Slot: concern","text":"<p>Some explanation about the concern related to an AI risk</p> <p>URI: nexus:concern</p>"},{"location":"ontology/concern/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/concern/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/concern/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/concern/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/concern/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:concern native nexus:concern"},{"location":"ontology/concern/#linkml-source","title":"LinkML Source","text":"<pre><code>name: concern\ndescription: Some explanation about the concern related to an AI risk\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: concern\nowner: Risk\ndomain_of:\n- Risk\nrange: string\n</code></pre>"},{"location":"ontology/contextWindowSize/","title":"Slot: contextWindowSize","text":"<p>The total length, in bytes, of an AI model's context window.</p> <p>URI: nexus:contextWindowSize</p>"},{"location":"ontology/contextWindowSize/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/contextWindowSize/#properties","title":"Properties","text":"<ul> <li> <p>Range: Integer</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/contextWindowSize/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/contextWindowSize/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/contextWindowSize/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:contextWindowSize native nexus:contextWindowSize"},{"location":"ontology/contextWindowSize/#linkml-source","title":"LinkML Source","text":"<pre><code>name: contextWindowSize\ndescription: The total length, in bytes, of an AI model's context window.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: contextWindowSize\ndomain_of:\n- LargeLanguageModel\nrange: integer\nminimum_value: 0\n</code></pre>"},{"location":"ontology/datasets/","title":"Slot: datasets","text":"<p>A list of data sets</p> <p>URI: nexus:datasets</p>"},{"location":"ontology/datasets/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/datasets/#properties","title":"Properties","text":"<ul> <li> <p>Range: Dataset</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/datasets/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/datasets/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/datasets/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:datasets native nexus:datasets"},{"location":"ontology/datasets/#linkml-source","title":"LinkML Source","text":"<pre><code>name: datasets\ndescription: A list of data sets\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: datasets\nowner: Container\ndomain_of:\n- Container\nrange: Dataset\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/dateCreated/","title":"Slot: dateCreated","text":"<p>The date on which the entity was created.</p> <p>URI: schema:dateCreated</p>"},{"location":"ontology/dateCreated/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/dateCreated/#properties","title":"Properties","text":"<ul> <li>Range: Date</li> </ul>"},{"location":"ontology/dateCreated/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/dateCreated/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/dateCreated/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:dateCreated native nexus:dateCreated"},{"location":"ontology/dateCreated/#linkml-source","title":"LinkML Source","text":"<pre><code>name: dateCreated\ndescription: The date on which the entity was created.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:dateCreated\nalias: dateCreated\ndomain_of:\n- Entity\nrange: date\nrequired: false\n</code></pre>"},{"location":"ontology/dateModified/","title":"Slot: dateModified","text":"<p>The date on which the entity was most recently modified.</p> <p>URI: schema:dateModified</p>"},{"location":"ontology/dateModified/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/dateModified/#properties","title":"Properties","text":"<ul> <li>Range: Date</li> </ul>"},{"location":"ontology/dateModified/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/dateModified/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/dateModified/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:dateModified native nexus:dateModified"},{"location":"ontology/dateModified/#linkml-source","title":"LinkML Source","text":"<pre><code>name: dateModified\ndescription: The date on which the entity was most recently modified.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:dateModified\nalias: dateModified\ndomain_of:\n- Entity\nrange: date\nrequired: false\n</code></pre>"},{"location":"ontology/description/","title":"Slot: description","text":"<p>The description of an entity</p> <p>URI: schema:description</p>"},{"location":"ontology/description/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/description/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/description/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/description/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/description/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:description native nexus:description"},{"location":"ontology/description/#linkml-source","title":"LinkML Source","text":"<pre><code>name: description\ndescription: The description of an entity\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:description\nalias: description\ndomain_of:\n- Entity\nrange: string\n</code></pre>"},{"location":"ontology/descriptor/","title":"Slot: descriptor","text":"<p>Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.</p> <p>URI: nexus:descriptor</p>"},{"location":"ontology/descriptor/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/descriptor/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/descriptor/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/descriptor/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/descriptor/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:descriptor native nexus:descriptor"},{"location":"ontology/descriptor/#linkml-source","title":"LinkML Source","text":"<pre><code>name: descriptor\ndescription: Annotates whether an AI risk is a traditional risk, specific to or amplified\n  by AI.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: descriptor\nowner: Risk\ndomain_of:\n- Risk\nrange: string\n</code></pre>"},{"location":"ontology/detectsRiskConcept/","title":"Slot: detectsRiskConcept","text":"<p>The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.</p> <p>URI: nexus:detectsRiskConcept</p>"},{"location":"ontology/detectsRiskConcept/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskControl A measure that maintains and/or modifies risk (and risk concepts) no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/detectsRiskConcept/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskConcept</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/detectsRiskConcept/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/detectsRiskConcept/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/detectsRiskConcept/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:detectsRiskConcept native nexus:detectsRiskConcept exact airo:detectsRiskConcept"},{"location":"ontology/detectsRiskConcept/#linkml-source","title":"LinkML Source","text":"<pre><code>name: detectsRiskConcept\ndescription: The property airo:detectsRiskConcept indicates the control used for detecting\n  risks, risk sources,  consequences, and impacts.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nexact_mappings:\n- airo:detectsRiskConcept\nrank: 1000\ndomain: RiskControl\nalias: detectsRiskConcept\ndomain_of:\n- Risk\n- RiskControl\ninverse: isDetectedBy\nrange: RiskConcept\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/documents/","title":"Slot: documents","text":"<p>A list of documents</p> <p>URI: nexus:documents</p>"},{"location":"ontology/documents/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/documents/#properties","title":"Properties","text":"<ul> <li> <p>Range: Documentation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/documents/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/documents/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/documents/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:documents native nexus:documents"},{"location":"ontology/documents/#linkml-source","title":"LinkML Source","text":"<pre><code>name: documents\ndescription: A list of documents\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: documents\nowner: Container\ndomain_of:\n- Container\nrange: Documentation\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/evaluations/","title":"Slot: evaluations","text":"<p>A list of AI evaluation methods</p> <p>URI: nexus:evaluations</p>"},{"location":"ontology/evaluations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/evaluations/#properties","title":"Properties","text":"<ul> <li> <p>Range: AiEval</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/evaluations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/evaluations/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/evaluations/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:evaluations native nexus:evaluations"},{"location":"ontology/evaluations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: evaluations\ndescription: A list of AI evaluation methods\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: evaluations\nowner: Container\ndomain_of:\n- Container\nrange: AiEval\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/evidence/","title":"Slot: evidence","text":"<p>Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.</p> <p>URI: nexus:evidence</p>"},{"location":"ontology/evidence/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Fact A fact about something, for example the result of a measurement no AiEvalResult The result of an evaluation for a specific AI model no"},{"location":"ontology/evidence/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/evidence/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/evidence/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/evidence/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:evidence native nexus:evidence"},{"location":"ontology/evidence/#linkml-source","title":"LinkML Source","text":"<pre><code>name: evidence\ndescription: Evidence provides a source (typical a chunk, paragraph or link) describing\n  where some value was found or how it was generated.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: evidence\ndomain_of:\n- Fact\nrange: string\n</code></pre>"},{"location":"ontology/exactMatch/","title":"Slot: exactMatch","text":"<p>The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications</p> <p>URI: skos:exactMatch</p>"},{"location":"ontology/exactMatch/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/exactMatch/#properties","title":"Properties","text":"<ul> <li> <p>Range: Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/exactMatch/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/exactMatch/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/exactMatch/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self skos:exactMatch native nexus:exactMatch"},{"location":"ontology/exactMatch/#linkml-source","title":"LinkML Source","text":"<pre><code>name: exactMatch\ndescription: The property is used to link two concepts, indicating a high degree of\n  confidence that the concepts can be used interchangeably across a wide range of\n  information retrieval applications\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: skos:exactMatch\nalias: exactMatch\ndomain_of:\n- RiskGroup\n- Risk\nrange: Any\nmultivalued: true\ninlined: false\nany_of:\n- range: Risk\n- range: RiskGroup\n</code></pre>"},{"location":"ontology/fine_tuning/","title":"Slot: fine_tuning","text":"<p>A description of the fine-tuning mechanism(s) applied to a model.</p> <p>URI: nexus:fine_tuning</p>"},{"location":"ontology/fine_tuning/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/fine_tuning/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/fine_tuning/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/fine_tuning/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/fine_tuning/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:fine_tuning native nexus:fine_tuning"},{"location":"ontology/fine_tuning/#linkml-source","title":"LinkML Source","text":"<pre><code>name: fine_tuning\ndescription: A description of the fine-tuning mechanism(s) applied to a model.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: fine_tuning\ndomain_of:\n- LargeLanguageModel\nrange: string\n</code></pre>"},{"location":"ontology/gpu_hours/","title":"Slot: gpu_hours","text":"<p>GPU consumption in terms of hours</p> <p>URI: nexus:gpu_hours</p>"},{"location":"ontology/gpu_hours/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/gpu_hours/#properties","title":"Properties","text":"<ul> <li> <p>Range: Integer</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/gpu_hours/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/gpu_hours/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/gpu_hours/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:gpu_hours native nexus:gpu_hours"},{"location":"ontology/gpu_hours/#linkml-source","title":"LinkML Source","text":"<pre><code>name: gpu_hours\ndescription: GPU consumption in terms of hours\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: gpu_hours\ndomain_of:\n- AiModel\nrange: integer\nminimum_value: 0\n</code></pre>"},{"location":"ontology/grants_license/","title":"Slot: grants_license","text":"<p>A relationship from a granting entity such as an Organization to a License instance.</p> <p>URI: nexus:grants_license</p>"},{"location":"ontology/grants_license/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no"},{"location":"ontology/grants_license/#properties","title":"Properties","text":"<ul> <li>Range: License</li> </ul>"},{"location":"ontology/grants_license/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/grants_license/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/grants_license/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:grants_license native nexus:grants_license"},{"location":"ontology/grants_license/#linkml-source","title":"LinkML Source","text":"<pre><code>name: grants_license\ndescription: A relationship from a granting entity such as an Organization to a License\n  instance.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: grants_license\ndomain_of:\n- Organization\nrange: License\n</code></pre>"},{"location":"ontology/hasAiActorTask/","title":"Slot: hasAiActorTask","text":"<p>Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).</p> <p>URI: nexus:hasAiActorTask</p>"},{"location":"ontology/hasAiActorTask/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Action Action to remediate a risk no"},{"location":"ontology/hasAiActorTask/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasAiActorTask/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasAiActorTask/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasAiActorTask/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasAiActorTask native nexus:hasAiActorTask"},{"location":"ontology/hasAiActorTask/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasAiActorTask\ndescription: Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task\n  listed will apply to every suggested action in the subcategory (i.e., some apply\n  to AI development and others apply to AI deployment).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasAiActorTask\ndomain_of:\n- Action\nrange: string\nmultivalued: true\n</code></pre>"},{"location":"ontology/hasDataset/","title":"Slot: hasDataset","text":"<p>A relationship to datasets that are used.</p> <p>URI: nexus:hasDataset</p>"},{"location":"ontology/hasDataset/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Questionnaire A questionnaire groups questions no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no"},{"location":"ontology/hasDataset/#properties","title":"Properties","text":"<ul> <li> <p>Range: Dataset</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasDataset/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasDataset/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasDataset/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasDataset native nexus:hasDataset"},{"location":"ontology/hasDataset/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasDataset\ndescription: A relationship to datasets that are used.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasDataset\ndomain_of:\n- AiEval\nrange: Dataset\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasDocumentation/","title":"Slot: hasDocumentation","text":"<p>Indicates documentation associated with an entity.</p> <p>URI: airo:hasDocumentation</p>"},{"location":"ontology/hasDocumentation/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiEval An AI Evaluation, e no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Dataset A body of structured information describing some topic(s) of interest no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no RiskTaxonomy A taxonomy of AI system related risks no AiSystem A compound AI System composed of one or more AI capablities no Action Action to remediate a risk no Questionnaire A questionnaire groups questions no AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no Question An evaluation where a question has to be answered no"},{"location":"ontology/hasDocumentation/#properties","title":"Properties","text":"<ul> <li> <p>Range: Documentation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasDocumentation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasDocumentation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasDocumentation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:hasDocumentation native nexus:hasDocumentation"},{"location":"ontology/hasDocumentation/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasDocumentation\ndescription: Indicates documentation associated with an entity.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: airo:hasDocumentation\nalias: hasDocumentation\ndomain_of:\n- Dataset\n- RiskTaxonomy\n- Action\n- AiEval\n- BaseAi\n- LargeLanguageModelFamily\nrange: Documentation\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasEuAiSystemType/","title":"Slot: hasEuAiSystemType","text":"<p>The type of system as defined by the EU AI Act.</p> <p>URI: nexus:hasEuAiSystemType</p>"},{"location":"ontology/hasEuAiSystemType/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiSystem A compound AI System composed of one or more AI capablities no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no"},{"location":"ontology/hasEuAiSystemType/#properties","title":"Properties","text":"<ul> <li>Range: AiSystemType</li> </ul>"},{"location":"ontology/hasEuAiSystemType/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasEuAiSystemType/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasEuAiSystemType/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasEuAiSystemType native nexus:hasEuAiSystemType"},{"location":"ontology/hasEuAiSystemType/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasEuAiSystemType\ndescription: The type of system as defined by the EU AI Act.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasEuAiSystemType\ndomain_of:\n- AiSystem\nrange: AiSystemType\n</code></pre>"},{"location":"ontology/hasEuRiskCategory/","title":"Slot: hasEuRiskCategory","text":"<p>The risk category of an AI system as defined by the EU AI Act.</p> <p>URI: nexus:hasEuRiskCategory</p>"},{"location":"ontology/hasEuRiskCategory/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiSystem A compound AI System composed of one or more AI capablities no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no"},{"location":"ontology/hasEuRiskCategory/#properties","title":"Properties","text":"<ul> <li>Range: EuAiRiskCategory</li> </ul>"},{"location":"ontology/hasEuRiskCategory/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasEuRiskCategory/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasEuRiskCategory/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasEuRiskCategory native nexus:hasEuRiskCategory"},{"location":"ontology/hasEuRiskCategory/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasEuRiskCategory\ndescription: The risk category of an AI system as defined by the EU AI Act.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasEuRiskCategory\ndomain_of:\n- AiSystem\nrange: EuAiRiskCategory\n</code></pre>"},{"location":"ontology/hasEvaluation/","title":"Slot: hasEvaluation","text":"<p>A relationship indicating that an entity has an AI evaluation result.</p> <p>URI: dqv:hasQualityMeasurement</p>"},{"location":"ontology/hasEvaluation/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasEvaluation/#properties","title":"Properties","text":"<ul> <li> <p>Range: AiEvalResult</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasEvaluation/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasEvaluation/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasEvaluation/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self dqv:hasQualityMeasurement native nexus:hasEvaluation"},{"location":"ontology/hasEvaluation/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasEvaluation\ndescription: A relationship indicating that an entity has an AI evaluation result.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: dqv:hasQualityMeasurement\nalias: hasEvaluation\ndomain_of:\n- AiModel\nrange: AiEvalResult\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/hasInputModality/","title":"Slot: hasInputModality","text":"<p>A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.</p> <p>URI: nexus:hasInputModality</p>"},{"location":"ontology/hasInputModality/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasInputModality/#properties","title":"Properties","text":"<ul> <li> <p>Range: Modality</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasInputModality/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasInputModality/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasInputModality/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasInputModality native nexus:hasInputModality"},{"location":"ontology/hasInputModality/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasInputModality\ndescription: A relationship indicating the input modalities supported by an AI component.\n  Examples include text, image, video.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasInputModality\ndomain_of:\n- LargeLanguageModel\nrange: Modality\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasLicense/","title":"Slot: hasLicense","text":"<p>Indicates licenses associated with a resource</p> <p>URI: airo:hasLicense</p>"},{"location":"ontology/hasLicense/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiEval An AI Evaluation, e no Dataset A body of structured information describing some topic(s) of interest no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no RiskTaxonomy A taxonomy of AI system related risks no AiSystem A compound AI System composed of one or more AI capablities no Questionnaire A questionnaire groups questions no AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no Question An evaluation where a question has to be answered no"},{"location":"ontology/hasLicense/#properties","title":"Properties","text":"<ul> <li>Range: License</li> </ul>"},{"location":"ontology/hasLicense/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasLicense/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasLicense/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:hasLicense native nexus:hasLicense"},{"location":"ontology/hasLicense/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasLicense\ndescription: Indicates licenses associated with a resource\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: airo:hasLicense\nalias: hasLicense\ndomain_of:\n- Dataset\n- RiskTaxonomy\n- AiEval\n- BaseAi\nrange: License\n</code></pre>"},{"location":"ontology/hasModelCard/","title":"Slot: hasModelCard","text":"<p>A relationship to model card references.</p> <p>URI: nexus:hasModelCard</p>"},{"location":"ontology/hasModelCard/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no AiModel A base AI Model class no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasModelCard/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasModelCard/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasModelCard/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasModelCard/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasModelCard native nexus:hasModelCard"},{"location":"ontology/hasModelCard/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasModelCard\ndescription: A relationship to model card references.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasModelCard\ndomain_of:\n- BaseAi\nrange: string\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/hasOutputModality/","title":"Slot: hasOutputModality","text":"<p>A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.</p> <p>URI: nexus:hasOutputModality</p>"},{"location":"ontology/hasOutputModality/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasOutputModality/#properties","title":"Properties","text":"<ul> <li> <p>Range: Modality</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasOutputModality/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasOutputModality/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasOutputModality/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasOutputModality native nexus:hasOutputModality"},{"location":"ontology/hasOutputModality/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasOutputModality\ndescription: A relationship indicating the output modalities supported by an AI component.\n  Examples include text, image, video.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasOutputModality\ndomain_of:\n- LargeLanguageModel\nrange: Modality\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasPart/","title":"Slot: hasPart","text":"<p>A relationship where an entity has another entity</p> <p>URI: schema:hasPart</p>"},{"location":"ontology/hasPart/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy yes"},{"location":"ontology/hasPart/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasPart/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasPart/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasPart/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:hasPart native nexus:hasPart"},{"location":"ontology/hasPart/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasPart\ndescription: A relationship where an entity has another entity\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:hasPart\nalias: hasPart\ndomain_of:\n- RiskGroup\nrange: string\nmultivalued: true\n</code></pre>"},{"location":"ontology/hasRelatedAction/","title":"Slot: hasRelatedAction","text":"<p>A relationship where an entity relates to an action</p> <p>URI: nexus:hasRelatedAction</p>"},{"location":"ontology/hasRelatedAction/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/hasRelatedAction/#properties","title":"Properties","text":"<ul> <li> <p>Range: Action</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasRelatedAction/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasRelatedAction/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasRelatedAction/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasRelatedAction native nexus:hasRelatedAction"},{"location":"ontology/hasRelatedAction/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasRelatedAction\ndescription: A relationship where an entity relates to an action\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: hasRelatedAction\ndomain_of:\n- Risk\nrange: Action\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasRelatedRisk/","title":"Slot: hasRelatedRisk","text":"<p>A relationship where an entity relates to a risk</p> <p>URI: nexus:hasRelatedRisk</p>"},{"location":"ontology/hasRelatedRisk/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Action Action to remediate a risk no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no Questionnaire A questionnaire groups questions no"},{"location":"ontology/hasRelatedRisk/#properties","title":"Properties","text":"<ul> <li> <p>Range: Risk</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasRelatedRisk/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasRelatedRisk/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasRelatedRisk/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:hasRelatedRisk native nexus:hasRelatedRisk"},{"location":"ontology/hasRelatedRisk/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasRelatedRisk\ndescription: A relationship where an entity relates to a risk\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\ndomain: RiskConcept\nalias: hasRelatedRisk\ndomain_of:\n- Action\n- AiEval\nrange: Risk\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasRiskControl/","title":"Slot: hasRiskControl","text":"<p>Indicates the control measures associated with a system or component to modify risks.</p> <p>URI: airo:hasRiskControl</p>"},{"location":"ontology/hasRiskControl/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasRiskControl/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskControl</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasRiskControl/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasRiskControl/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasRiskControl/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:hasRiskControl native nexus:hasRiskControl"},{"location":"ontology/hasRiskControl/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasRiskControl\ndescription: Indicates the control measures associated with a system or component\n  to modify risks.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: airo:hasRiskControl\nalias: hasRiskControl\ndomain_of:\n- AiModel\nrange: RiskControl\nmultivalued: true\n</code></pre>"},{"location":"ontology/hasTrainingData/","title":"Slot: hasTrainingData","text":"<p>A relationship indicating the datasets an AI model was trained on.</p> <p>URI: airo:hasTrainingData</p>"},{"location":"ontology/hasTrainingData/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/hasTrainingData/#properties","title":"Properties","text":"<ul> <li> <p>Range: Dataset</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/hasTrainingData/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasTrainingData/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasTrainingData/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:hasTrainingData native nexus:hasTrainingData"},{"location":"ontology/hasTrainingData/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasTrainingData\ndescription: A relationship indicating the datasets an AI model was trained on.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: airo:hasTrainingData\nalias: hasTrainingData\ndomain_of:\n- LargeLanguageModel\nrange: Dataset\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/hasUnitxtCard/","title":"Slot: hasUnitxtCard","text":"<p>A relationship to a Unitxt card defining the risk evaluation</p> <p>URI: schema:url</p>"},{"location":"ontology/hasUnitxtCard/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Questionnaire A questionnaire groups questions no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no"},{"location":"ontology/hasUnitxtCard/#properties","title":"Properties","text":"<ul> <li>Range: Uri</li> </ul>"},{"location":"ontology/hasUnitxtCard/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/hasUnitxtCard/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/hasUnitxtCard/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:url native nexus:hasUnitxtCard"},{"location":"ontology/hasUnitxtCard/#linkml-source","title":"LinkML Source","text":"<pre><code>name: hasUnitxtCard\ndescription: A relationship to a Unitxt card defining the risk evaluation\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:url\nalias: hasUnitxtCard\ndomain_of:\n- AiEval\nrange: uri\n</code></pre>"},{"location":"ontology/id/","title":"Slot: id","text":"<p>A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.</p> <p>URI: schema:identifier</p>"},{"location":"ontology/id/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/id/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"ontology/id/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/id/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/id/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:identifier native nexus:id"},{"location":"ontology/id/#linkml-source","title":"LinkML Source","text":"<pre><code>name: id\ndescription: A unique identifier to this instance of the model element. Example identifiers\n  include UUID, URI, URN, etc.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:identifier\nidentifier: true\nalias: id\ndomain_of:\n- Entity\nrange: string\nrequired: true\n</code></pre>"},{"location":"ontology/isComposedOf/","title":"Slot: isComposedOf","text":"<p>Relationship indicating the some entity is composed of other entities (including some of the same type).</p> <p>URI: nexus:isComposedOf</p>"},{"location":"ontology/isComposedOf/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/isComposedOf/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isComposedOf/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isComposedOf/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:isComposedOf native nexus:isComposedOf"},{"location":"ontology/isComposedOf/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isComposedOf\ndescription: Relationship indicating the some entity is composed of other entities\n  (including some of the same type).\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: isComposedOf\nrange: string\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/isDefinedBy/","title":"Slot: isDefinedBy","text":"<p>A relationship where a risk or a risk group is defined by a risk taxonomy</p> <p>URI: schema:isPartOf</p>"},{"location":"ontology/isDefinedBy/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no"},{"location":"ontology/isDefinedBy/#properties","title":"Properties","text":"<ul> <li>Range: RiskTaxonomy</li> </ul>"},{"location":"ontology/isDefinedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isDefinedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://www.ibm.com/docs/en/watsonx/saas?topic=ontology-ai-risk-ontology</li> </ul>"},{"location":"ontology/isDefinedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:isPartOf native nexus:isDefinedBy"},{"location":"ontology/isDefinedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isDefinedBy\ndescription: A relationship where a risk or a risk group is defined by a risk taxonomy\nfrom_schema: https://www.ibm.com/docs/en/watsonx/saas?topic=ontology-ai-risk-ontology\nrank: 1000\nslot_uri: schema:isPartOf\nalias: isDefinedBy\ndomain_of:\n- RiskGroup\n- Risk\nrange: RiskTaxonomy\n</code></pre>"},{"location":"ontology/isDefinedByTaxonomy/","title":"Slot: isDefinedByTaxonomy","text":"<p>A relationship where a risk or a risk group is defined by a risk taxonomy</p> <p>URI: schema:isPartOf</p>"},{"location":"ontology/isDefinedByTaxonomy/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Action Action to remediate a risk no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/isDefinedByTaxonomy/#properties","title":"Properties","text":"<ul> <li>Range: RiskTaxonomy</li> </ul>"},{"location":"ontology/isDefinedByTaxonomy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isDefinedByTaxonomy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isDefinedByTaxonomy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:isPartOf native nexus:isDefinedByTaxonomy"},{"location":"ontology/isDefinedByTaxonomy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isDefinedByTaxonomy\ndescription: A relationship where a risk or a risk group is defined by a risk taxonomy\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:isPartOf\nalias: isDefinedByTaxonomy\ndomain_of:\n- RiskGroup\n- Risk\n- RiskControl\n- Action\nrange: RiskTaxonomy\n</code></pre>"},{"location":"ontology/isDeployedBy/","title":"Slot: isDeployedBy","text":"<p>A relationship indicating that an entity has been deployed by an organization.</p> <p>URI: nexus:isDeployedBy</p>"},{"location":"ontology/isDeployedBy/#properties","title":"Properties","text":"<ul> <li>Range: Organization</li> </ul>"},{"location":"ontology/isDeployedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isDeployedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isDeployedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:isDeployedBy native nexus:isDeployedBy"},{"location":"ontology/isDeployedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isDeployedBy\ndescription: A relationship indicating that an entity has been deployed by an organization.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: isDeployedBy\nrange: Organization\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/isDetectedBy/","title":"Slot: isDetectedBy","text":"<p>A relationship where a risk, risk source, consequence, or impact is detected by a risk control.</p> <p>URI: nexus:isDetectedBy</p>"},{"location":"ontology/isDetectedBy/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/isDetectedBy/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskControl</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/isDetectedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isDetectedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isDetectedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:isDetectedBy native nexus:isDetectedBy"},{"location":"ontology/isDetectedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isDetectedBy\ndescription: A relationship where a risk, risk source, consequence, or impact is detected\n  by a risk control.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\ndomain: RiskConcept\nalias: isDetectedBy\ndomain_of:\n- RiskConcept\ninverse: detectsRiskConcept\nrange: RiskControl\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/isDistributedBy/","title":"Slot: isDistributedBy","text":"<p>A relationship indicating that an entity has been distributed by an organization.</p> <p>URI: nexus:isDistributedBy</p>"},{"location":"ontology/isDistributedBy/#properties","title":"Properties","text":"<ul> <li>Range: Organization</li> </ul>"},{"location":"ontology/isDistributedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isDistributedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isDistributedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:isDistributedBy native nexus:isDistributedBy"},{"location":"ontology/isDistributedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isDistributedBy\ndescription: A relationship indicating that an entity has been distributed by an organization.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: isDistributedBy\nrange: Organization\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/isImportedBy/","title":"Slot: isImportedBy","text":"<p>A relationship indicating that an entity has been imported by an organization.</p> <p>URI: nexus:isImportedBy</p>"},{"location":"ontology/isImportedBy/#properties","title":"Properties","text":"<ul> <li>Range: Organization</li> </ul>"},{"location":"ontology/isImportedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isImportedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isImportedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:isImportedBy native nexus:isImportedBy"},{"location":"ontology/isImportedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isImportedBy\ndescription: A relationship indicating that an entity has been imported by an organization.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: isImportedBy\nrange: Organization\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/isPartOf/","title":"Slot: isPartOf","text":"<p>A relationship where an entity is part of another entity</p> <p>URI: schema:isPartOf</p>"},{"location":"ontology/isPartOf/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... yes LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... yes"},{"location":"ontology/isPartOf/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/isPartOf/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isPartOf/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isPartOf/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:isPartOf native nexus:isPartOf"},{"location":"ontology/isPartOf/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isPartOf\ndescription: A relationship where an entity is part of another entity\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:isPartOf\nalias: isPartOf\ndomain_of:\n- Risk\n- LargeLanguageModel\nrange: string\n</code></pre>"},{"location":"ontology/isProvidedBy/","title":"Slot: isProvidedBy","text":"<p>A relationship indicating the AI model has been provided by an AI model provider.</p> <p>URI: airo:isProvidedBy</p>"},{"location":"ontology/isProvidedBy/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... yes BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no AiModel A base AI Model class no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/isProvidedBy/#properties","title":"Properties","text":"<ul> <li>Range: AiProvider</li> </ul>"},{"location":"ontology/isProvidedBy/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isProvidedBy/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isProvidedBy/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self airo:isProvidedBy native nexus:isProvidedBy"},{"location":"ontology/isProvidedBy/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isProvidedBy\ndescription: A relationship indicating the AI model has been provided by an AI model\n  provider.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: airo:isProvidedBy\nalias: isProvidedBy\ndomain_of:\n- BaseAi\nrange: AiProvider\n</code></pre>"},{"location":"ontology/isResultOf/","title":"Slot: isResultOf","text":"<p>A relationship indicating that an entity is the result of an AI evaluation.</p> <p>URI: dqv:isMeasurementOf</p>"},{"location":"ontology/isResultOf/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiEvalResult The result of an evaluation for a specific AI model no"},{"location":"ontology/isResultOf/#properties","title":"Properties","text":"<ul> <li>Range: AiEval</li> </ul>"},{"location":"ontology/isResultOf/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/isResultOf/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/isResultOf/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self dqv:isMeasurementOf native nexus:isResultOf"},{"location":"ontology/isResultOf/#linkml-source","title":"LinkML Source","text":"<pre><code>name: isResultOf\ndescription: A relationship indicating that an entity is the result of an AI evaluation.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: dqv:isMeasurementOf\nalias: isResultOf\ndomain_of:\n- AiEvalResult\nrange: AiEval\ninlined: false\n</code></pre>"},{"location":"ontology/licenses/","title":"Slot: licenses","text":"<p>A list of licenses</p> <p>URI: nexus:licenses</p>"},{"location":"ontology/licenses/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/licenses/#properties","title":"Properties","text":"<ul> <li> <p>Range: License</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/licenses/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/licenses/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/licenses/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:licenses native nexus:licenses"},{"location":"ontology/licenses/#linkml-source","title":"LinkML Source","text":"<pre><code>name: licenses\ndescription: A list of licenses\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: licenses\nowner: Container\ndomain_of:\n- Container\nrange: License\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/modalities/","title":"Slot: modalities","text":"<p>A list of AI modalities</p> <p>URI: nexus:modalities</p>"},{"location":"ontology/modalities/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/modalities/#properties","title":"Properties","text":"<ul> <li> <p>Range: Modality</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/modalities/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/modalities/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/modalities/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:modalities native nexus:modalities"},{"location":"ontology/modalities/#linkml-source","title":"LinkML Source","text":"<pre><code>name: modalities\ndescription: A list of AI modalities\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: modalities\nowner: Container\ndomain_of:\n- Container\nrange: Modality\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/name/","title":"Slot: name","text":"<p>A text name of this instance.</p> <p>URI: schema:name</p>"},{"location":"ontology/name/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/name/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/name/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/name/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/name/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:name native nexus:name"},{"location":"ontology/name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: name\ndescription: A text name of this instance.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:name\nalias: name\ndomain_of:\n- Entity\nrange: string\n</code></pre>"},{"location":"ontology/narrowMatch/","title":"Slot: narrowMatch","text":"<p>The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.</p> <p>URI: skos:narrowMatch</p>"},{"location":"ontology/narrowMatch/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/narrowMatch/#properties","title":"Properties","text":"<ul> <li> <p>Range: Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/narrowMatch/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/narrowMatch/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/narrowMatch/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self skos:narrowMatch native nexus:narrowMatch"},{"location":"ontology/narrowMatch/#linkml-source","title":"LinkML Source","text":"<pre><code>name: narrowMatch\ndescription: The property is used to state a hierarchical mapping link between two\n  concepts, indicating that the concept linked to, is a narrower concept than the\n  originating concept.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: skos:narrowMatch\nalias: narrowMatch\ndomain_of:\n- RiskGroup\n- Risk\nrange: Any\nmultivalued: true\ninlined: false\nany_of:\n- range: Risk\n- range: RiskGroup\n</code></pre>"},{"location":"ontology/numParameters/","title":"Slot: numParameters","text":"<p>A property indicating the number of parameters in a LLM.</p> <p>URI: nexus:numParameters</p>"},{"location":"ontology/numParameters/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/numParameters/#properties","title":"Properties","text":"<ul> <li> <p>Range: Integer</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/numParameters/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/numParameters/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/numParameters/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:numParameters native nexus:numParameters"},{"location":"ontology/numParameters/#linkml-source","title":"LinkML Source","text":"<pre><code>name: numParameters\ndescription: A property indicating the number of parameters in a LLM.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: numParameters\ndomain_of:\n- LargeLanguageModel\nrange: integer\nminimum_value: 0\n</code></pre>"},{"location":"ontology/numTrainingTokens/","title":"Slot: numTrainingTokens","text":"<p>The number of tokens a AI model was trained on.</p> <p>URI: nexus:numTrainingTokens</p>"},{"location":"ontology/numTrainingTokens/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/numTrainingTokens/#properties","title":"Properties","text":"<ul> <li> <p>Range: Integer</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/numTrainingTokens/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/numTrainingTokens/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/numTrainingTokens/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:numTrainingTokens native nexus:numTrainingTokens"},{"location":"ontology/numTrainingTokens/#linkml-source","title":"LinkML Source","text":"<pre><code>name: numTrainingTokens\ndescription: The number of tokens a AI model was trained on.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: numTrainingTokens\ndomain_of:\n- LargeLanguageModel\nrange: integer\nminimum_value: 0\n</code></pre>"},{"location":"ontology/organizations/","title":"Slot: organizations","text":"<p>A list of organizations</p> <p>URI: nexus:organizations</p>"},{"location":"ontology/organizations/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/organizations/#properties","title":"Properties","text":"<ul> <li> <p>Range: Organization</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/organizations/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/organizations/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/organizations/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:organizations native nexus:organizations"},{"location":"ontology/organizations/#linkml-source","title":"LinkML Source","text":"<pre><code>name: organizations\ndescription: A list of organizations\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: organizations\nowner: Container\ndomain_of:\n- Container\nrange: Organization\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/performsTask/","title":"Slot: performsTask","text":"<p>relationship indicating the AI tasks an AI model can perform.</p> <p>URI: nexus:performsTask</p>"},{"location":"ontology/performsTask/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no AiModel A base AI Model class no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/performsTask/#properties","title":"Properties","text":"<ul> <li> <p>Range: AiTask</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/performsTask/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/performsTask/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/performsTask/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:performsTask native nexus:performsTask"},{"location":"ontology/performsTask/#linkml-source","title":"LinkML Source","text":"<pre><code>name: performsTask\ndescription: relationship indicating the AI tasks an AI model can perform.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: performsTask\ndomain_of:\n- BaseAi\nrange: AiTask\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/phase/","title":"Slot: phase","text":"<p>Annotation whether an AI risk shows specifically during the training-tuning or inference phase.</p> <p>URI: nexus:phase</p>"},{"location":"ontology/phase/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/phase/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/phase/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/phase/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/phase/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:phase native nexus:phase"},{"location":"ontology/phase/#linkml-source","title":"LinkML Source","text":"<pre><code>name: phase\ndescription: Annotation whether an AI risk shows specifically during the training-tuning\n  or inference phase.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: phase\nowner: Risk\ndomain_of:\n- Risk\nrange: string\n</code></pre>"},{"location":"ontology/power_consumption_w/","title":"Slot: power_consumption_w","text":"<p>power consumption in Watts</p> <p>URI: nexus:power_consumption_w</p>"},{"location":"ontology/power_consumption_w/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiModel A base AI Model class no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/power_consumption_w/#properties","title":"Properties","text":"<ul> <li> <p>Range: Integer</p> </li> <li> <p>Minimum Value: 0</p> </li> </ul>"},{"location":"ontology/power_consumption_w/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/power_consumption_w/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/power_consumption_w/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:power_consumption_w native nexus:power_consumption_w"},{"location":"ontology/power_consumption_w/#linkml-source","title":"LinkML Source","text":"<pre><code>name: power_consumption_w\ndescription: power consumption in Watts\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: power_consumption_w\ndomain_of:\n- AiModel\nrange: integer\nminimum_value: 0\n</code></pre>"},{"location":"ontology/producer/","title":"Slot: producer","text":"<p>A relationship to the Organization instance which produces this instance.</p> <p>URI: nexus:producer</p>"},{"location":"ontology/producer/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no AiModel A base AI Model class no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/producer/#properties","title":"Properties","text":"<ul> <li>Range: Organization</li> </ul>"},{"location":"ontology/producer/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/producer/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/producer/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:producer native nexus:producer"},{"location":"ontology/producer/#linkml-source","title":"LinkML Source","text":"<pre><code>name: producer\ndescription: A relationship to the Organization instance which produces this instance.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: producer\ndomain_of:\n- BaseAi\nrange: Organization\n</code></pre>"},{"location":"ontology/provider/","title":"Slot: provider","text":"<p>A relationship to the Organization instance that provides this instance.</p> <p>URI: schema:provider</p>"},{"location":"ontology/provider/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Dataset A body of structured information describing some topic(s) of interest no"},{"location":"ontology/provider/#properties","title":"Properties","text":"<ul> <li>Range: Organization</li> </ul>"},{"location":"ontology/provider/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/provider/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/provider/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:provider native nexus:provider"},{"location":"ontology/provider/#linkml-source","title":"LinkML Source","text":"<pre><code>name: provider\ndescription: A relationship to the Organization instance that provides this instance.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:provider\nalias: provider\ndomain_of:\n- Dataset\nrange: Organization\n</code></pre>"},{"location":"ontology/relatedMatch/","title":"Slot: relatedMatch","text":"<p>The property skos:relatedMatch is used to state an associative mapping link between two concepts.</p> <p>URI: skos:relatedMatch</p>"},{"location":"ontology/relatedMatch/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskGroup A group of AI system related risks that are part of a risk taxonomy no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/relatedMatch/#properties","title":"Properties","text":"<ul> <li> <p>Range: Any\u00a0or\u00a0Risk\u00a0or\u00a0RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/relatedMatch/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/relatedMatch/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/relatedMatch/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self skos:relatedMatch native nexus:relatedMatch"},{"location":"ontology/relatedMatch/#linkml-source","title":"LinkML Source","text":"<pre><code>name: relatedMatch\ndescription: The property skos:relatedMatch is used to state an associative mapping\n  link between two concepts.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: skos:relatedMatch\nalias: relatedMatch\ndomain_of:\n- RiskGroup\n- Risk\nrange: Any\nmultivalued: true\ninlined: false\nany_of:\n- range: Risk\n- range: RiskGroup\n</code></pre>"},{"location":"ontology/riskcontrols/","title":"Slot: riskcontrols","text":"<p>A list of AI risk controls</p> <p>URI: nexus:riskcontrols</p>"},{"location":"ontology/riskcontrols/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/riskcontrols/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskControl</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/riskcontrols/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/riskcontrols/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/riskcontrols/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:riskcontrols native nexus:riskcontrols"},{"location":"ontology/riskcontrols/#linkml-source","title":"LinkML Source","text":"<pre><code>name: riskcontrols\ndescription: A list of AI risk controls\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: riskcontrols\nowner: Container\ndomain_of:\n- Container\nrange: RiskControl\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/riskgroups/","title":"Slot: riskgroups","text":"<p>A list of AI risk groups</p> <p>URI: nexus:riskgroups</p>"},{"location":"ontology/riskgroups/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/riskgroups/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskGroup</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/riskgroups/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/riskgroups/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/riskgroups/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:riskgroups native nexus:riskgroups"},{"location":"ontology/riskgroups/#linkml-source","title":"LinkML Source","text":"<pre><code>name: riskgroups\ndescription: A list of AI risk groups\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: riskgroups\nowner: Container\ndomain_of:\n- Container\nrange: RiskGroup\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/risks/","title":"Slot: risks","text":"<p>A list of AI risks</p> <p>URI: nexus:risks</p>"},{"location":"ontology/risks/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/risks/#properties","title":"Properties","text":"<ul> <li> <p>Range: Risk</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/risks/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/risks/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/risks/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:risks native nexus:risks"},{"location":"ontology/risks/#linkml-source","title":"LinkML Source","text":"<pre><code>name: risks\ndescription: A list of AI risks\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: risks\nowner: Container\ndomain_of:\n- Container\nrange: Risk\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/supported_languages/","title":"Slot: supported_languages","text":"<p>A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'</p> <p>URI: nexus:supported_languages</p>"},{"location":"ontology/supported_languages/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no"},{"location":"ontology/supported_languages/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/supported_languages/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/supported_languages/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/supported_languages/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:supported_languages native nexus:supported_languages"},{"location":"ontology/supported_languages/#linkml-source","title":"LinkML Source","text":"<pre><code>name: supported_languages\ndescription: A list of languages, expressed as ISO two letter codes. For example,\n  'jp, fr, en, de'\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: supported_languages\ndomain_of:\n- LargeLanguageModel\nrange: string\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/tag/","title":"Slot: tag","text":"<p>A shost version of the name</p> <p>URI: nexus:tag</p>"},{"location":"ontology/tag/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/tag/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/tag/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/tag/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/tag/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:tag native nexus:tag"},{"location":"ontology/tag/#linkml-source","title":"LinkML Source","text":"<pre><code>name: tag\ndescription: A shost version of the name\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: tag\nowner: Risk\ndomain_of:\n- Risk\nrange: string\n</code></pre>"},{"location":"ontology/taxonomies/","title":"Slot: taxonomies","text":"<p>A list of AI risk taxonomies</p> <p>URI: nexus:taxonomies</p>"},{"location":"ontology/taxonomies/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Container An umbrella object that holds the ontology class instances no"},{"location":"ontology/taxonomies/#properties","title":"Properties","text":"<ul> <li> <p>Range: RiskTaxonomy</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/taxonomies/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/taxonomies/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/taxonomies/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:taxonomies native nexus:taxonomies"},{"location":"ontology/taxonomies/#linkml-source","title":"LinkML Source","text":"<pre><code>name: taxonomies\ndescription: A list of AI risk taxonomies\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: taxonomies\nowner: Container\ndomain_of:\n- Container\nrange: RiskTaxonomy\nmultivalued: true\ninlined: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/text/","title":"Slot: text","text":"<p>The question itself</p> <p>URI: nexus:text</p>"},{"location":"ontology/text/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Question An evaluation where a question has to be answered no"},{"location":"ontology/text/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"ontology/text/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/text/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/text/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:text native nexus:text"},{"location":"ontology/text/#linkml-source","title":"LinkML Source","text":"<pre><code>name: text\ndescription: The question itself\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: text\nowner: Question\ndomain_of:\n- Question\nrange: string\nrequired: true\n</code></pre>"},{"location":"ontology/training_data_preprocessing/","title":"Slot: training_data_preprocessing","text":"<p>relationship indicating data preprocessing steps performed on training data sets to ensure high quality training data.</p> <p>URI: nexus:training_data_preprocessing</p>"},{"location":"ontology/training_data_preprocessing/#properties","title":"Properties","text":"<ul> <li> <p>Range: DataPreprocessing</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/training_data_preprocessing/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/training_data_preprocessing/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/training_data_preprocessing/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:training_data_preprocessing native nexus:training_data_preprocessing"},{"location":"ontology/training_data_preprocessing/#linkml-source","title":"LinkML Source","text":"<pre><code>name: training_data_preprocessing\ndescription: relationship indicating data preprocessing steps performed on training\n  data sets to ensure high quality training data.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: training_data_preprocessing\nrange: DataPreprocessing\nmultivalued: true\ninlined: false\n</code></pre>"},{"location":"ontology/type/","title":"Slot: type","text":"<p>Annotation whether an AI risk occurs at input or output or is non-technical.</p> <p>URI: nexus:type</p>"},{"location":"ontology/type/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/type/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/type/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/type/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/type/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:type native nexus:type"},{"location":"ontology/type/#linkml-source","title":"LinkML Source","text":"<pre><code>name: type\ndescription: Annotation whether an AI risk occurs at input or output or is non-technical.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: type\nowner: Risk\ndomain_of:\n- Risk\nrange: string\n</code></pre>"},{"location":"ontology/url/","title":"Slot: url","text":"<p>An optional URL associated with this instance.</p> <p>URI: schema:url</p>"},{"location":"ontology/url/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot AiProvider A provider under the AI Act is defined by Article 3(3) as a natural or legal ... no RiskControl A measure that maintains and/or modifies risk (and risk concepts) no RiskTaxonomy A taxonomy of AI system related risks no Questionnaire A questionnaire groups questions no AiModelValidation AI model validation steps that have been performed after the model training t... no LargeLanguageModelFamily A large language model family is a set of models that are provided by the sam... no Entity A generic grouping for any identifiable entity no RiskConcept An umbrella term for refering to risk, risk source, consequence and impact no DataPreprocessing Data transformations, such as PI filtering, performed to ensure high quality ... no AiSystem A compound AI System composed of one or more AI capablities no LargeLanguageModel A large language model (LLM) is an AI model which supports a range of languag... no AiLifecyclePhase A Phase of AI lifecycle which indicates evolution of the system from concepti... no Dataset A body of structured information describing some topic(s) of interest no BaseAi Any type of AI, be it a LLM, RL agent, SVM, etc no Modality A modality supported by an Ai component no AiModel A base AI Model class no License The general notion of a license which defines terms and grants permissions to... no Question An evaluation where a question has to be answered no AiEval An AI Evaluation, e no AiAgent An artificial intelligence (AI) agent refers to a system or program that is c... no AiOffice The EU AI Office (https://digital-strategy no Organization Any organizational entity such as a corporation, educational institution, con... no RiskGroup A group of AI system related risks that are part of a risk taxonomy no Documentation Documented information about a concept or other topic(s) of interest no Action Action to remediate a risk no AiTask A task, such as summarization and classification, performed by an AI no AiEvalResult The result of an evaluation for a specific AI model no Risk The state of uncertainty associated with an AI system, that has the potential... no"},{"location":"ontology/url/#properties","title":"Properties","text":"<ul> <li>Range: Uri</li> </ul>"},{"location":"ontology/url/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/url/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/url/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:url native nexus:url"},{"location":"ontology/url/#linkml-source","title":"LinkML Source","text":"<pre><code>name: url\ndescription: An optional URL associated with this instance.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:url\nalias: url\ndomain_of:\n- Entity\nrange: uri\n</code></pre>"},{"location":"ontology/validated_by/","title":"Slot: validated_by","text":"<p>A relationship indicating the model validation steps after AI model training.</p> <p>URI: nexus:validated_by</p>"},{"location":"ontology/validated_by/#properties","title":"Properties","text":"<ul> <li> <p>Range: AiModelValidation</p> </li> <li> <p>Multivalued: True</p> </li> </ul>"},{"location":"ontology/validated_by/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/validated_by/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/validated_by/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:validated_by native nexus:validated_by"},{"location":"ontology/validated_by/#linkml-source","title":"LinkML Source","text":"<pre><code>name: validated_by\ndescription: A relationship indicating the model validation steps after AI model training.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: validated_by\nrange: AiModelValidation\nmultivalued: true\ninlined_as_list: true\n</code></pre>"},{"location":"ontology/value/","title":"Slot: value","text":"<p>Some numeric or string value</p> <p>URI: nexus:value</p>"},{"location":"ontology/value/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot Fact A fact about something, for example the result of a measurement no AiEvalResult The result of an evaluation for a specific AI model no"},{"location":"ontology/value/#properties","title":"Properties","text":"<ul> <li> <p>Range: String</p> </li> <li> <p>Required: True</p> </li> </ul>"},{"location":"ontology/value/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/value/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/value/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self nexus:value native nexus:value"},{"location":"ontology/value/#linkml-source","title":"LinkML Source","text":"<pre><code>name: value\ndescription: Some numeric or string value\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nalias: value\ndomain_of:\n- Fact\nrange: string\nrequired: true\n</code></pre>"},{"location":"ontology/version/","title":"Slot: version","text":"<p>The version of the entity embodied by a specified resource.</p> <p>URI: schema:version</p>"},{"location":"ontology/version/#applicable-classes","title":"Applicable Classes","text":"Name Description Modifies Slot RiskTaxonomy A taxonomy of AI system related risks no License The general notion of a license which defines terms and grants permissions to... no"},{"location":"ontology/version/#properties","title":"Properties","text":"<ul> <li>Range: String</li> </ul>"},{"location":"ontology/version/#identifier-and-mapping-information","title":"Identifier and Mapping Information","text":""},{"location":"ontology/version/#schema-source","title":"Schema Source","text":"<ul> <li>from schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology</li> </ul>"},{"location":"ontology/version/#mappings","title":"Mappings","text":"Mapping Type Mapped Value self schema:version native nexus:version"},{"location":"ontology/version/#linkml-source","title":"LinkML Source","text":"<pre><code>name: version\ndescription: The version of the entity embodied by a specified resource.\nfrom_schema: https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology\nrank: 1000\nslot_uri: schema:version\nalias: version\ndomain_of:\n- License\n- RiskTaxonomy\nrange: string\n</code></pre>"},{"location":"reference/","title":"Risk Atlas Nexus","text":"<p>This is an automatic generated API reference of the main components of Risk Atlas Nexus</p>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology","title":"ai_risk_ontology","text":"<p>Modules:</p> <ul> <li> <code>datamodel</code>           \u2013            </li> <li> <code>util</code>           \u2013            </li> </ul> <p>Classes:</p> <ul> <li> <code>Action</code>           \u2013            <p>Action to remediate a risk</p> </li> <li> <code>AiAgent</code>           \u2013            <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> </li> <li> <code>AiEval</code>           \u2013            <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> </li> <li> <code>AiEvalResult</code>           \u2013            <p>The result of an evaluation for a specific AI model.</p> </li> <li> <code>AiLifecyclePhase</code>           \u2013            <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> </li> <li> <code>AiModel</code>           \u2013            <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> </li> <li> <code>AiModelValidation</code>           \u2013            <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> </li> <li> <code>AiOffice</code>           \u2013            <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> </li> <li> <code>AiProvider</code>           \u2013            <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> </li> <li> <code>AiSystem</code>           \u2013            <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> </li> <li> <code>AiSystemType</code>           \u2013            </li> <li> <code>AiTask</code>           \u2013            <p>A task, such as summarization and classification, performed by an AI.</p> </li> <li> <code>BaseAi</code>           \u2013            <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> </li> <li> <code>ConfiguredBaseModel</code>           \u2013            </li> <li> <code>Container</code>           \u2013            <p>An umbrella object that holds the ontology class instances</p> </li> <li> <code>DataPreprocessing</code>           \u2013            <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> </li> <li> <code>Dataset</code>           \u2013            <p>A body of structured information describing some topic(s) of interest.</p> </li> <li> <code>Documentation</code>           \u2013            <p>Documented information about a concept or other topic(s) of interest.</p> </li> <li> <code>Entity</code>           \u2013            <p>A generic grouping for any identifiable entity.</p> </li> <li> <code>EuAiRiskCategory</code>           \u2013            </li> <li> <code>Fact</code>           \u2013            <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> </li> <li> <code>LargeLanguageModel</code>           \u2013            <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> </li> <li> <code>LargeLanguageModelFamily</code>           \u2013            <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> </li> <li> <code>License</code>           \u2013            <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> </li> <li> <code>LinkMLMeta</code>           \u2013            </li> <li> <code>Modality</code>           \u2013            <p>A modality supported by an Ai component. Examples include text, image, video.</p> </li> <li> <code>Organization</code>           \u2013            <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> </li> <li> <code>Question</code>           \u2013            <p>An evaluation where a question has to be answered</p> </li> <li> <code>Questionnaire</code>           \u2013            <p>A questionnaire groups questions</p> </li> <li> <code>Risk</code>           \u2013            <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> </li> <li> <code>RiskConcept</code>           \u2013            <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> </li> <li> <code>RiskControl</code>           \u2013            <p>A measure that maintains and/or modifies risk (and risk concepts)</p> </li> <li> <code>RiskGroup</code>           \u2013            <p>A group of AI system related risks that are part of a risk taxonomy.</p> </li> <li> <code>RiskTaxonomy</code>           \u2013            <p>A taxonomy of AI system related risks</p> </li> </ul> <p>Attributes:</p> <ul> <li> <code>linkml_meta</code>           \u2013            </li> <li> <code>metamodel_version</code>           \u2013            </li> <li> <code>version</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.linkml_meta","title":"linkml_meta  <code>module-attribute</code>","text":"<pre><code>linkml_meta = LinkMLMeta({'default_curi_maps': ['semweb_context'], 'default_prefix': 'nexus', 'default_range': 'string', 'description': 'An ontology describing AI systems and their risks', 'id': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'imports': ['linkml:types', 'common', 'ai_risk', 'ai_system', 'ai_eval'], 'license': 'https://www.apache.org/licenses/LICENSE-2.0.html', 'name': 'ai-risk-ontology', 'prefixes': {'airo': {'prefix_prefix': 'airo', 'prefix_reference': 'https://w3id.org/airo#'}, 'linkml': {'prefix_prefix': 'linkml', 'prefix_reference': 'https://w3id.org/linkml/'}, 'nexus': {'prefix_prefix': 'nexus', 'prefix_reference': 'https://ibm.github.io/risk-atlas-nexus/ontology/'}}, 'source_file': 'src/risk_atlas_nexus/ai_risk_ontology/schema/ai-risk-ontology.yaml'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.metamodel_version","title":"metamodel_version  <code>module-attribute</code>","text":"<pre><code>metamodel_version = 'None'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version = '0.5.0'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action","title":"Action","text":"<p>               Bases: <code>Entity</code></p> <p>Action to remediate a risk</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasAiActorTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.hasAiActorTask","title":"hasAiActorTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasAiActorTask: Optional[List[str]] = Field(default=None, description='Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).', json_schema_extra={'linkml_meta': {'alias': 'hasAiActorTask', 'domain_of': ['Action']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Action.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent","title":"AiAgent","text":"<p>               Bases: <code>AiSystem</code></p> <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI agent has been provided by an AI systems provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isProvidedBy': {'description': 'A relationship indicating the AI agent has been provided by an AI systems provider.', 'name': 'isProvidedBy'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiAgent.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval","title":"AiEval","text":"<p>               Bases: <code>Entity</code></p> <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:Metric', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'isComposedOf': {'description': \"A relationship indicating that an AI evaluation maybe composed of other AI evaluations (e.g. it's an overall average of other scores).\", 'name': 'isComposedOf', 'range': 'AiEval'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEval.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult","title":"AiEvalResult","text":"<p>               Bases: <code>Fact</code>, <code>Entity</code></p> <p>The result of an evaluation for a specific AI model.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isResultOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.isResultOf","title":"isResultOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isResultOf: Optional[str] = Field(default=None, description='A relationship indicating that an entity is the result of an AI evaluation.', json_schema_extra={'linkml_meta': {'alias': 'isResultOf', 'domain_of': ['AiEvalResult'], 'slot_uri': 'dqv:isMeasurementOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:QualityMeasurement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'mixins': ['Fact']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiEvalResult.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase","title":"AiLifecyclePhase","text":"<p>               Bases: <code>Entity</code></p> <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'airo:AILifecyclePhase', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiLifecyclePhase.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel","title":"AiModel","text":"<p>               Bases: <code>BaseAi</code></p> <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation","title":"AiModelValidation","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiModelValidation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice","title":"AiOffice","text":"<p>               Bases: <code>Organization</code></p> <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/eu_ai_act'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiOffice.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider","title":"AiProvider","text":"<p>               Bases: <code>Organization</code></p> <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AIProvider', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiProvider.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem","title":"AiSystem","text":"<p>               Bases: <code>BaseAi</code></p> <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AISystem', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isComposedOf': {'description': 'Relationship indicating the AI components from which a complete AI system is composed.', 'name': 'isComposedOf', 'range': 'BaseAi'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystem.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType","title":"AiSystemType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>GPAI</code>           \u2013            </li> <li> <code>GPAI_OS</code>           \u2013            </li> <li> <code>HIGH_RISK</code>           \u2013            </li> <li> <code>MILITARY_SECURITY</code>           \u2013            </li> <li> <code>PROHIBITED</code>           \u2013            </li> <li> <code>SCIENTIFIC_RD</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.GPAI","title":"GPAI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI = 'GPAI'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.GPAI_OS","title":"GPAI_OS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI_OS = 'GPAI_OS'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.HIGH_RISK","title":"HIGH_RISK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH_RISK = 'HIGH_RISK'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.MILITARY_SECURITY","title":"MILITARY_SECURITY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MILITARY_SECURITY = 'MILITARY_SECURITY'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.PROHIBITED","title":"PROHIBITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PROHIBITED = 'PROHIBITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiSystemType.SCIENTIFIC_RD","title":"SCIENTIFIC_RD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SCIENTIFIC_RD = 'SCIENTIFIC_RD'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask","title":"AiTask","text":"<p>               Bases: <code>Entity</code></p> <p>A task, such as summarization and classification, performed by an AI.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AiCapability', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.AiTask.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi","title":"BaseAi","text":"<p>               Bases: <code>Entity</code></p> <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.BaseAi.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.ConfiguredBaseModel","title":"ConfiguredBaseModel","text":"<p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.ConfiguredBaseModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container","title":"Container","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>An umbrella object that holds the ontology class instances</p> <p>Attributes:</p> <ul> <li> <code>actions</code>               (<code>Optional[List[Action]]</code>)           \u2013            </li> <li> <code>aimodelfamilies</code>               (<code>Optional[List[LargeLanguageModelFamily]]</code>)           \u2013            </li> <li> <code>aimodels</code>               (<code>Optional[List[LargeLanguageModel]]</code>)           \u2013            </li> <li> <code>aitasks</code>               (<code>Optional[List[AiTask]]</code>)           \u2013            </li> <li> <code>datasets</code>               (<code>Optional[List[Dataset]]</code>)           \u2013            </li> <li> <code>documents</code>               (<code>Optional[List[Documentation]]</code>)           \u2013            </li> <li> <code>evaluations</code>               (<code>Optional[List[AiEval]]</code>)           \u2013            </li> <li> <code>licenses</code>               (<code>Optional[List[License]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>modalities</code>               (<code>Optional[List[Modality]]</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>organizations</code>               (<code>Optional[List[Organization]]</code>)           \u2013            </li> <li> <code>riskcontrols</code>               (<code>Optional[List[RiskControl]]</code>)           \u2013            </li> <li> <code>riskgroups</code>               (<code>Optional[List[RiskGroup]]</code>)           \u2013            </li> <li> <code>risks</code>               (<code>Optional[List[Risk]]</code>)           \u2013            </li> <li> <code>taxonomies</code>               (<code>Optional[List[RiskTaxonomy]]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: Optional[List[Action]] = Field(default=None, description='A list of risk related actions', json_schema_extra={'linkml_meta': {'alias': 'actions', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.aimodelfamilies","title":"aimodelfamilies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodelfamilies: Optional[List[LargeLanguageModelFamily]] = Field(default=None, description='A list of AI model families', json_schema_extra={'linkml_meta': {'alias': 'aimodelfamilies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.aimodels","title":"aimodels  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodels: Optional[List[LargeLanguageModel]] = Field(default=None, description='A list of AI models', json_schema_extra={'linkml_meta': {'alias': 'aimodels', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.aitasks","title":"aitasks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aitasks: Optional[List[AiTask]] = Field(default=None, description='A list of AI tasks', json_schema_extra={'linkml_meta': {'alias': 'aitasks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.datasets","title":"datasets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>datasets: Optional[List[Dataset]] = Field(default=None, description='A list of data sets', json_schema_extra={'linkml_meta': {'alias': 'datasets', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.documents","title":"documents  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>documents: Optional[List[Documentation]] = Field(default=None, description='A list of documents', json_schema_extra={'linkml_meta': {'alias': 'documents', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.evaluations","title":"evaluations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evaluations: Optional[List[AiEval]] = Field(default=None, description='A list of AI evaluation methods', json_schema_extra={'linkml_meta': {'alias': 'evaluations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.licenses","title":"licenses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>licenses: Optional[List[License]] = Field(default=None, description='A list of licenses', json_schema_extra={'linkml_meta': {'alias': 'licenses', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'tree_root': True})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.modalities","title":"modalities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>modalities: Optional[List[Modality]] = Field(default=None, description='A list of AI modalities', json_schema_extra={'linkml_meta': {'alias': 'modalities', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.organizations","title":"organizations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>organizations: Optional[List[Organization]] = Field(default=None, description='A list of organizations', json_schema_extra={'linkml_meta': {'alias': 'organizations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.riskcontrols","title":"riskcontrols  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskcontrols: Optional[List[RiskControl]] = Field(default=None, description='A list of AI risk controls', json_schema_extra={'linkml_meta': {'alias': 'riskcontrols', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.riskgroups","title":"riskgroups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskgroups: Optional[List[RiskGroup]] = Field(default=None, description='A list of AI risk groups', json_schema_extra={'linkml_meta': {'alias': 'riskgroups', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.risks","title":"risks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>risks: Optional[List[Risk]] = Field(default=None, description='A list of AI risks', json_schema_extra={'linkml_meta': {'alias': 'risks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Container.taxonomies","title":"taxonomies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>taxonomies: Optional[List[RiskTaxonomy]] = Field(default=None, description='A list of AI risk taxonomies', json_schema_extra={'linkml_meta': {'alias': 'taxonomies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing","title":"DataPreprocessing","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.DataPreprocessing.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset","title":"Dataset","text":"<p>               Bases: <code>Entity</code></p> <p>A body of structured information describing some topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>provider</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Dataset', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.provider","title":"provider  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>provider: Optional[str] = Field(default=None, description='A relationship to the Organization instance that provides this instance.', json_schema_extra={'linkml_meta': {'alias': 'provider', 'domain_of': ['Dataset'], 'slot_uri': 'schema:provider'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Dataset.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation","title":"Documentation","text":"<p>               Bases: <code>Entity</code></p> <p>Documented information about a concept or other topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Documentation', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Documentation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity","title":"Entity","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A generic grouping for any identifiable entity.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Thing', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Entity.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.EuAiRiskCategory","title":"EuAiRiskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>HIGH</code>           \u2013            </li> <li> <code>LIMITED</code>           \u2013            </li> <li> <code>MINIMAL</code>           \u2013            </li> <li> <code>UNACCEPTABLE</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.EuAiRiskCategory.HIGH","title":"HIGH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH = 'HIGH'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.EuAiRiskCategory.LIMITED","title":"LIMITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMITED = 'LIMITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.EuAiRiskCategory.MINIMAL","title":"MINIMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MINIMAL = 'MINIMAL'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.EuAiRiskCategory.UNACCEPTABLE","title":"UNACCEPTABLE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNACCEPTABLE = 'UNACCEPTABLE'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Fact","title":"Fact","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <p>Attributes:</p> <ul> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Fact.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Fact.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Statement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Fact.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Fact.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel","title":"LargeLanguageModel","text":"<p>               Bases: <code>AiModel</code></p> <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>contextWindowSize</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>fine_tuning</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasInputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasOutputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasTrainingData</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>numParameters</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>numTrainingTokens</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>supported_languages</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.contextWindowSize","title":"contextWindowSize  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contextWindowSize: Optional[int] = Field(default=None, description=\"The total length, in bytes, of an AI model's context window.\", ge=0, json_schema_extra={'linkml_meta': {'alias': 'contextWindowSize', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.fine_tuning","title":"fine_tuning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fine_tuning: Optional[str] = Field(default=None, description='A description of the fine-tuning mechanism(s) applied to a model.', json_schema_extra={'linkml_meta': {'alias': 'fine_tuning', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasInputModality","title":"hasInputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasInputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasInputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasOutputModality","title":"hasOutputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasOutputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasOutputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.hasTrainingData","title":"hasTrainingData  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasTrainingData: Optional[List[str]] = Field(default=None, description='A relationship indicating the datasets an AI model was trained on.', json_schema_extra={'linkml_meta': {'alias': 'hasTrainingData', 'domain_of': ['LargeLanguageModel'], 'slot_uri': 'airo:hasTrainingData'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='Annotation that a Large Language model is part of a family of models', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'aliases': ['LLM'], 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isPartOf': {'description': 'Annotation that a Large Language model is part of a family of models', 'name': 'isPartOf', 'range': 'LargeLanguageModelFamily'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.numParameters","title":"numParameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numParameters: Optional[int] = Field(default=None, description='A property indicating the number of parameters in a LLM.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numParameters', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.numTrainingTokens","title":"numTrainingTokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numTrainingTokens: Optional[int] = Field(default=None, description='The number of tokens a AI model was trained on.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numTrainingTokens', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.supported_languages","title":"supported_languages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_languages: Optional[List[str]] = Field(default=None, description=\"A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'\", json_schema_extra={'linkml_meta': {'alias': 'supported_languages', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily","title":"LargeLanguageModelFamily","text":"<p>               Bases: <code>Entity</code></p> <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LargeLanguageModelFamily.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License","title":"License","text":"<p>               Bases: <code>Entity</code></p> <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:License', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.License.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LinkMLMeta","title":"LinkMLMeta","text":"<p>               Bases: <code>RootModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> <li> <code>root</code>               (<code>Dict[str, Any]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LinkMLMeta.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.LinkMLMeta.root","title":"root  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>root: Dict[str, Any] = {}\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality","title":"Modality","text":"<p>               Bases: <code>Entity</code></p> <p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Modality', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Modality.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization","title":"Organization","text":"<p>               Bases: <code>Entity</code></p> <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Organization.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question","title":"Question","text":"<p>               Bases: <code>AiEval</code></p> <p>An evaluation where a question has to be answered</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>text</code>               (<code>str</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: str = Field(default=..., description='The question itself', json_schema_extra={'linkml_meta': {'alias': 'text', 'domain_of': ['Question']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Question.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire","title":"Questionnaire","text":"<p>               Bases: <code>AiEval</code></p> <p>A questionnaire groups questions</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'composed_of': {'name': 'composed_of', 'range': 'Question'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Questionnaire.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk","title":"Risk","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>concern</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>descriptor</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedAction</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>phase</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>tag</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>type</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.concern","title":"concern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>concern: Optional[str] = Field(default=None, description='Some explanation about the concern related to an AI risk', json_schema_extra={'linkml_meta': {'alias': 'concern', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.descriptor","title":"descriptor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>descriptor: Optional[str] = Field(default=None, description='Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.', json_schema_extra={'linkml_meta': {'alias': 'descriptor', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.hasRelatedAction","title":"hasRelatedAction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedAction: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to an action', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedAction', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='A relationship where a risk is part of a risk group', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Risk', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'isPartOf': {'description': 'A relationship where a risk is part of a risk group', 'name': 'isPartOf', 'range': 'RiskGroup'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.phase","title":"phase  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>phase: Optional[str] = Field(default=None, description='Annotation whether an AI risk shows specifically during the training-tuning or inference phase.', json_schema_extra={'linkml_meta': {'alias': 'phase', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.tag","title":"tag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tag: Optional[str] = Field(default=None, description='A shost version of the name', json_schema_extra={'linkml_meta': {'alias': 'tag', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Optional[str] = Field(default=None, description='Annotation whether an AI risk occurs at input or output or is non-technical.', json_schema_extra={'linkml_meta': {'alias': 'type', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.Risk.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept","title":"RiskConcept","text":"<p>               Bases: <code>Entity</code></p> <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskConcept', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskConcept.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl","title":"RiskControl","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskControl', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskControl.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup","title":"RiskGroup","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasPart</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.hasPart","title":"hasPart  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasPart: Optional[List[str]] = Field(default=None, description='A relationship where a riskgroup has a risk', json_schema_extra={'linkml_meta': {'alias': 'hasPart', 'domain_of': ['RiskGroup'], 'slot_uri': 'schema:hasPart'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'hasPart': {'description': 'A relationship where a riskgroup has a risk', 'name': 'hasPart', 'range': 'Risk'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskGroup.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy","title":"RiskTaxonomy","text":"<p>               Bases: <code>Entity</code></p> <p>A taxonomy of AI system related risks</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.RiskTaxonomy.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel","title":"datamodel","text":"<p>Modules:</p> <ul> <li> <code>ai_risk_ontology</code>           \u2013            </li> </ul> <p>Classes:</p> <ul> <li> <code>Action</code>           \u2013            <p>Action to remediate a risk</p> </li> <li> <code>AiAgent</code>           \u2013            <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> </li> <li> <code>AiEval</code>           \u2013            <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> </li> <li> <code>AiEvalResult</code>           \u2013            <p>The result of an evaluation for a specific AI model.</p> </li> <li> <code>AiLifecyclePhase</code>           \u2013            <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> </li> <li> <code>AiModel</code>           \u2013            <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> </li> <li> <code>AiModelValidation</code>           \u2013            <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> </li> <li> <code>AiOffice</code>           \u2013            <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> </li> <li> <code>AiProvider</code>           \u2013            <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> </li> <li> <code>AiSystem</code>           \u2013            <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> </li> <li> <code>AiSystemType</code>           \u2013            </li> <li> <code>AiTask</code>           \u2013            <p>A task, such as summarization and classification, performed by an AI.</p> </li> <li> <code>BaseAi</code>           \u2013            <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> </li> <li> <code>ConfiguredBaseModel</code>           \u2013            </li> <li> <code>Container</code>           \u2013            <p>An umbrella object that holds the ontology class instances</p> </li> <li> <code>DataPreprocessing</code>           \u2013            <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> </li> <li> <code>Dataset</code>           \u2013            <p>A body of structured information describing some topic(s) of interest.</p> </li> <li> <code>Documentation</code>           \u2013            <p>Documented information about a concept or other topic(s) of interest.</p> </li> <li> <code>Entity</code>           \u2013            <p>A generic grouping for any identifiable entity.</p> </li> <li> <code>EuAiRiskCategory</code>           \u2013            </li> <li> <code>Fact</code>           \u2013            <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> </li> <li> <code>LargeLanguageModel</code>           \u2013            <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> </li> <li> <code>LargeLanguageModelFamily</code>           \u2013            <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> </li> <li> <code>License</code>           \u2013            <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> </li> <li> <code>LinkMLMeta</code>           \u2013            </li> <li> <code>Modality</code>           \u2013            <p>A modality supported by an Ai component. Examples include text, image, video.</p> </li> <li> <code>Organization</code>           \u2013            <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> </li> <li> <code>Question</code>           \u2013            <p>An evaluation where a question has to be answered</p> </li> <li> <code>Questionnaire</code>           \u2013            <p>A questionnaire groups questions</p> </li> <li> <code>Risk</code>           \u2013            <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> </li> <li> <code>RiskConcept</code>           \u2013            <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> </li> <li> <code>RiskControl</code>           \u2013            <p>A measure that maintains and/or modifies risk (and risk concepts)</p> </li> <li> <code>RiskGroup</code>           \u2013            <p>A group of AI system related risks that are part of a risk taxonomy.</p> </li> <li> <code>RiskTaxonomy</code>           \u2013            <p>A taxonomy of AI system related risks</p> </li> </ul> <p>Attributes:</p> <ul> <li> <code>MAIN_SCHEMA_PATH</code>           \u2013            </li> <li> <code>SCHEMA_DIRECTORY</code>           \u2013            </li> <li> <code>THIS_PATH</code>           \u2013            </li> <li> <code>linkml_meta</code>           \u2013            </li> <li> <code>metamodel_version</code>           \u2013            </li> <li> <code>version</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.MAIN_SCHEMA_PATH","title":"MAIN_SCHEMA_PATH  <code>module-attribute</code>","text":"<pre><code>MAIN_SCHEMA_PATH = SCHEMA_DIRECTORY / 'ai_risk_ontology.yaml'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.SCHEMA_DIRECTORY","title":"SCHEMA_DIRECTORY  <code>module-attribute</code>","text":"<pre><code>SCHEMA_DIRECTORY = parent / 'schema'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.THIS_PATH","title":"THIS_PATH  <code>module-attribute</code>","text":"<pre><code>THIS_PATH = parent\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.linkml_meta","title":"linkml_meta  <code>module-attribute</code>","text":"<pre><code>linkml_meta = LinkMLMeta({'default_curi_maps': ['semweb_context'], 'default_prefix': 'nexus', 'default_range': 'string', 'description': 'An ontology describing AI systems and their risks', 'id': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'imports': ['linkml:types', 'common', 'ai_risk', 'ai_system', 'ai_eval'], 'license': 'https://www.apache.org/licenses/LICENSE-2.0.html', 'name': 'ai-risk-ontology', 'prefixes': {'airo': {'prefix_prefix': 'airo', 'prefix_reference': 'https://w3id.org/airo#'}, 'linkml': {'prefix_prefix': 'linkml', 'prefix_reference': 'https://w3id.org/linkml/'}, 'nexus': {'prefix_prefix': 'nexus', 'prefix_reference': 'https://ibm.github.io/risk-atlas-nexus/ontology/'}}, 'source_file': 'src/risk_atlas_nexus/ai_risk_ontology/schema/ai-risk-ontology.yaml'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.metamodel_version","title":"metamodel_version  <code>module-attribute</code>","text":"<pre><code>metamodel_version = 'None'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version = '0.5.0'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action","title":"Action","text":"<p>               Bases: <code>Entity</code></p> <p>Action to remediate a risk</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasAiActorTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.hasAiActorTask","title":"hasAiActorTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasAiActorTask: Optional[List[str]] = Field(default=None, description='Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).', json_schema_extra={'linkml_meta': {'alias': 'hasAiActorTask', 'domain_of': ['Action']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Action.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent","title":"AiAgent","text":"<p>               Bases: <code>AiSystem</code></p> <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI agent has been provided by an AI systems provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isProvidedBy': {'description': 'A relationship indicating the AI agent has been provided by an AI systems provider.', 'name': 'isProvidedBy'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiAgent.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval","title":"AiEval","text":"<p>               Bases: <code>Entity</code></p> <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:Metric', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'isComposedOf': {'description': \"A relationship indicating that an AI evaluation maybe composed of other AI evaluations (e.g. it's an overall average of other scores).\", 'name': 'isComposedOf', 'range': 'AiEval'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEval.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult","title":"AiEvalResult","text":"<p>               Bases: <code>Fact</code>, <code>Entity</code></p> <p>The result of an evaluation for a specific AI model.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isResultOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.isResultOf","title":"isResultOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isResultOf: Optional[str] = Field(default=None, description='A relationship indicating that an entity is the result of an AI evaluation.', json_schema_extra={'linkml_meta': {'alias': 'isResultOf', 'domain_of': ['AiEvalResult'], 'slot_uri': 'dqv:isMeasurementOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:QualityMeasurement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'mixins': ['Fact']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiEvalResult.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase","title":"AiLifecyclePhase","text":"<p>               Bases: <code>Entity</code></p> <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'airo:AILifecyclePhase', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiLifecyclePhase.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel","title":"AiModel","text":"<p>               Bases: <code>BaseAi</code></p> <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation","title":"AiModelValidation","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiModelValidation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice","title":"AiOffice","text":"<p>               Bases: <code>Organization</code></p> <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/eu_ai_act'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiOffice.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider","title":"AiProvider","text":"<p>               Bases: <code>Organization</code></p> <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AIProvider', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiProvider.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem","title":"AiSystem","text":"<p>               Bases: <code>BaseAi</code></p> <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AISystem', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isComposedOf': {'description': 'Relationship indicating the AI components from which a complete AI system is composed.', 'name': 'isComposedOf', 'range': 'BaseAi'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystem.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType","title":"AiSystemType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>GPAI</code>           \u2013            </li> <li> <code>GPAI_OS</code>           \u2013            </li> <li> <code>HIGH_RISK</code>           \u2013            </li> <li> <code>MILITARY_SECURITY</code>           \u2013            </li> <li> <code>PROHIBITED</code>           \u2013            </li> <li> <code>SCIENTIFIC_RD</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.GPAI","title":"GPAI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI = 'GPAI'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.GPAI_OS","title":"GPAI_OS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI_OS = 'GPAI_OS'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.HIGH_RISK","title":"HIGH_RISK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH_RISK = 'HIGH_RISK'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.MILITARY_SECURITY","title":"MILITARY_SECURITY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MILITARY_SECURITY = 'MILITARY_SECURITY'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.PROHIBITED","title":"PROHIBITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PROHIBITED = 'PROHIBITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiSystemType.SCIENTIFIC_RD","title":"SCIENTIFIC_RD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SCIENTIFIC_RD = 'SCIENTIFIC_RD'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask","title":"AiTask","text":"<p>               Bases: <code>Entity</code></p> <p>A task, such as summarization and classification, performed by an AI.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AiCapability', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.AiTask.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi","title":"BaseAi","text":"<p>               Bases: <code>Entity</code></p> <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.BaseAi.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ConfiguredBaseModel","title":"ConfiguredBaseModel","text":"<p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ConfiguredBaseModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container","title":"Container","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>An umbrella object that holds the ontology class instances</p> <p>Attributes:</p> <ul> <li> <code>actions</code>               (<code>Optional[List[Action]]</code>)           \u2013            </li> <li> <code>aimodelfamilies</code>               (<code>Optional[List[LargeLanguageModelFamily]]</code>)           \u2013            </li> <li> <code>aimodels</code>               (<code>Optional[List[LargeLanguageModel]]</code>)           \u2013            </li> <li> <code>aitasks</code>               (<code>Optional[List[AiTask]]</code>)           \u2013            </li> <li> <code>datasets</code>               (<code>Optional[List[Dataset]]</code>)           \u2013            </li> <li> <code>documents</code>               (<code>Optional[List[Documentation]]</code>)           \u2013            </li> <li> <code>evaluations</code>               (<code>Optional[List[AiEval]]</code>)           \u2013            </li> <li> <code>licenses</code>               (<code>Optional[List[License]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>modalities</code>               (<code>Optional[List[Modality]]</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>organizations</code>               (<code>Optional[List[Organization]]</code>)           \u2013            </li> <li> <code>riskcontrols</code>               (<code>Optional[List[RiskControl]]</code>)           \u2013            </li> <li> <code>riskgroups</code>               (<code>Optional[List[RiskGroup]]</code>)           \u2013            </li> <li> <code>risks</code>               (<code>Optional[List[Risk]]</code>)           \u2013            </li> <li> <code>taxonomies</code>               (<code>Optional[List[RiskTaxonomy]]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: Optional[List[Action]] = Field(default=None, description='A list of risk related actions', json_schema_extra={'linkml_meta': {'alias': 'actions', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.aimodelfamilies","title":"aimodelfamilies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodelfamilies: Optional[List[LargeLanguageModelFamily]] = Field(default=None, description='A list of AI model families', json_schema_extra={'linkml_meta': {'alias': 'aimodelfamilies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.aimodels","title":"aimodels  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodels: Optional[List[LargeLanguageModel]] = Field(default=None, description='A list of AI models', json_schema_extra={'linkml_meta': {'alias': 'aimodels', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.aitasks","title":"aitasks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aitasks: Optional[List[AiTask]] = Field(default=None, description='A list of AI tasks', json_schema_extra={'linkml_meta': {'alias': 'aitasks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.datasets","title":"datasets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>datasets: Optional[List[Dataset]] = Field(default=None, description='A list of data sets', json_schema_extra={'linkml_meta': {'alias': 'datasets', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.documents","title":"documents  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>documents: Optional[List[Documentation]] = Field(default=None, description='A list of documents', json_schema_extra={'linkml_meta': {'alias': 'documents', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.evaluations","title":"evaluations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evaluations: Optional[List[AiEval]] = Field(default=None, description='A list of AI evaluation methods', json_schema_extra={'linkml_meta': {'alias': 'evaluations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.licenses","title":"licenses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>licenses: Optional[List[License]] = Field(default=None, description='A list of licenses', json_schema_extra={'linkml_meta': {'alias': 'licenses', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'tree_root': True})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.modalities","title":"modalities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>modalities: Optional[List[Modality]] = Field(default=None, description='A list of AI modalities', json_schema_extra={'linkml_meta': {'alias': 'modalities', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.organizations","title":"organizations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>organizations: Optional[List[Organization]] = Field(default=None, description='A list of organizations', json_schema_extra={'linkml_meta': {'alias': 'organizations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.riskcontrols","title":"riskcontrols  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskcontrols: Optional[List[RiskControl]] = Field(default=None, description='A list of AI risk controls', json_schema_extra={'linkml_meta': {'alias': 'riskcontrols', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.riskgroups","title":"riskgroups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskgroups: Optional[List[RiskGroup]] = Field(default=None, description='A list of AI risk groups', json_schema_extra={'linkml_meta': {'alias': 'riskgroups', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.risks","title":"risks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>risks: Optional[List[Risk]] = Field(default=None, description='A list of AI risks', json_schema_extra={'linkml_meta': {'alias': 'risks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Container.taxonomies","title":"taxonomies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>taxonomies: Optional[List[RiskTaxonomy]] = Field(default=None, description='A list of AI risk taxonomies', json_schema_extra={'linkml_meta': {'alias': 'taxonomies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing","title":"DataPreprocessing","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.DataPreprocessing.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset","title":"Dataset","text":"<p>               Bases: <code>Entity</code></p> <p>A body of structured information describing some topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>provider</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Dataset', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.provider","title":"provider  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>provider: Optional[str] = Field(default=None, description='A relationship to the Organization instance that provides this instance.', json_schema_extra={'linkml_meta': {'alias': 'provider', 'domain_of': ['Dataset'], 'slot_uri': 'schema:provider'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Dataset.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation","title":"Documentation","text":"<p>               Bases: <code>Entity</code></p> <p>Documented information about a concept or other topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Documentation', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Documentation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity","title":"Entity","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A generic grouping for any identifiable entity.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Thing', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Entity.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.EuAiRiskCategory","title":"EuAiRiskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>HIGH</code>           \u2013            </li> <li> <code>LIMITED</code>           \u2013            </li> <li> <code>MINIMAL</code>           \u2013            </li> <li> <code>UNACCEPTABLE</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.EuAiRiskCategory.HIGH","title":"HIGH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH = 'HIGH'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.EuAiRiskCategory.LIMITED","title":"LIMITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMITED = 'LIMITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.EuAiRiskCategory.MINIMAL","title":"MINIMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MINIMAL = 'MINIMAL'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.EuAiRiskCategory.UNACCEPTABLE","title":"UNACCEPTABLE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNACCEPTABLE = 'UNACCEPTABLE'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Fact","title":"Fact","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <p>Attributes:</p> <ul> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Fact.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Fact.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Statement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Fact.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Fact.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel","title":"LargeLanguageModel","text":"<p>               Bases: <code>AiModel</code></p> <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>contextWindowSize</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>fine_tuning</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasInputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasOutputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasTrainingData</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>numParameters</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>numTrainingTokens</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>supported_languages</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.contextWindowSize","title":"contextWindowSize  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contextWindowSize: Optional[int] = Field(default=None, description=\"The total length, in bytes, of an AI model's context window.\", ge=0, json_schema_extra={'linkml_meta': {'alias': 'contextWindowSize', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.fine_tuning","title":"fine_tuning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fine_tuning: Optional[str] = Field(default=None, description='A description of the fine-tuning mechanism(s) applied to a model.', json_schema_extra={'linkml_meta': {'alias': 'fine_tuning', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasInputModality","title":"hasInputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasInputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasInputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasOutputModality","title":"hasOutputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasOutputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasOutputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.hasTrainingData","title":"hasTrainingData  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasTrainingData: Optional[List[str]] = Field(default=None, description='A relationship indicating the datasets an AI model was trained on.', json_schema_extra={'linkml_meta': {'alias': 'hasTrainingData', 'domain_of': ['LargeLanguageModel'], 'slot_uri': 'airo:hasTrainingData'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='Annotation that a Large Language model is part of a family of models', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'aliases': ['LLM'], 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isPartOf': {'description': 'Annotation that a Large Language model is part of a family of models', 'name': 'isPartOf', 'range': 'LargeLanguageModelFamily'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.numParameters","title":"numParameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numParameters: Optional[int] = Field(default=None, description='A property indicating the number of parameters in a LLM.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numParameters', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.numTrainingTokens","title":"numTrainingTokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numTrainingTokens: Optional[int] = Field(default=None, description='The number of tokens a AI model was trained on.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numTrainingTokens', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.supported_languages","title":"supported_languages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_languages: Optional[List[str]] = Field(default=None, description=\"A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'\", json_schema_extra={'linkml_meta': {'alias': 'supported_languages', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily","title":"LargeLanguageModelFamily","text":"<p>               Bases: <code>Entity</code></p> <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LargeLanguageModelFamily.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License","title":"License","text":"<p>               Bases: <code>Entity</code></p> <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:License', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.License.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LinkMLMeta","title":"LinkMLMeta","text":"<p>               Bases: <code>RootModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> <li> <code>root</code>               (<code>Dict[str, Any]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LinkMLMeta.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.LinkMLMeta.root","title":"root  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>root: Dict[str, Any] = {}\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality","title":"Modality","text":"<p>               Bases: <code>Entity</code></p> <p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Modality', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Modality.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization","title":"Organization","text":"<p>               Bases: <code>Entity</code></p> <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Organization.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question","title":"Question","text":"<p>               Bases: <code>AiEval</code></p> <p>An evaluation where a question has to be answered</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>text</code>               (<code>str</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: str = Field(default=..., description='The question itself', json_schema_extra={'linkml_meta': {'alias': 'text', 'domain_of': ['Question']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Question.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire","title":"Questionnaire","text":"<p>               Bases: <code>AiEval</code></p> <p>A questionnaire groups questions</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'composed_of': {'name': 'composed_of', 'range': 'Question'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Questionnaire.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk","title":"Risk","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>concern</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>descriptor</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedAction</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>phase</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>tag</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>type</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.concern","title":"concern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>concern: Optional[str] = Field(default=None, description='Some explanation about the concern related to an AI risk', json_schema_extra={'linkml_meta': {'alias': 'concern', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.descriptor","title":"descriptor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>descriptor: Optional[str] = Field(default=None, description='Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.', json_schema_extra={'linkml_meta': {'alias': 'descriptor', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.hasRelatedAction","title":"hasRelatedAction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedAction: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to an action', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedAction', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='A relationship where a risk is part of a risk group', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Risk', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'isPartOf': {'description': 'A relationship where a risk is part of a risk group', 'name': 'isPartOf', 'range': 'RiskGroup'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.phase","title":"phase  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>phase: Optional[str] = Field(default=None, description='Annotation whether an AI risk shows specifically during the training-tuning or inference phase.', json_schema_extra={'linkml_meta': {'alias': 'phase', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.tag","title":"tag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tag: Optional[str] = Field(default=None, description='A shost version of the name', json_schema_extra={'linkml_meta': {'alias': 'tag', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Optional[str] = Field(default=None, description='Annotation whether an AI risk occurs at input or output or is non-technical.', json_schema_extra={'linkml_meta': {'alias': 'type', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.Risk.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept","title":"RiskConcept","text":"<p>               Bases: <code>Entity</code></p> <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskConcept', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskConcept.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl","title":"RiskControl","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskControl', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskControl.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup","title":"RiskGroup","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasPart</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.hasPart","title":"hasPart  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasPart: Optional[List[str]] = Field(default=None, description='A relationship where a riskgroup has a risk', json_schema_extra={'linkml_meta': {'alias': 'hasPart', 'domain_of': ['RiskGroup'], 'slot_uri': 'schema:hasPart'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'hasPart': {'description': 'A relationship where a riskgroup has a risk', 'name': 'hasPart', 'range': 'Risk'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskGroup.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy","title":"RiskTaxonomy","text":"<p>               Bases: <code>Entity</code></p> <p>A taxonomy of AI system related risks</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.RiskTaxonomy.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology","title":"ai_risk_ontology","text":"<p>Classes:</p> <ul> <li> <code>Action</code>           \u2013            <p>Action to remediate a risk</p> </li> <li> <code>AiAgent</code>           \u2013            <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> </li> <li> <code>AiEval</code>           \u2013            <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> </li> <li> <code>AiEvalResult</code>           \u2013            <p>The result of an evaluation for a specific AI model.</p> </li> <li> <code>AiLifecyclePhase</code>           \u2013            <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> </li> <li> <code>AiModel</code>           \u2013            <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> </li> <li> <code>AiModelValidation</code>           \u2013            <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> </li> <li> <code>AiOffice</code>           \u2013            <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> </li> <li> <code>AiProvider</code>           \u2013            <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> </li> <li> <code>AiSystem</code>           \u2013            <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> </li> <li> <code>AiSystemType</code>           \u2013            </li> <li> <code>AiTask</code>           \u2013            <p>A task, such as summarization and classification, performed by an AI.</p> </li> <li> <code>BaseAi</code>           \u2013            <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> </li> <li> <code>ConfiguredBaseModel</code>           \u2013            </li> <li> <code>Container</code>           \u2013            <p>An umbrella object that holds the ontology class instances</p> </li> <li> <code>DataPreprocessing</code>           \u2013            <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> </li> <li> <code>Dataset</code>           \u2013            <p>A body of structured information describing some topic(s) of interest.</p> </li> <li> <code>Documentation</code>           \u2013            <p>Documented information about a concept or other topic(s) of interest.</p> </li> <li> <code>Entity</code>           \u2013            <p>A generic grouping for any identifiable entity.</p> </li> <li> <code>EuAiRiskCategory</code>           \u2013            </li> <li> <code>Fact</code>           \u2013            <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> </li> <li> <code>LargeLanguageModel</code>           \u2013            <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> </li> <li> <code>LargeLanguageModelFamily</code>           \u2013            <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> </li> <li> <code>License</code>           \u2013            <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> </li> <li> <code>LinkMLMeta</code>           \u2013            </li> <li> <code>Modality</code>           \u2013            <p>A modality supported by an Ai component. Examples include text, image, video.</p> </li> <li> <code>Organization</code>           \u2013            <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> </li> <li> <code>Question</code>           \u2013            <p>An evaluation where a question has to be answered</p> </li> <li> <code>Questionnaire</code>           \u2013            <p>A questionnaire groups questions</p> </li> <li> <code>Risk</code>           \u2013            <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> </li> <li> <code>RiskConcept</code>           \u2013            <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> </li> <li> <code>RiskControl</code>           \u2013            <p>A measure that maintains and/or modifies risk (and risk concepts)</p> </li> <li> <code>RiskGroup</code>           \u2013            <p>A group of AI system related risks that are part of a risk taxonomy.</p> </li> <li> <code>RiskTaxonomy</code>           \u2013            <p>A taxonomy of AI system related risks</p> </li> </ul> <p>Attributes:</p> <ul> <li> <code>linkml_meta</code>           \u2013            </li> <li> <code>metamodel_version</code>           \u2013            </li> <li> <code>version</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.linkml_meta","title":"linkml_meta  <code>module-attribute</code>","text":"<pre><code>linkml_meta = LinkMLMeta({'default_curi_maps': ['semweb_context'], 'default_prefix': 'nexus', 'default_range': 'string', 'description': 'An ontology describing AI systems and their risks', 'id': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'imports': ['linkml:types', 'common', 'ai_risk', 'ai_system', 'ai_eval'], 'license': 'https://www.apache.org/licenses/LICENSE-2.0.html', 'name': 'ai-risk-ontology', 'prefixes': {'airo': {'prefix_prefix': 'airo', 'prefix_reference': 'https://w3id.org/airo#'}, 'linkml': {'prefix_prefix': 'linkml', 'prefix_reference': 'https://w3id.org/linkml/'}, 'nexus': {'prefix_prefix': 'nexus', 'prefix_reference': 'https://ibm.github.io/risk-atlas-nexus/ontology/'}}, 'source_file': 'src/risk_atlas_nexus/ai_risk_ontology/schema/ai-risk-ontology.yaml'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.metamodel_version","title":"metamodel_version  <code>module-attribute</code>","text":"<pre><code>metamodel_version = 'None'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version = '0.5.0'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action","title":"Action","text":"<p>               Bases: <code>Entity</code></p> <p>Action to remediate a risk</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasAiActorTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.hasAiActorTask","title":"hasAiActorTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasAiActorTask: Optional[List[str]] = Field(default=None, description='Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).', json_schema_extra={'linkml_meta': {'alias': 'hasAiActorTask', 'domain_of': ['Action']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Action.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent","title":"AiAgent","text":"<p>               Bases: <code>AiSystem</code></p> <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI agent has been provided by an AI systems provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isProvidedBy': {'description': 'A relationship indicating the AI agent has been provided by an AI systems provider.', 'name': 'isProvidedBy'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiAgent.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval","title":"AiEval","text":"<p>               Bases: <code>Entity</code></p> <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:Metric', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'isComposedOf': {'description': \"A relationship indicating that an AI evaluation maybe composed of other AI evaluations (e.g. it's an overall average of other scores).\", 'name': 'isComposedOf', 'range': 'AiEval'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEval.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult","title":"AiEvalResult","text":"<p>               Bases: <code>Fact</code>, <code>Entity</code></p> <p>The result of an evaluation for a specific AI model.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isResultOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.isResultOf","title":"isResultOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isResultOf: Optional[str] = Field(default=None, description='A relationship indicating that an entity is the result of an AI evaluation.', json_schema_extra={'linkml_meta': {'alias': 'isResultOf', 'domain_of': ['AiEvalResult'], 'slot_uri': 'dqv:isMeasurementOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:QualityMeasurement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'mixins': ['Fact']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiEvalResult.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase","title":"AiLifecyclePhase","text":"<p>               Bases: <code>Entity</code></p> <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'airo:AILifecyclePhase', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiLifecyclePhase.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel","title":"AiModel","text":"<p>               Bases: <code>BaseAi</code></p> <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation","title":"AiModelValidation","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiModelValidation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice","title":"AiOffice","text":"<p>               Bases: <code>Organization</code></p> <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/eu_ai_act'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiOffice.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider","title":"AiProvider","text":"<p>               Bases: <code>Organization</code></p> <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AIProvider', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiProvider.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem","title":"AiSystem","text":"<p>               Bases: <code>BaseAi</code></p> <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AISystem', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isComposedOf': {'description': 'Relationship indicating the AI components from which a complete AI system is composed.', 'name': 'isComposedOf', 'range': 'BaseAi'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystem.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType","title":"AiSystemType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>GPAI</code>           \u2013            </li> <li> <code>GPAI_OS</code>           \u2013            </li> <li> <code>HIGH_RISK</code>           \u2013            </li> <li> <code>MILITARY_SECURITY</code>           \u2013            </li> <li> <code>PROHIBITED</code>           \u2013            </li> <li> <code>SCIENTIFIC_RD</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.GPAI","title":"GPAI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI = 'GPAI'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.GPAI_OS","title":"GPAI_OS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI_OS = 'GPAI_OS'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.HIGH_RISK","title":"HIGH_RISK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH_RISK = 'HIGH_RISK'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.MILITARY_SECURITY","title":"MILITARY_SECURITY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MILITARY_SECURITY = 'MILITARY_SECURITY'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.PROHIBITED","title":"PROHIBITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PROHIBITED = 'PROHIBITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiSystemType.SCIENTIFIC_RD","title":"SCIENTIFIC_RD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SCIENTIFIC_RD = 'SCIENTIFIC_RD'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask","title":"AiTask","text":"<p>               Bases: <code>Entity</code></p> <p>A task, such as summarization and classification, performed by an AI.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AiCapability', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.AiTask.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi","title":"BaseAi","text":"<p>               Bases: <code>Entity</code></p> <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.BaseAi.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.ConfiguredBaseModel","title":"ConfiguredBaseModel","text":"<p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.ConfiguredBaseModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container","title":"Container","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>An umbrella object that holds the ontology class instances</p> <p>Attributes:</p> <ul> <li> <code>actions</code>               (<code>Optional[List[Action]]</code>)           \u2013            </li> <li> <code>aimodelfamilies</code>               (<code>Optional[List[LargeLanguageModelFamily]]</code>)           \u2013            </li> <li> <code>aimodels</code>               (<code>Optional[List[LargeLanguageModel]]</code>)           \u2013            </li> <li> <code>aitasks</code>               (<code>Optional[List[AiTask]]</code>)           \u2013            </li> <li> <code>datasets</code>               (<code>Optional[List[Dataset]]</code>)           \u2013            </li> <li> <code>documents</code>               (<code>Optional[List[Documentation]]</code>)           \u2013            </li> <li> <code>evaluations</code>               (<code>Optional[List[AiEval]]</code>)           \u2013            </li> <li> <code>licenses</code>               (<code>Optional[List[License]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>modalities</code>               (<code>Optional[List[Modality]]</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>organizations</code>               (<code>Optional[List[Organization]]</code>)           \u2013            </li> <li> <code>riskcontrols</code>               (<code>Optional[List[RiskControl]]</code>)           \u2013            </li> <li> <code>riskgroups</code>               (<code>Optional[List[RiskGroup]]</code>)           \u2013            </li> <li> <code>risks</code>               (<code>Optional[List[Risk]]</code>)           \u2013            </li> <li> <code>taxonomies</code>               (<code>Optional[List[RiskTaxonomy]]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: Optional[List[Action]] = Field(default=None, description='A list of risk related actions', json_schema_extra={'linkml_meta': {'alias': 'actions', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.aimodelfamilies","title":"aimodelfamilies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodelfamilies: Optional[List[LargeLanguageModelFamily]] = Field(default=None, description='A list of AI model families', json_schema_extra={'linkml_meta': {'alias': 'aimodelfamilies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.aimodels","title":"aimodels  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodels: Optional[List[LargeLanguageModel]] = Field(default=None, description='A list of AI models', json_schema_extra={'linkml_meta': {'alias': 'aimodels', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.aitasks","title":"aitasks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aitasks: Optional[List[AiTask]] = Field(default=None, description='A list of AI tasks', json_schema_extra={'linkml_meta': {'alias': 'aitasks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.datasets","title":"datasets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>datasets: Optional[List[Dataset]] = Field(default=None, description='A list of data sets', json_schema_extra={'linkml_meta': {'alias': 'datasets', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.documents","title":"documents  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>documents: Optional[List[Documentation]] = Field(default=None, description='A list of documents', json_schema_extra={'linkml_meta': {'alias': 'documents', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.evaluations","title":"evaluations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evaluations: Optional[List[AiEval]] = Field(default=None, description='A list of AI evaluation methods', json_schema_extra={'linkml_meta': {'alias': 'evaluations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.licenses","title":"licenses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>licenses: Optional[List[License]] = Field(default=None, description='A list of licenses', json_schema_extra={'linkml_meta': {'alias': 'licenses', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'tree_root': True})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.modalities","title":"modalities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>modalities: Optional[List[Modality]] = Field(default=None, description='A list of AI modalities', json_schema_extra={'linkml_meta': {'alias': 'modalities', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.organizations","title":"organizations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>organizations: Optional[List[Organization]] = Field(default=None, description='A list of organizations', json_schema_extra={'linkml_meta': {'alias': 'organizations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.riskcontrols","title":"riskcontrols  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskcontrols: Optional[List[RiskControl]] = Field(default=None, description='A list of AI risk controls', json_schema_extra={'linkml_meta': {'alias': 'riskcontrols', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.riskgroups","title":"riskgroups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskgroups: Optional[List[RiskGroup]] = Field(default=None, description='A list of AI risk groups', json_schema_extra={'linkml_meta': {'alias': 'riskgroups', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.risks","title":"risks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>risks: Optional[List[Risk]] = Field(default=None, description='A list of AI risks', json_schema_extra={'linkml_meta': {'alias': 'risks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Container.taxonomies","title":"taxonomies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>taxonomies: Optional[List[RiskTaxonomy]] = Field(default=None, description='A list of AI risk taxonomies', json_schema_extra={'linkml_meta': {'alias': 'taxonomies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing","title":"DataPreprocessing","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.DataPreprocessing.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset","title":"Dataset","text":"<p>               Bases: <code>Entity</code></p> <p>A body of structured information describing some topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>provider</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Dataset', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.provider","title":"provider  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>provider: Optional[str] = Field(default=None, description='A relationship to the Organization instance that provides this instance.', json_schema_extra={'linkml_meta': {'alias': 'provider', 'domain_of': ['Dataset'], 'slot_uri': 'schema:provider'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Dataset.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation","title":"Documentation","text":"<p>               Bases: <code>Entity</code></p> <p>Documented information about a concept or other topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Documentation', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Documentation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity","title":"Entity","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A generic grouping for any identifiable entity.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Thing', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Entity.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.EuAiRiskCategory","title":"EuAiRiskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>HIGH</code>           \u2013            </li> <li> <code>LIMITED</code>           \u2013            </li> <li> <code>MINIMAL</code>           \u2013            </li> <li> <code>UNACCEPTABLE</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.EuAiRiskCategory.HIGH","title":"HIGH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH = 'HIGH'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.EuAiRiskCategory.LIMITED","title":"LIMITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMITED = 'LIMITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.EuAiRiskCategory.MINIMAL","title":"MINIMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MINIMAL = 'MINIMAL'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.EuAiRiskCategory.UNACCEPTABLE","title":"UNACCEPTABLE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNACCEPTABLE = 'UNACCEPTABLE'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Fact","title":"Fact","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <p>Attributes:</p> <ul> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Fact.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Fact.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Statement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Fact.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Fact.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel","title":"LargeLanguageModel","text":"<p>               Bases: <code>AiModel</code></p> <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>contextWindowSize</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>fine_tuning</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasInputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasOutputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasTrainingData</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>numParameters</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>numTrainingTokens</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>supported_languages</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.contextWindowSize","title":"contextWindowSize  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contextWindowSize: Optional[int] = Field(default=None, description=\"The total length, in bytes, of an AI model's context window.\", ge=0, json_schema_extra={'linkml_meta': {'alias': 'contextWindowSize', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.fine_tuning","title":"fine_tuning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fine_tuning: Optional[str] = Field(default=None, description='A description of the fine-tuning mechanism(s) applied to a model.', json_schema_extra={'linkml_meta': {'alias': 'fine_tuning', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasInputModality","title":"hasInputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasInputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasInputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasOutputModality","title":"hasOutputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasOutputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasOutputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.hasTrainingData","title":"hasTrainingData  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasTrainingData: Optional[List[str]] = Field(default=None, description='A relationship indicating the datasets an AI model was trained on.', json_schema_extra={'linkml_meta': {'alias': 'hasTrainingData', 'domain_of': ['LargeLanguageModel'], 'slot_uri': 'airo:hasTrainingData'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='Annotation that a Large Language model is part of a family of models', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'aliases': ['LLM'], 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isPartOf': {'description': 'Annotation that a Large Language model is part of a family of models', 'name': 'isPartOf', 'range': 'LargeLanguageModelFamily'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.numParameters","title":"numParameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numParameters: Optional[int] = Field(default=None, description='A property indicating the number of parameters in a LLM.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numParameters', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.numTrainingTokens","title":"numTrainingTokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numTrainingTokens: Optional[int] = Field(default=None, description='The number of tokens a AI model was trained on.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numTrainingTokens', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.supported_languages","title":"supported_languages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_languages: Optional[List[str]] = Field(default=None, description=\"A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'\", json_schema_extra={'linkml_meta': {'alias': 'supported_languages', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily","title":"LargeLanguageModelFamily","text":"<p>               Bases: <code>Entity</code></p> <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LargeLanguageModelFamily.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License","title":"License","text":"<p>               Bases: <code>Entity</code></p> <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:License', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.License.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LinkMLMeta","title":"LinkMLMeta","text":"<p>               Bases: <code>RootModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> <li> <code>root</code>               (<code>Dict[str, Any]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LinkMLMeta.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.LinkMLMeta.root","title":"root  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>root: Dict[str, Any] = {}\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality","title":"Modality","text":"<p>               Bases: <code>Entity</code></p> <p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Modality', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Modality.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization","title":"Organization","text":"<p>               Bases: <code>Entity</code></p> <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Organization.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question","title":"Question","text":"<p>               Bases: <code>AiEval</code></p> <p>An evaluation where a question has to be answered</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>text</code>               (<code>str</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: str = Field(default=..., description='The question itself', json_schema_extra={'linkml_meta': {'alias': 'text', 'domain_of': ['Question']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Question.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire","title":"Questionnaire","text":"<p>               Bases: <code>AiEval</code></p> <p>A questionnaire groups questions</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'composed_of': {'name': 'composed_of', 'range': 'Question'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Questionnaire.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk","title":"Risk","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>concern</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>descriptor</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedAction</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>phase</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>tag</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>type</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.concern","title":"concern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>concern: Optional[str] = Field(default=None, description='Some explanation about the concern related to an AI risk', json_schema_extra={'linkml_meta': {'alias': 'concern', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.descriptor","title":"descriptor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>descriptor: Optional[str] = Field(default=None, description='Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.', json_schema_extra={'linkml_meta': {'alias': 'descriptor', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.hasRelatedAction","title":"hasRelatedAction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedAction: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to an action', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedAction', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='A relationship where a risk is part of a risk group', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Risk', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'isPartOf': {'description': 'A relationship where a risk is part of a risk group', 'name': 'isPartOf', 'range': 'RiskGroup'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.phase","title":"phase  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>phase: Optional[str] = Field(default=None, description='Annotation whether an AI risk shows specifically during the training-tuning or inference phase.', json_schema_extra={'linkml_meta': {'alias': 'phase', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.tag","title":"tag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tag: Optional[str] = Field(default=None, description='A shost version of the name', json_schema_extra={'linkml_meta': {'alias': 'tag', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Optional[str] = Field(default=None, description='Annotation whether an AI risk occurs at input or output or is non-technical.', json_schema_extra={'linkml_meta': {'alias': 'type', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.Risk.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept","title":"RiskConcept","text":"<p>               Bases: <code>Entity</code></p> <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskConcept', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskConcept.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl","title":"RiskControl","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskControl', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskControl.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup","title":"RiskGroup","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasPart</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.hasPart","title":"hasPart  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasPart: Optional[List[str]] = Field(default=None, description='A relationship where a riskgroup has a risk', json_schema_extra={'linkml_meta': {'alias': 'hasPart', 'domain_of': ['RiskGroup'], 'slot_uri': 'schema:hasPart'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'hasPart': {'description': 'A relationship where a riskgroup has a risk', 'name': 'hasPart', 'range': 'Risk'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskGroup.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy","title":"RiskTaxonomy","text":"<p>               Bases: <code>Entity</code></p> <p>A taxonomy of AI system related risks</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.datamodel.ai_risk_ontology.RiskTaxonomy.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util","title":"util","text":"<p>Modules:</p> <ul> <li> <code>air_2024_risks2linkml</code>           \u2013            </li> <li> <code>credo2linkml</code>           \u2013            </li> <li> <code>export_graph</code>           \u2013            </li> <li> <code>export_risk_atlas_tex</code>           \u2013            </li> <li> <code>latex_dumper</code>           \u2013            </li> <li> <code>lifting</code>           \u2013            </li> <li> <code>mitriskrepo2linkml</code>           \u2013            </li> <li> <code>nistUpdateLinkmlWithActions</code>           \u2013            </li> <li> <code>nistactions2linkml</code>           \u2013            </li> <li> <code>riskatlas2linkml</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml","title":"air_2024_risks2linkml","text":"<p>Classes:</p> <ul> <li> <code>Action</code>           \u2013            <p>Action to remediate a risk</p> </li> <li> <code>AiAgent</code>           \u2013            <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> </li> <li> <code>AiEval</code>           \u2013            <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> </li> <li> <code>AiEvalResult</code>           \u2013            <p>The result of an evaluation for a specific AI model.</p> </li> <li> <code>AiLifecyclePhase</code>           \u2013            <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> </li> <li> <code>AiModel</code>           \u2013            <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> </li> <li> <code>AiModelValidation</code>           \u2013            <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> </li> <li> <code>AiOffice</code>           \u2013            <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> </li> <li> <code>AiProvider</code>           \u2013            <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> </li> <li> <code>AiSystem</code>           \u2013            <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> </li> <li> <code>AiSystemType</code>           \u2013            </li> <li> <code>AiTask</code>           \u2013            <p>A task, such as summarization and classification, performed by an AI.</p> </li> <li> <code>BaseAi</code>           \u2013            <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> </li> <li> <code>ConfiguredBaseModel</code>           \u2013            </li> <li> <code>Container</code>           \u2013            <p>An umbrella object that holds the ontology class instances</p> </li> <li> <code>DataPreprocessing</code>           \u2013            <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> </li> <li> <code>Dataset</code>           \u2013            <p>A body of structured information describing some topic(s) of interest.</p> </li> <li> <code>Documentation</code>           \u2013            <p>Documented information about a concept or other topic(s) of interest.</p> </li> <li> <code>Entity</code>           \u2013            <p>A generic grouping for any identifiable entity.</p> </li> <li> <code>EuAiRiskCategory</code>           \u2013            </li> <li> <code>Fact</code>           \u2013            <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> </li> <li> <code>LargeLanguageModel</code>           \u2013            <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> </li> <li> <code>LargeLanguageModelFamily</code>           \u2013            <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> </li> <li> <code>License</code>           \u2013            <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> </li> <li> <code>LinkMLMeta</code>           \u2013            </li> <li> <code>Modality</code>           \u2013            <p>A modality supported by an Ai component. Examples include text, image, video.</p> </li> <li> <code>Organization</code>           \u2013            <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> </li> <li> <code>Question</code>           \u2013            <p>An evaluation where a question has to be answered</p> </li> <li> <code>Questionnaire</code>           \u2013            <p>A questionnaire groups questions</p> </li> <li> <code>Risk</code>           \u2013            <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> </li> <li> <code>RiskConcept</code>           \u2013            <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> </li> <li> <code>RiskControl</code>           \u2013            <p>A measure that maintains and/or modifies risk (and risk concepts)</p> </li> <li> <code>RiskGroup</code>           \u2013            <p>A group of AI system related risks that are part of a risk taxonomy.</p> </li> <li> <code>RiskTaxonomy</code>           \u2013            <p>A taxonomy of AI system related risks</p> </li> </ul> <p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_related_risks</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> <li> <code>modify_paragraph</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>DATA_DIR</code>           \u2013            </li> <li> <code>SCHEMA_DIR</code>           \u2013            </li> <li> <code>container</code>           \u2013            </li> <li> <code>ds</code>           \u2013            </li> <li> <code>export_file_path</code>           \u2013            </li> <li> <code>linkml_meta</code>           \u2013            </li> <li> <code>metamodel_version</code>           \u2013            </li> <li> <code>version</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DATA_DIR","title":"DATA_DIR  <code>module-attribute</code>","text":"<pre><code>DATA_DIR = 'src/risk_atlas_nexus/data/knowledge-graph/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.SCHEMA_DIR","title":"SCHEMA_DIR  <code>module-attribute</code>","text":"<pre><code>SCHEMA_DIR = 'src/ai_risk_ontology/schema/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.ds","title":"ds  <code>module-attribute</code>","text":"<pre><code>ds = load_dataset('stanford-crfm/air-bench-2024', 'judge_prompts', split='test')\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.export_file_path","title":"export_file_path  <code>module-attribute</code>","text":"<pre><code>export_file_path = join(DATA_DIR, 'air_2024_data.yaml')\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.linkml_meta","title":"linkml_meta  <code>module-attribute</code>","text":"<pre><code>linkml_meta = LinkMLMeta({'default_curi_maps': ['semweb_context'], 'default_prefix': 'nexus', 'default_range': 'string', 'description': 'An ontology describing AI systems and their risks', 'id': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'imports': ['linkml:types', 'common', 'ai_risk', 'ai_system', 'ai_eval'], 'license': 'https://www.apache.org/licenses/LICENSE-2.0.html', 'name': 'ai-risk-ontology', 'prefixes': {'airo': {'prefix_prefix': 'airo', 'prefix_reference': 'https://w3id.org/airo#'}, 'linkml': {'prefix_prefix': 'linkml', 'prefix_reference': 'https://w3id.org/linkml/'}, 'nexus': {'prefix_prefix': 'nexus', 'prefix_reference': 'https://ibm.github.io/risk-atlas-nexus/ontology/'}}, 'source_file': 'src/risk_atlas_nexus/ai_risk_ontology/schema/ai-risk-ontology.yaml'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.metamodel_version","title":"metamodel_version  <code>module-attribute</code>","text":"<pre><code>metamodel_version = 'None'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version = '0.5.0'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action","title":"Action","text":"<p>               Bases: <code>Entity</code></p> <p>Action to remediate a risk</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasAiActorTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.hasAiActorTask","title":"hasAiActorTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasAiActorTask: Optional[List[str]] = Field(default=None, description='Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).', json_schema_extra={'linkml_meta': {'alias': 'hasAiActorTask', 'domain_of': ['Action']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Action.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent","title":"AiAgent","text":"<p>               Bases: <code>AiSystem</code></p> <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI agent has been provided by an AI systems provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isProvidedBy': {'description': 'A relationship indicating the AI agent has been provided by an AI systems provider.', 'name': 'isProvidedBy'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiAgent.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval","title":"AiEval","text":"<p>               Bases: <code>Entity</code></p> <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:Metric', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'isComposedOf': {'description': \"A relationship indicating that an AI evaluation maybe composed of other AI evaluations (e.g. it's an overall average of other scores).\", 'name': 'isComposedOf', 'range': 'AiEval'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEval.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult","title":"AiEvalResult","text":"<p>               Bases: <code>Fact</code>, <code>Entity</code></p> <p>The result of an evaluation for a specific AI model.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isResultOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.isResultOf","title":"isResultOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isResultOf: Optional[str] = Field(default=None, description='A relationship indicating that an entity is the result of an AI evaluation.', json_schema_extra={'linkml_meta': {'alias': 'isResultOf', 'domain_of': ['AiEvalResult'], 'slot_uri': 'dqv:isMeasurementOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:QualityMeasurement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'mixins': ['Fact']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiEvalResult.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase","title":"AiLifecyclePhase","text":"<p>               Bases: <code>Entity</code></p> <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'airo:AILifecyclePhase', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiLifecyclePhase.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel","title":"AiModel","text":"<p>               Bases: <code>BaseAi</code></p> <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation","title":"AiModelValidation","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiModelValidation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice","title":"AiOffice","text":"<p>               Bases: <code>Organization</code></p> <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/eu_ai_act'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiOffice.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider","title":"AiProvider","text":"<p>               Bases: <code>Organization</code></p> <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AIProvider', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiProvider.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem","title":"AiSystem","text":"<p>               Bases: <code>BaseAi</code></p> <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AISystem', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isComposedOf': {'description': 'Relationship indicating the AI components from which a complete AI system is composed.', 'name': 'isComposedOf', 'range': 'BaseAi'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystem.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType","title":"AiSystemType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>GPAI</code>           \u2013            </li> <li> <code>GPAI_OS</code>           \u2013            </li> <li> <code>HIGH_RISK</code>           \u2013            </li> <li> <code>MILITARY_SECURITY</code>           \u2013            </li> <li> <code>PROHIBITED</code>           \u2013            </li> <li> <code>SCIENTIFIC_RD</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.GPAI","title":"GPAI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI = 'GPAI'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.GPAI_OS","title":"GPAI_OS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI_OS = 'GPAI_OS'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.HIGH_RISK","title":"HIGH_RISK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH_RISK = 'HIGH_RISK'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.MILITARY_SECURITY","title":"MILITARY_SECURITY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MILITARY_SECURITY = 'MILITARY_SECURITY'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.PROHIBITED","title":"PROHIBITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PROHIBITED = 'PROHIBITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiSystemType.SCIENTIFIC_RD","title":"SCIENTIFIC_RD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SCIENTIFIC_RD = 'SCIENTIFIC_RD'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask","title":"AiTask","text":"<p>               Bases: <code>Entity</code></p> <p>A task, such as summarization and classification, performed by an AI.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AiCapability', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.AiTask.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi","title":"BaseAi","text":"<p>               Bases: <code>Entity</code></p> <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.BaseAi.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.ConfiguredBaseModel","title":"ConfiguredBaseModel","text":"<p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.ConfiguredBaseModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container","title":"Container","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>An umbrella object that holds the ontology class instances</p> <p>Attributes:</p> <ul> <li> <code>actions</code>               (<code>Optional[List[Action]]</code>)           \u2013            </li> <li> <code>aimodelfamilies</code>               (<code>Optional[List[LargeLanguageModelFamily]]</code>)           \u2013            </li> <li> <code>aimodels</code>               (<code>Optional[List[LargeLanguageModel]]</code>)           \u2013            </li> <li> <code>aitasks</code>               (<code>Optional[List[AiTask]]</code>)           \u2013            </li> <li> <code>datasets</code>               (<code>Optional[List[Dataset]]</code>)           \u2013            </li> <li> <code>documents</code>               (<code>Optional[List[Documentation]]</code>)           \u2013            </li> <li> <code>evaluations</code>               (<code>Optional[List[AiEval]]</code>)           \u2013            </li> <li> <code>licenses</code>               (<code>Optional[List[License]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>modalities</code>               (<code>Optional[List[Modality]]</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>organizations</code>               (<code>Optional[List[Organization]]</code>)           \u2013            </li> <li> <code>riskcontrols</code>               (<code>Optional[List[RiskControl]]</code>)           \u2013            </li> <li> <code>riskgroups</code>               (<code>Optional[List[RiskGroup]]</code>)           \u2013            </li> <li> <code>risks</code>               (<code>Optional[List[Risk]]</code>)           \u2013            </li> <li> <code>taxonomies</code>               (<code>Optional[List[RiskTaxonomy]]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: Optional[List[Action]] = Field(default=None, description='A list of risk related actions', json_schema_extra={'linkml_meta': {'alias': 'actions', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.aimodelfamilies","title":"aimodelfamilies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodelfamilies: Optional[List[LargeLanguageModelFamily]] = Field(default=None, description='A list of AI model families', json_schema_extra={'linkml_meta': {'alias': 'aimodelfamilies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.aimodels","title":"aimodels  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodels: Optional[List[LargeLanguageModel]] = Field(default=None, description='A list of AI models', json_schema_extra={'linkml_meta': {'alias': 'aimodels', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.aitasks","title":"aitasks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aitasks: Optional[List[AiTask]] = Field(default=None, description='A list of AI tasks', json_schema_extra={'linkml_meta': {'alias': 'aitasks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.datasets","title":"datasets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>datasets: Optional[List[Dataset]] = Field(default=None, description='A list of data sets', json_schema_extra={'linkml_meta': {'alias': 'datasets', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.documents","title":"documents  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>documents: Optional[List[Documentation]] = Field(default=None, description='A list of documents', json_schema_extra={'linkml_meta': {'alias': 'documents', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.evaluations","title":"evaluations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evaluations: Optional[List[AiEval]] = Field(default=None, description='A list of AI evaluation methods', json_schema_extra={'linkml_meta': {'alias': 'evaluations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.licenses","title":"licenses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>licenses: Optional[List[License]] = Field(default=None, description='A list of licenses', json_schema_extra={'linkml_meta': {'alias': 'licenses', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'tree_root': True})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.modalities","title":"modalities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>modalities: Optional[List[Modality]] = Field(default=None, description='A list of AI modalities', json_schema_extra={'linkml_meta': {'alias': 'modalities', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.organizations","title":"organizations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>organizations: Optional[List[Organization]] = Field(default=None, description='A list of organizations', json_schema_extra={'linkml_meta': {'alias': 'organizations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.riskcontrols","title":"riskcontrols  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskcontrols: Optional[List[RiskControl]] = Field(default=None, description='A list of AI risk controls', json_schema_extra={'linkml_meta': {'alias': 'riskcontrols', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.riskgroups","title":"riskgroups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskgroups: Optional[List[RiskGroup]] = Field(default=None, description='A list of AI risk groups', json_schema_extra={'linkml_meta': {'alias': 'riskgroups', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.risks","title":"risks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>risks: Optional[List[Risk]] = Field(default=None, description='A list of AI risks', json_schema_extra={'linkml_meta': {'alias': 'risks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Container.taxonomies","title":"taxonomies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>taxonomies: Optional[List[RiskTaxonomy]] = Field(default=None, description='A list of AI risk taxonomies', json_schema_extra={'linkml_meta': {'alias': 'taxonomies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing","title":"DataPreprocessing","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.DataPreprocessing.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset","title":"Dataset","text":"<p>               Bases: <code>Entity</code></p> <p>A body of structured information describing some topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>provider</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Dataset', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.provider","title":"provider  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>provider: Optional[str] = Field(default=None, description='A relationship to the Organization instance that provides this instance.', json_schema_extra={'linkml_meta': {'alias': 'provider', 'domain_of': ['Dataset'], 'slot_uri': 'schema:provider'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Dataset.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation","title":"Documentation","text":"<p>               Bases: <code>Entity</code></p> <p>Documented information about a concept or other topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Documentation', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Documentation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity","title":"Entity","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A generic grouping for any identifiable entity.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Thing', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Entity.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.EuAiRiskCategory","title":"EuAiRiskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>HIGH</code>           \u2013            </li> <li> <code>LIMITED</code>           \u2013            </li> <li> <code>MINIMAL</code>           \u2013            </li> <li> <code>UNACCEPTABLE</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.EuAiRiskCategory.HIGH","title":"HIGH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH = 'HIGH'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.EuAiRiskCategory.LIMITED","title":"LIMITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMITED = 'LIMITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.EuAiRiskCategory.MINIMAL","title":"MINIMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MINIMAL = 'MINIMAL'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.EuAiRiskCategory.UNACCEPTABLE","title":"UNACCEPTABLE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNACCEPTABLE = 'UNACCEPTABLE'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Fact","title":"Fact","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <p>Attributes:</p> <ul> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Fact.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Fact.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Statement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Fact.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Fact.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel","title":"LargeLanguageModel","text":"<p>               Bases: <code>AiModel</code></p> <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>contextWindowSize</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>fine_tuning</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasInputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasOutputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasTrainingData</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>numParameters</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>numTrainingTokens</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>supported_languages</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.contextWindowSize","title":"contextWindowSize  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contextWindowSize: Optional[int] = Field(default=None, description=\"The total length, in bytes, of an AI model's context window.\", ge=0, json_schema_extra={'linkml_meta': {'alias': 'contextWindowSize', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.fine_tuning","title":"fine_tuning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fine_tuning: Optional[str] = Field(default=None, description='A description of the fine-tuning mechanism(s) applied to a model.', json_schema_extra={'linkml_meta': {'alias': 'fine_tuning', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasInputModality","title":"hasInputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasInputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasInputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasOutputModality","title":"hasOutputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasOutputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasOutputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.hasTrainingData","title":"hasTrainingData  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasTrainingData: Optional[List[str]] = Field(default=None, description='A relationship indicating the datasets an AI model was trained on.', json_schema_extra={'linkml_meta': {'alias': 'hasTrainingData', 'domain_of': ['LargeLanguageModel'], 'slot_uri': 'airo:hasTrainingData'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='Annotation that a Large Language model is part of a family of models', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'aliases': ['LLM'], 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isPartOf': {'description': 'Annotation that a Large Language model is part of a family of models', 'name': 'isPartOf', 'range': 'LargeLanguageModelFamily'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.numParameters","title":"numParameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numParameters: Optional[int] = Field(default=None, description='A property indicating the number of parameters in a LLM.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numParameters', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.numTrainingTokens","title":"numTrainingTokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numTrainingTokens: Optional[int] = Field(default=None, description='The number of tokens a AI model was trained on.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numTrainingTokens', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.supported_languages","title":"supported_languages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_languages: Optional[List[str]] = Field(default=None, description=\"A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'\", json_schema_extra={'linkml_meta': {'alias': 'supported_languages', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily","title":"LargeLanguageModelFamily","text":"<p>               Bases: <code>Entity</code></p> <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LargeLanguageModelFamily.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License","title":"License","text":"<p>               Bases: <code>Entity</code></p> <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:License', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.License.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LinkMLMeta","title":"LinkMLMeta","text":"<p>               Bases: <code>RootModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> <li> <code>root</code>               (<code>Dict[str, Any]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LinkMLMeta.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.LinkMLMeta.root","title":"root  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>root: Dict[str, Any] = {}\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality","title":"Modality","text":"<p>               Bases: <code>Entity</code></p> <p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Modality', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Modality.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization","title":"Organization","text":"<p>               Bases: <code>Entity</code></p> <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Organization.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question","title":"Question","text":"<p>               Bases: <code>AiEval</code></p> <p>An evaluation where a question has to be answered</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>text</code>               (<code>str</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: str = Field(default=..., description='The question itself', json_schema_extra={'linkml_meta': {'alias': 'text', 'domain_of': ['Question']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Question.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire","title":"Questionnaire","text":"<p>               Bases: <code>AiEval</code></p> <p>A questionnaire groups questions</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'composed_of': {'name': 'composed_of', 'range': 'Question'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Questionnaire.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk","title":"Risk","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>concern</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>descriptor</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedAction</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>phase</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>tag</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>type</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.concern","title":"concern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>concern: Optional[str] = Field(default=None, description='Some explanation about the concern related to an AI risk', json_schema_extra={'linkml_meta': {'alias': 'concern', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.descriptor","title":"descriptor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>descriptor: Optional[str] = Field(default=None, description='Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.', json_schema_extra={'linkml_meta': {'alias': 'descriptor', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.hasRelatedAction","title":"hasRelatedAction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedAction: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to an action', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedAction', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='A relationship where a risk is part of a risk group', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Risk', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'isPartOf': {'description': 'A relationship where a risk is part of a risk group', 'name': 'isPartOf', 'range': 'RiskGroup'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.phase","title":"phase  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>phase: Optional[str] = Field(default=None, description='Annotation whether an AI risk shows specifically during the training-tuning or inference phase.', json_schema_extra={'linkml_meta': {'alias': 'phase', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.tag","title":"tag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tag: Optional[str] = Field(default=None, description='A shost version of the name', json_schema_extra={'linkml_meta': {'alias': 'tag', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Optional[str] = Field(default=None, description='Annotation whether an AI risk occurs at input or output or is non-technical.', json_schema_extra={'linkml_meta': {'alias': 'type', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.Risk.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept","title":"RiskConcept","text":"<p>               Bases: <code>Entity</code></p> <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskConcept', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskConcept.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl","title":"RiskControl","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskControl', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskControl.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup","title":"RiskGroup","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasPart</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.hasPart","title":"hasPart  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasPart: Optional[List[str]] = Field(default=None, description='A relationship where a riskgroup has a risk', json_schema_extra={'linkml_meta': {'alias': 'hasPart', 'domain_of': ['RiskGroup'], 'slot_uri': 'schema:hasPart'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'hasPart': {'description': 'A relationship where a riskgroup has a risk', 'name': 'hasPart', 'range': 'Risk'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskGroup.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy","title":"RiskTaxonomy","text":"<p>               Bases: <code>Entity</code></p> <p>A taxonomy of AI system related risks</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.RiskTaxonomy.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.get_related_risks","title":"get_related_risks","text":"<pre><code>get_related_risks(related_risks_str: str, risks: dict[str, str]) -&gt; list[str]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; dict[str, str]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.air_2024_risks2linkml.modify_paragraph","title":"modify_paragraph","text":"<pre><code>modify_paragraph(paragraph)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.credo2linkml","title":"credo2linkml","text":"<p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_risk_actions</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>container</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.credo2linkml.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.credo2linkml.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.credo2linkml.get_risk_actions","title":"get_risk_actions","text":"<pre><code>get_risk_actions() -&gt; list[dict]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.credo2linkml.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; list[dict]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_graph","title":"export_graph","text":"<p>Attributes:</p> <ul> <li> <code>ran</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_graph.ran","title":"ran  <code>module-attribute</code>","text":"<pre><code>ran = RiskAtlasNexus()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex","title":"export_risk_atlas_tex","text":"<p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>container</code>           \u2013            </li> <li> <code>export_file_path</code>           \u2013            </li> <li> <code>export_path</code>           \u2013            </li> <li> <code>logger</code>           \u2013            </li> <li> <code>ran</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.export_file_path","title":"export_file_path  <code>module-attribute</code>","text":"<pre><code>export_file_path = join(export_path, 'ibm-ai-risk-atlas-risks.tex')\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.export_path","title":"export_path  <code>module-attribute</code>","text":"<pre><code>export_path = 'graph_export/latex'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = configure_logger(__name__)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.ran","title":"ran  <code>module-attribute</code>","text":"<pre><code>ran = RiskAtlasNexus()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.export_risk_atlas_tex.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.latex_dumper","title":"latex_dumper","text":"<p>Classes:</p> <ul> <li> <code>LatexDumper</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.latex_dumper.LatexDumper","title":"LatexDumper","text":"<p>               Bases: <code>Dumper</code></p> <p>Methods:</p> <ul> <li> <code>dump</code>             \u2013              <p>Write element as latex to to_file</p> </li> <li> <code>dumps</code>             \u2013              <p>Return element as latex string</p> </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.latex_dumper.LatexDumper.dump","title":"dump","text":"<pre><code>dump(element: Union[BaseModel, YAMLRoot], to_file: str, contexts: CONTEXTS_PARAM_TYPE = None, **kwargs) -&gt; None\n</code></pre> <p>Write element as latex to to_file</p> <p>Parameters:</p> <ul> <li> <code>element</code>               (<code>Union[BaseModel, YAMLRoot]</code>)           \u2013            <p>Union[BaseModel, YAMLRoot] LinkML object to be output</p> </li> <li> <code>to_file</code>               (<code>str</code>)           \u2013            <p>str file to write to</p> </li> <li> <code>contexts</code>               (<code>CONTEXTS_PARAM_TYPE</code>, default:                   <code>None</code> )           \u2013            <p>Optional[Union[CONTEXT_TYPE, List[CONTEXT_TYPE]]]  a list of JSON-LD contexts, which can be one of:     * the name of a JSON-LD file     * the URI of a JSON-lD file     * JSON-LD text     * A JsonObj object that contains JSON-LD     * A dictionary that contains JSON-LD</p> </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.latex_dumper.LatexDumper.dumps","title":"dumps","text":"<pre><code>dumps(element: Union[BaseModel, YAMLRoot], **_) -&gt; str\n</code></pre> <p>Return element as latex string</p> <p>Parameters:</p> <ul> <li> <code>element</code>               (<code>Union[BaseModel, YAMLRoot]</code>)           \u2013            <p>Union[BaseModel, YAMLRoot], LinkML object to be emitted</p> </li> <li> <code>_</code>           \u2013            <p>method specific arguments</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>str</code>           \u2013            <p>str</p> </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting","title":"lifting","text":"<p>Modules:</p> <ul> <li> <code>import_risk_mappings</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings","title":"import_risk_mappings","text":"<p>Classes:</p> <ul> <li> <code>RiskMap</code>           \u2013            </li> </ul> <p>Functions:</p> <ul> <li> <code>process_mapping_from_tsv_to_risk_mapping</code>             \u2013              </li> <li> <code>process_mappings_to_risks</code>             \u2013              </li> <li> <code>write_to_file</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>DATA_DIR</code>           \u2013            </li> <li> <code>MAP_DIR</code>           \u2013            </li> <li> <code>logger</code>           \u2013            </li> <li> <code>mapping_files</code>           \u2013            </li> <li> <code>output_file</code>           \u2013            </li> <li> <code>output_risks</code>           \u2013            </li> <li> <code>rs</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.DATA_DIR","title":"DATA_DIR  <code>module-attribute</code>","text":"<pre><code>DATA_DIR = 'src/risk_atlas_nexus/data/knowledge_graph/mappings/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.MAP_DIR","title":"MAP_DIR  <code>module-attribute</code>","text":"<pre><code>MAP_DIR = 'src/risk_atlas_nexus/data/mappings/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = configure_logger(__name__)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.mapping_files","title":"mapping_files  <code>module-attribute</code>","text":"<pre><code>mapping_files = [file_name for file_name in listdir(MAP_DIR) if isfile(join(MAP_DIR, file_name))]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.output_file","title":"output_file  <code>module-attribute</code>","text":"<pre><code>output_file = DATA_DIR + stem + '_from_tsv_data.yaml'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.output_risks","title":"output_risks  <code>module-attribute</code>","text":"<pre><code>output_risks = process_mappings_to_risks(rs)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.rs","title":"rs  <code>module-attribute</code>","text":"<pre><code>rs = process_mapping_from_tsv_to_risk_mapping(file_name)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.RiskMap","title":"RiskMap","text":"<pre><code>RiskMap(src_risk_id: str, target_risk_id: str, relationship: str)\n</code></pre> <p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>relationship</code>               (<code>str</code>)           \u2013            </li> <li> <code>src_risk_id</code>               (<code>str</code>)           \u2013            </li> <li> <code>target_risk_id</code>               (<code>str</code>)           \u2013            </li> </ul> <code></code> relationship <code>instance-attribute</code> <pre><code>relationship: str\n</code></pre> <code></code> src_risk_id <code>instance-attribute</code> <pre><code>src_risk_id: str\n</code></pre> <code></code> target_risk_id <code>instance-attribute</code> <pre><code>target_risk_id: str\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.process_mapping_from_tsv_to_risk_mapping","title":"process_mapping_from_tsv_to_risk_mapping","text":"<pre><code>process_mapping_from_tsv_to_risk_mapping(file_name)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.process_mappings_to_risks","title":"process_mappings_to_risks","text":"<pre><code>process_mappings_to_risks(risk_maps)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.lifting.import_risk_mappings.write_to_file","title":"write_to_file","text":"<pre><code>write_to_file(output_risks, output_file)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.mitriskrepo2linkml","title":"mitriskrepo2linkml","text":"<p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>container</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.mitriskrepo2linkml.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.mitriskrepo2linkml.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.mitriskrepo2linkml.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; list[dict]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions","title":"nistUpdateLinkmlWithActions","text":"<p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_actions</code>             \u2013              </li> <li> <code>get_related_risks</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>DATA_DIR</code>           \u2013            </li> <li> <code>SCHEMA_DIR</code>           \u2013            </li> <li> <code>container</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.DATA_DIR","title":"DATA_DIR  <code>module-attribute</code>","text":"<pre><code>DATA_DIR = 'src/data/knowledge-graph/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.SCHEMA_DIR","title":"SCHEMA_DIR  <code>module-attribute</code>","text":"<pre><code>SCHEMA_DIR = 'src/ai_risk_ontology/schema/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.get_actions","title":"get_actions","text":"<pre><code>get_actions() -&gt; list[Action]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.get_related_risks","title":"get_related_risks","text":"<pre><code>get_related_risks(related_risks_str: str, risks: dict[str, str]) -&gt; list[str]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistUpdateLinkmlWithActions.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml","title":"nistactions2linkml","text":"<p>Classes:</p> <ul> <li> <code>Action</code>           \u2013            <p>Action to remediate a risk</p> </li> <li> <code>AiAgent</code>           \u2013            <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> </li> <li> <code>AiEval</code>           \u2013            <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> </li> <li> <code>AiEvalResult</code>           \u2013            <p>The result of an evaluation for a specific AI model.</p> </li> <li> <code>AiLifecyclePhase</code>           \u2013            <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> </li> <li> <code>AiModel</code>           \u2013            <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> </li> <li> <code>AiModelValidation</code>           \u2013            <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> </li> <li> <code>AiOffice</code>           \u2013            <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> </li> <li> <code>AiProvider</code>           \u2013            <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> </li> <li> <code>AiSystem</code>           \u2013            <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> </li> <li> <code>AiSystemType</code>           \u2013            </li> <li> <code>AiTask</code>           \u2013            <p>A task, such as summarization and classification, performed by an AI.</p> </li> <li> <code>BaseAi</code>           \u2013            <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> </li> <li> <code>ConfiguredBaseModel</code>           \u2013            </li> <li> <code>Container</code>           \u2013            <p>An umbrella object that holds the ontology class instances</p> </li> <li> <code>DataPreprocessing</code>           \u2013            <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> </li> <li> <code>Dataset</code>           \u2013            <p>A body of structured information describing some topic(s) of interest.</p> </li> <li> <code>Documentation</code>           \u2013            <p>Documented information about a concept or other topic(s) of interest.</p> </li> <li> <code>Entity</code>           \u2013            <p>A generic grouping for any identifiable entity.</p> </li> <li> <code>EuAiRiskCategory</code>           \u2013            </li> <li> <code>Fact</code>           \u2013            <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> </li> <li> <code>LargeLanguageModel</code>           \u2013            <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> </li> <li> <code>LargeLanguageModelFamily</code>           \u2013            <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> </li> <li> <code>License</code>           \u2013            <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> </li> <li> <code>LinkMLMeta</code>           \u2013            </li> <li> <code>Modality</code>           \u2013            <p>A modality supported by an Ai component. Examples include text, image, video.</p> </li> <li> <code>Organization</code>           \u2013            <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> </li> <li> <code>Question</code>           \u2013            <p>An evaluation where a question has to be answered</p> </li> <li> <code>Questionnaire</code>           \u2013            <p>A questionnaire groups questions</p> </li> <li> <code>Risk</code>           \u2013            <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> </li> <li> <code>RiskConcept</code>           \u2013            <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> </li> <li> <code>RiskControl</code>           \u2013            <p>A measure that maintains and/or modifies risk (and risk concepts)</p> </li> <li> <code>RiskGroup</code>           \u2013            <p>A group of AI system related risks that are part of a risk taxonomy.</p> </li> <li> <code>RiskTaxonomy</code>           \u2013            <p>A taxonomy of AI system related risks</p> </li> </ul> <p>Functions:</p> <ul> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_actions</code>             \u2013              </li> <li> <code>get_related_risks</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>DATA_DIR</code>           \u2013            </li> <li> <code>SCHEMA_DIR</code>           \u2013            </li> <li> <code>container</code>           \u2013            </li> <li> <code>linkml_meta</code>           \u2013            </li> <li> <code>metamodel_version</code>           \u2013            </li> <li> <code>version</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DATA_DIR","title":"DATA_DIR  <code>module-attribute</code>","text":"<pre><code>DATA_DIR = 'src/data/knowledge-graph/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.SCHEMA_DIR","title":"SCHEMA_DIR  <code>module-attribute</code>","text":"<pre><code>SCHEMA_DIR = 'src/ai_risk_ontology/schema/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.linkml_meta","title":"linkml_meta  <code>module-attribute</code>","text":"<pre><code>linkml_meta = LinkMLMeta({'default_curi_maps': ['semweb_context'], 'default_prefix': 'nexus', 'default_range': 'string', 'description': 'An ontology describing AI systems and their risks', 'id': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'imports': ['linkml:types', 'common', 'ai_risk', 'ai_system', 'ai_eval'], 'license': 'https://www.apache.org/licenses/LICENSE-2.0.html', 'name': 'ai-risk-ontology', 'prefixes': {'airo': {'prefix_prefix': 'airo', 'prefix_reference': 'https://w3id.org/airo#'}, 'linkml': {'prefix_prefix': 'linkml', 'prefix_reference': 'https://w3id.org/linkml/'}, 'nexus': {'prefix_prefix': 'nexus', 'prefix_reference': 'https://ibm.github.io/risk-atlas-nexus/ontology/'}}, 'source_file': 'src/risk_atlas_nexus/ai_risk_ontology/schema/ai-risk-ontology.yaml'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.metamodel_version","title":"metamodel_version  <code>module-attribute</code>","text":"<pre><code>metamodel_version = 'None'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.version","title":"version  <code>module-attribute</code>","text":"<pre><code>version = '0.5.0'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action","title":"Action","text":"<p>               Bases: <code>Entity</code></p> <p>Action to remediate a risk</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasAiActorTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.hasAiActorTask","title":"hasAiActorTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasAiActorTask: Optional[List[str]] = Field(default=None, description='Pertinent AI Actor Tasks for each subcategory. Not every AI Actor Task listed will apply to every suggested action in the subcategory (i.e., some apply to AI development and others apply to AI deployment).', json_schema_extra={'linkml_meta': {'alias': 'hasAiActorTask', 'domain_of': ['Action']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Action.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent","title":"AiAgent","text":"<p>               Bases: <code>AiSystem</code></p> <p>An artificial intelligence (AI) agent refers to a system or program that is capable of autonomously performing tasks on behalf of a user or another system by designing its workflow and utilizing available tools.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI agent has been provided by an AI systems provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isProvidedBy': {'description': 'A relationship indicating the AI agent has been provided by an AI systems provider.', 'name': 'isProvidedBy'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiAgent.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval","title":"AiEval","text":"<p>               Bases: <code>Entity</code></p> <p>An AI Evaluation, e.g. a metric, benchmark, unitxt card evaluation, a question or a combination of such entities.</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:Metric', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'isComposedOf': {'description': \"A relationship indicating that an AI evaluation maybe composed of other AI evaluations (e.g. it's an overall average of other scores).\", 'name': 'isComposedOf', 'range': 'AiEval'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEval.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult","title":"AiEvalResult","text":"<p>               Bases: <code>Fact</code>, <code>Entity</code></p> <p>The result of an evaluation for a specific AI model.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isResultOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.isResultOf","title":"isResultOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isResultOf: Optional[str] = Field(default=None, description='A relationship indicating that an entity is the result of an AI evaluation.', json_schema_extra={'linkml_meta': {'alias': 'isResultOf', 'domain_of': ['AiEvalResult'], 'slot_uri': 'dqv:isMeasurementOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'dqv:QualityMeasurement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'mixins': ['Fact']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiEvalResult.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase","title":"AiLifecyclePhase","text":"<p>               Bases: <code>Entity</code></p> <p>A Phase of AI lifecycle which indicates evolution of the system from conception through retirement.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'airo:AILifecyclePhase', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiLifecyclePhase.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel","title":"AiModel","text":"<p>               Bases: <code>BaseAi</code></p> <p>A base AI Model class. No assumption about the type (SVM, LLM, etc.). Subclassed by model types (see LargeLanguageModel).</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation","title":"AiModelValidation","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>AI model validation steps that have been performed after the model training to ensure high AI model quality.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiModelValidation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice","title":"AiOffice","text":"<p>               Bases: <code>Organization</code></p> <p>The EU AI Office (https://digital-strategy.ec.europa.eu/en/policies/ai-office)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/eu_ai_act'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiOffice.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider","title":"AiProvider","text":"<p>               Bases: <code>Organization</code></p> <p>A provider under the AI Act is defined by Article 3(3) as a natural or legal person or body that develops an AI system or general-purpose AI model or has an AI system or general-purpose AI model developed; and places that system or model on the market, or puts that system into service, under the provider's own name or trademark, whether for payment or free for charge.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AIProvider', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiProvider.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem","title":"AiSystem","text":"<p>               Bases: <code>BaseAi</code></p> <p>A compound AI System composed of one or more AI capablities. ChatGPT is an example of an AI system which deploys multiple GPT AI models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEuAiSystemType</code>               (<code>Optional[AiSystemType]</code>)           \u2013            </li> <li> <code>hasEuRiskCategory</code>               (<code>Optional[EuAiRiskCategory]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.hasEuAiSystemType","title":"hasEuAiSystemType  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuAiSystemType: Optional[AiSystemType] = Field(default=None, description='The type of system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuAiSystemType', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.hasEuRiskCategory","title":"hasEuRiskCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEuRiskCategory: Optional[EuAiRiskCategory] = Field(default=None, description='The risk category of an AI system as defined by the EU AI Act.', json_schema_extra={'linkml_meta': {'alias': 'hasEuRiskCategory', 'domain_of': ['AiSystem']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AISystem', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isComposedOf': {'description': 'Relationship indicating the AI components from which a complete AI system is composed.', 'name': 'isComposedOf', 'range': 'BaseAi'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystem.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType","title":"AiSystemType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>GPAI</code>           \u2013            </li> <li> <code>GPAI_OS</code>           \u2013            </li> <li> <code>HIGH_RISK</code>           \u2013            </li> <li> <code>MILITARY_SECURITY</code>           \u2013            </li> <li> <code>PROHIBITED</code>           \u2013            </li> <li> <code>SCIENTIFIC_RD</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.GPAI","title":"GPAI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI = 'GPAI'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.GPAI_OS","title":"GPAI_OS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GPAI_OS = 'GPAI_OS'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.HIGH_RISK","title":"HIGH_RISK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH_RISK = 'HIGH_RISK'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.MILITARY_SECURITY","title":"MILITARY_SECURITY  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MILITARY_SECURITY = 'MILITARY_SECURITY'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.PROHIBITED","title":"PROHIBITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PROHIBITED = 'PROHIBITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiSystemType.SCIENTIFIC_RD","title":"SCIENTIFIC_RD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SCIENTIFIC_RD = 'SCIENTIFIC_RD'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask","title":"AiTask","text":"<p>               Bases: <code>Entity</code></p> <p>A task, such as summarization and classification, performed by an AI.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:AiCapability', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.AiTask.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi","title":"BaseAi","text":"<p>               Bases: <code>Entity</code></p> <p>Any type of AI, be it a LLM, RL agent, SVM, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.BaseAi.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.ConfiguredBaseModel","title":"ConfiguredBaseModel","text":"<p>               Bases: <code>BaseModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.ConfiguredBaseModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container","title":"Container","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>An umbrella object that holds the ontology class instances</p> <p>Attributes:</p> <ul> <li> <code>actions</code>               (<code>Optional[List[Action]]</code>)           \u2013            </li> <li> <code>aimodelfamilies</code>               (<code>Optional[List[LargeLanguageModelFamily]]</code>)           \u2013            </li> <li> <code>aimodels</code>               (<code>Optional[List[LargeLanguageModel]]</code>)           \u2013            </li> <li> <code>aitasks</code>               (<code>Optional[List[AiTask]]</code>)           \u2013            </li> <li> <code>datasets</code>               (<code>Optional[List[Dataset]]</code>)           \u2013            </li> <li> <code>documents</code>               (<code>Optional[List[Documentation]]</code>)           \u2013            </li> <li> <code>evaluations</code>               (<code>Optional[List[AiEval]]</code>)           \u2013            </li> <li> <code>licenses</code>               (<code>Optional[List[License]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>modalities</code>               (<code>Optional[List[Modality]]</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>organizations</code>               (<code>Optional[List[Organization]]</code>)           \u2013            </li> <li> <code>riskcontrols</code>               (<code>Optional[List[RiskControl]]</code>)           \u2013            </li> <li> <code>riskgroups</code>               (<code>Optional[List[RiskGroup]]</code>)           \u2013            </li> <li> <code>risks</code>               (<code>Optional[List[Risk]]</code>)           \u2013            </li> <li> <code>taxonomies</code>               (<code>Optional[List[RiskTaxonomy]]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: Optional[List[Action]] = Field(default=None, description='A list of risk related actions', json_schema_extra={'linkml_meta': {'alias': 'actions', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.aimodelfamilies","title":"aimodelfamilies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodelfamilies: Optional[List[LargeLanguageModelFamily]] = Field(default=None, description='A list of AI model families', json_schema_extra={'linkml_meta': {'alias': 'aimodelfamilies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.aimodels","title":"aimodels  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aimodels: Optional[List[LargeLanguageModel]] = Field(default=None, description='A list of AI models', json_schema_extra={'linkml_meta': {'alias': 'aimodels', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.aitasks","title":"aitasks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aitasks: Optional[List[AiTask]] = Field(default=None, description='A list of AI tasks', json_schema_extra={'linkml_meta': {'alias': 'aitasks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.datasets","title":"datasets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>datasets: Optional[List[Dataset]] = Field(default=None, description='A list of data sets', json_schema_extra={'linkml_meta': {'alias': 'datasets', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.documents","title":"documents  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>documents: Optional[List[Documentation]] = Field(default=None, description='A list of documents', json_schema_extra={'linkml_meta': {'alias': 'documents', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.evaluations","title":"evaluations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evaluations: Optional[List[AiEval]] = Field(default=None, description='A list of AI evaluation methods', json_schema_extra={'linkml_meta': {'alias': 'evaluations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.licenses","title":"licenses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>licenses: Optional[List[License]] = Field(default=None, description='A list of licenses', json_schema_extra={'linkml_meta': {'alias': 'licenses', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai-risk-ontology', 'tree_root': True})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.modalities","title":"modalities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>modalities: Optional[List[Modality]] = Field(default=None, description='A list of AI modalities', json_schema_extra={'linkml_meta': {'alias': 'modalities', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.organizations","title":"organizations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>organizations: Optional[List[Organization]] = Field(default=None, description='A list of organizations', json_schema_extra={'linkml_meta': {'alias': 'organizations', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.riskcontrols","title":"riskcontrols  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskcontrols: Optional[List[RiskControl]] = Field(default=None, description='A list of AI risk controls', json_schema_extra={'linkml_meta': {'alias': 'riskcontrols', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.riskgroups","title":"riskgroups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>riskgroups: Optional[List[RiskGroup]] = Field(default=None, description='A list of AI risk groups', json_schema_extra={'linkml_meta': {'alias': 'riskgroups', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.risks","title":"risks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>risks: Optional[List[Risk]] = Field(default=None, description='A list of AI risks', json_schema_extra={'linkml_meta': {'alias': 'risks', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Container.taxonomies","title":"taxonomies  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>taxonomies: Optional[List[RiskTaxonomy]] = Field(default=None, description='A list of AI risk taxonomies', json_schema_extra={'linkml_meta': {'alias': 'taxonomies', 'domain_of': ['Container']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing","title":"DataPreprocessing","text":"<p>               Bases: <code>AiLifecyclePhase</code></p> <p>Data transformations, such as PI filtering, performed to ensure high quality of AI model training data.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.DataPreprocessing.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset","title":"Dataset","text":"<p>               Bases: <code>Entity</code></p> <p>A body of structured information describing some topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>provider</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Dataset', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.provider","title":"provider  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>provider: Optional[str] = Field(default=None, description='A relationship to the Organization instance that provides this instance.', json_schema_extra={'linkml_meta': {'alias': 'provider', 'domain_of': ['Dataset'], 'slot_uri': 'schema:provider'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Dataset.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation","title":"Documentation","text":"<p>               Bases: <code>Entity</code></p> <p>Documented information about a concept or other topic(s) of interest.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Documentation', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Documentation.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity","title":"Entity","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A generic grouping for any identifiable entity.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Thing', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Entity.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.EuAiRiskCategory","title":"EuAiRiskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> <ul> <li> <code>HIGH</code>           \u2013            </li> <li> <code>LIMITED</code>           \u2013            </li> <li> <code>MINIMAL</code>           \u2013            </li> <li> <code>UNACCEPTABLE</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.EuAiRiskCategory.HIGH","title":"HIGH  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HIGH = 'HIGH'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.EuAiRiskCategory.LIMITED","title":"LIMITED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMITED = 'LIMITED'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.EuAiRiskCategory.MINIMAL","title":"MINIMAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MINIMAL = 'MINIMAL'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.EuAiRiskCategory.UNACCEPTABLE","title":"UNACCEPTABLE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UNACCEPTABLE = 'UNACCEPTABLE'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Fact","title":"Fact","text":"<p>               Bases: <code>ConfiguredBaseModel</code></p> <p>A fact about something, for example the result of a measurement. In addition to the value, evidence is provided.</p> <p>Attributes:</p> <ul> <li> <code>evidence</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>value</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Fact.evidence","title":"evidence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>evidence: Optional[str] = Field(default=None, description='Evidence provides a source (typical a chunk, paragraph or link) describing where some value was found or how it was generated.', json_schema_extra={'linkml_meta': {'alias': 'evidence', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Fact.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'abstract': True, 'class_uri': 'schema:Statement', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Fact.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Fact.value","title":"value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value: str = Field(default=..., description='Some numeric or string value', json_schema_extra={'linkml_meta': {'alias': 'value', 'domain_of': ['Fact']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel","title":"LargeLanguageModel","text":"<p>               Bases: <code>AiModel</code></p> <p>A large language model (LLM) is an AI model which supports a range of language-related tasks such as generation, summarization, classification, among others. A LLM is implemented as an artificial neural networks using a transformer architecture.</p> <p>Attributes:</p> <ul> <li> <code>architecture</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>carbon_emitted</code>               (<code>Optional[float]</code>)           \u2013            </li> <li> <code>contextWindowSize</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>fine_tuning</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>gpu_hours</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasEvaluation</code>               (<code>Optional[List[AiEvalResult]]</code>)           \u2013            </li> <li> <code>hasInputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasModelCard</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasOutputModality</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRiskControl</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasTrainingData</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isProvidedBy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>numParameters</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>numTrainingTokens</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>performsTask</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>power_consumption_w</code>               (<code>Optional[int]</code>)           \u2013            </li> <li> <code>producer</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>supported_languages</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.architecture","title":"architecture  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>architecture: Optional[str] = Field(default=None, description=\"A description of the architecture of an AI such as 'Decoder-only'.\", json_schema_extra={'linkml_meta': {'alias': 'architecture', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.carbon_emitted","title":"carbon_emitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carbon_emitted: Optional[float] = Field(default=None, description='The number of tons of carbon dioxide equivalent that are emitted during training', ge=0, json_schema_extra={'linkml_meta': {'alias': 'carbon_emitted', 'domain_of': ['AiModel'], 'unit': {'descriptive_name': 'tons of CO2 equivalent', 'symbol': 't CO2-eq'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.contextWindowSize","title":"contextWindowSize  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contextWindowSize: Optional[int] = Field(default=None, description=\"The total length, in bytes, of an AI model's context window.\", ge=0, json_schema_extra={'linkml_meta': {'alias': 'contextWindowSize', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.fine_tuning","title":"fine_tuning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fine_tuning: Optional[str] = Field(default=None, description='A description of the fine-tuning mechanism(s) applied to a model.', json_schema_extra={'linkml_meta': {'alias': 'fine_tuning', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.gpu_hours","title":"gpu_hours  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gpu_hours: Optional[int] = Field(default=None, description='GPU consumption in terms of hours', ge=0, json_schema_extra={'linkml_meta': {'alias': 'gpu_hours', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasEvaluation","title":"hasEvaluation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasEvaluation: Optional[List[AiEvalResult]] = Field(default=None, description='A relationship indicating that an entity has an AI evaluation result.', json_schema_extra={'linkml_meta': {'alias': 'hasEvaluation', 'domain_of': ['AiModel'], 'slot_uri': 'dqv:hasQualityMeasurement'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasInputModality","title":"hasInputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasInputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the input modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasInputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasModelCard","title":"hasModelCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasModelCard: Optional[List[str]] = Field(default=None, description='A relationship to model card references.', json_schema_extra={'linkml_meta': {'alias': 'hasModelCard', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasOutputModality","title":"hasOutputModality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasOutputModality: Optional[List[str]] = Field(default=None, description='A relationship indicating the output modalities supported by an AI component. Examples include text, image, video.', json_schema_extra={'linkml_meta': {'alias': 'hasOutputModality', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasRiskControl","title":"hasRiskControl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRiskControl: Optional[List[str]] = Field(default=None, description='Indicates the control measures associated with a system or component to modify risks.', json_schema_extra={'linkml_meta': {'alias': 'hasRiskControl', 'domain_of': ['AiModel'], 'slot_uri': 'airo:hasRiskControl'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.hasTrainingData","title":"hasTrainingData  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasTrainingData: Optional[List[str]] = Field(default=None, description='A relationship indicating the datasets an AI model was trained on.', json_schema_extra={'linkml_meta': {'alias': 'hasTrainingData', 'domain_of': ['LargeLanguageModel'], 'slot_uri': 'airo:hasTrainingData'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='Annotation that a Large Language model is part of a family of models', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.isProvidedBy","title":"isProvidedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isProvidedBy: Optional[str] = Field(default=None, description='A relationship indicating the AI model has been provided by an AI model provider.', json_schema_extra={'linkml_meta': {'alias': 'isProvidedBy', 'domain_of': ['BaseAi'], 'slot_uri': 'airo:isProvidedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'aliases': ['LLM'], 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system', 'slot_usage': {'isPartOf': {'description': 'Annotation that a Large Language model is part of a family of models', 'name': 'isPartOf', 'range': 'LargeLanguageModelFamily'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.numParameters","title":"numParameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numParameters: Optional[int] = Field(default=None, description='A property indicating the number of parameters in a LLM.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numParameters', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.numTrainingTokens","title":"numTrainingTokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>numTrainingTokens: Optional[int] = Field(default=None, description='The number of tokens a AI model was trained on.', ge=0, json_schema_extra={'linkml_meta': {'alias': 'numTrainingTokens', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.performsTask","title":"performsTask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>performsTask: Optional[List[str]] = Field(default=None, description='relationship indicating the AI tasks an AI model can perform.', json_schema_extra={'linkml_meta': {'alias': 'performsTask', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.power_consumption_w","title":"power_consumption_w  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>power_consumption_w: Optional[int] = Field(default=None, description='power consumption in Watts', ge=0, json_schema_extra={'linkml_meta': {'alias': 'power_consumption_w', 'domain_of': ['AiModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.producer","title":"producer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>producer: Optional[str] = Field(default=None, description='A relationship to the Organization instance which produces this instance.', json_schema_extra={'linkml_meta': {'alias': 'producer', 'domain_of': ['BaseAi']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.supported_languages","title":"supported_languages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_languages: Optional[List[str]] = Field(default=None, description=\"A list of languages, expressed as ISO two letter codes. For example, 'jp, fr, en, de'\", json_schema_extra={'linkml_meta': {'alias': 'supported_languages', 'domain_of': ['LargeLanguageModel']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModel.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily","title":"LargeLanguageModelFamily","text":"<p>               Bases: <code>Entity</code></p> <p>A large language model family is a set of models that are provided by the same AI systems provider and are built around the same architecture, but differ e.g. in the number of parameters. Examples are Meta's Llama2 family or the IBM granite models.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LargeLanguageModelFamily.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License","title":"License","text":"<p>               Bases: <code>Entity</code></p> <p>The general notion of a license which defines terms and grants permissions to users of AI systems, datasets and software.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:License', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.License.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LinkMLMeta","title":"LinkMLMeta","text":"<p>               Bases: <code>RootModel</code></p> <p>Attributes:</p> <ul> <li> <code>model_config</code>           \u2013            </li> <li> <code>root</code>               (<code>Dict[str, Any]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LinkMLMeta.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.LinkMLMeta.root","title":"root  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>root: Dict[str, Any] = {}\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality","title":"Modality","text":"<p>               Bases: <code>Entity</code></p> <p>A modality supported by an Ai component. Examples include text, image, video.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Modality', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_system'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Modality.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization","title":"Organization","text":"<p>               Bases: <code>Entity</code></p> <p>Any organizational entity such as a corporation, educational institution, consortium, government, etc.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>grants_license</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.grants_license","title":"grants_license  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grants_license: Optional[str] = Field(default=None, description='A relationship from a granting entity such as an Organization to a License instance.', json_schema_extra={'linkml_meta': {'alias': 'grants_license', 'domain_of': ['Organization']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'schema:Organization', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/common'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Organization.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question","title":"Question","text":"<p>               Bases: <code>AiEval</code></p> <p>An evaluation where a question has to be answered</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>text</code>               (<code>str</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: str = Field(default=..., description='The question itself', json_schema_extra={'linkml_meta': {'alias': 'text', 'domain_of': ['Question']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Question.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire","title":"Questionnaire","text":"<p>               Bases: <code>AiEval</code></p> <p>A questionnaire groups questions</p> <p>Attributes:</p> <ul> <li> <code>bestValue</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDataset</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasRelatedRisk</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasUnitxtCard</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.bestValue","title":"bestValue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bestValue: Optional[str] = Field(default=None, description='Annotation of the best possible result of the evaluation', json_schema_extra={'linkml_meta': {'alias': 'bestValue', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.hasDataset","title":"hasDataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDataset: Optional[List[str]] = Field(default=None, description='A relationship to datasets that are used.', json_schema_extra={'linkml_meta': {'alias': 'hasDataset', 'domain_of': ['AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.hasRelatedRisk","title":"hasRelatedRisk  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedRisk: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to a risk', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedRisk', 'domain': 'RiskConcept', 'domain_of': ['Action', 'AiEval']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.hasUnitxtCard","title":"hasUnitxtCard  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasUnitxtCard: Optional[str] = Field(default=None, description='A relationship to a Unitxt card defining the risk evaluation', json_schema_extra={'linkml_meta': {'alias': 'hasUnitxtCard', 'domain_of': ['AiEval'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_eval', 'slot_usage': {'composed_of': {'name': 'composed_of', 'range': 'Question'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Questionnaire.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk","title":"Risk","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>The state of uncertainty associated with an AI system, that has the potential to cause harms</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>concern</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>descriptor</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasRelatedAction</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>isPartOf</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>phase</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>tag</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>type</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.concern","title":"concern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>concern: Optional[str] = Field(default=None, description='Some explanation about the concern related to an AI risk', json_schema_extra={'linkml_meta': {'alias': 'concern', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.descriptor","title":"descriptor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>descriptor: Optional[str] = Field(default=None, description='Annotates whether an AI risk is a traditional risk, specific to or amplified by AI.', json_schema_extra={'linkml_meta': {'alias': 'descriptor', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.hasRelatedAction","title":"hasRelatedAction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasRelatedAction: Optional[List[str]] = Field(default=None, description='A relationship where an entity relates to an action', json_schema_extra={'linkml_meta': {'alias': 'hasRelatedAction', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.isPartOf","title":"isPartOf  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isPartOf: Optional[str] = Field(default=None, description='A relationship where a risk is part of a risk group', json_schema_extra={'linkml_meta': {'alias': 'isPartOf', 'domain_of': ['Risk', 'LargeLanguageModel'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:Risk', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'isPartOf': {'description': 'A relationship where a risk is part of a risk group', 'name': 'isPartOf', 'range': 'RiskGroup'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.phase","title":"phase  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>phase: Optional[str] = Field(default=None, description='Annotation whether an AI risk shows specifically during the training-tuning or inference phase.', json_schema_extra={'linkml_meta': {'alias': 'phase', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.tag","title":"tag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tag: Optional[str] = Field(default=None, description='A shost version of the name', json_schema_extra={'linkml_meta': {'alias': 'tag', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Optional[str] = Field(default=None, description='Annotation whether an AI risk occurs at input or output or is non-technical.', json_schema_extra={'linkml_meta': {'alias': 'type', 'domain_of': ['Risk']}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.Risk.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept","title":"RiskConcept","text":"<p>               Bases: <code>Entity</code></p> <p>An umbrella term for refering to risk, risk source, consequence and impact.</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskConcept', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskConcept.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl","title":"RiskControl","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A measure that maintains and/or modifies risk (and risk concepts)</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>detectsRiskConcept</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.detectsRiskConcept","title":"detectsRiskConcept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>detectsRiskConcept: Optional[List[str]] = Field(default=None, description='The property airo:detectsRiskConcept indicates the control used for detecting risks, risk sources,  consequences, and impacts.', json_schema_extra={'linkml_meta': {'alias': 'detectsRiskConcept', 'domain': 'RiskControl', 'domain_of': ['Risk', 'RiskControl'], 'exact_mappings': ['airo:detectsRiskConcept'], 'inverse': 'isDetectedBy'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'class_uri': 'airo:RiskControl', 'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept']})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskControl.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup","title":"RiskGroup","text":"<p>               Bases: <code>RiskConcept</code>, <code>Entity</code></p> <p>A group of AI system related risks that are part of a risk taxonomy.</p> <p>Attributes:</p> <ul> <li> <code>broadMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>closeMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>exactMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasPart</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>isDefinedByTaxonomy</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>isDetectedBy</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>narrowMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>relatedMatch</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.broadMatch","title":"broadMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>broadMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a broader concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'broadMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:broadMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.closeMatch","title":"closeMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closeMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications.', json_schema_extra={'linkml_meta': {'alias': 'closeMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:closeMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.exactMatch","title":"exactMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exactMatch: Optional[List[str]] = Field(default=None, description='The property is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications', json_schema_extra={'linkml_meta': {'alias': 'exactMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:exactMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.hasPart","title":"hasPart  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasPart: Optional[List[str]] = Field(default=None, description='A relationship where a riskgroup has a risk', json_schema_extra={'linkml_meta': {'alias': 'hasPart', 'domain_of': ['RiskGroup'], 'slot_uri': 'schema:hasPart'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.isDefinedByTaxonomy","title":"isDefinedByTaxonomy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDefinedByTaxonomy: Optional[str] = Field(default=None, description='A relationship where a risk or a risk group is defined by a risk taxonomy', json_schema_extra={'linkml_meta': {'alias': 'isDefinedByTaxonomy', 'domain_of': ['RiskGroup', 'Risk', 'RiskControl', 'Action'], 'slot_uri': 'schema:isPartOf'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.isDetectedBy","title":"isDetectedBy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isDetectedBy: Optional[List[str]] = Field(default=None, description='A relationship where a risk, risk source, consequence, or impact is detected by a risk control.', json_schema_extra={'linkml_meta': {'alias': 'isDetectedBy', 'domain': 'RiskConcept', 'domain_of': ['RiskConcept'], 'inverse': 'detectsRiskConcept'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk', 'mixins': ['RiskConcept'], 'slot_usage': {'hasPart': {'description': 'A relationship where a riskgroup has a risk', 'name': 'hasPart', 'range': 'Risk'}}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.narrowMatch","title":"narrowMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>narrowMatch: Optional[List[str]] = Field(default=None, description='The property is used to state a hierarchical mapping link between two concepts, indicating that the concept linked to, is a narrower concept than the originating concept.', json_schema_extra={'linkml_meta': {'alias': 'narrowMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:narrowMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.relatedMatch","title":"relatedMatch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relatedMatch: Optional[List[str]] = Field(default=None, description='The property skos:relatedMatch is used to state an associative mapping link between two concepts.', json_schema_extra={'linkml_meta': {'alias': 'relatedMatch', 'any_of': [{'range': 'Risk'}, {'range': 'RiskGroup'}], 'domain_of': ['RiskGroup', 'Risk'], 'slot_uri': 'skos:relatedMatch'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskGroup.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy","title":"RiskTaxonomy","text":"<p>               Bases: <code>Entity</code></p> <p>A taxonomy of AI system related risks</p> <p>Attributes:</p> <ul> <li> <code>dateCreated</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>dateModified</code>               (<code>Optional[date]</code>)           \u2013            </li> <li> <code>description</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>hasDocumentation</code>               (<code>Optional[List[str]]</code>)           \u2013            </li> <li> <code>hasLicense</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>id</code>               (<code>str</code>)           \u2013            </li> <li> <code>linkml_meta</code>               (<code>LinkMLMeta</code>)           \u2013            </li> <li> <code>model_config</code>           \u2013            </li> <li> <code>name</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>url</code>               (<code>Optional[str]</code>)           \u2013            </li> <li> <code>version</code>               (<code>Optional[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.dateCreated","title":"dateCreated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateCreated: Optional[date] = Field(default=None, description='The date on which the entity was created.', json_schema_extra={'linkml_meta': {'alias': 'dateCreated', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateCreated'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.dateModified","title":"dateModified  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dateModified: Optional[date] = Field(default=None, description='The date on which the entity was most recently modified.', json_schema_extra={'linkml_meta': {'alias': 'dateModified', 'domain_of': ['Entity'], 'slot_uri': 'schema:dateModified'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(default=None, description='The description of an entity', json_schema_extra={'linkml_meta': {'alias': 'description', 'domain_of': ['Entity'], 'slot_uri': 'schema:description'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.hasDocumentation","title":"hasDocumentation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasDocumentation: Optional[List[str]] = Field(default=None, description='Indicates documentation associated with an entity.', json_schema_extra={'linkml_meta': {'alias': 'hasDocumentation', 'domain_of': ['Dataset', 'RiskTaxonomy', 'Action', 'AiEval', 'BaseAi', 'LargeLanguageModelFamily'], 'slot_uri': 'airo:hasDocumentation'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.hasLicense","title":"hasLicense  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hasLicense: Optional[str] = Field(default=None, description='Indicates licenses associated with a resource', json_schema_extra={'linkml_meta': {'alias': 'hasLicense', 'domain_of': ['Dataset', 'RiskTaxonomy', 'AiEval', 'BaseAi'], 'slot_uri': 'airo:hasLicense'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(default=..., description='A unique identifier to this instance of the model element. Example identifiers include UUID, URI, URN, etc.', json_schema_extra={'linkml_meta': {'alias': 'id', 'domain_of': ['Entity'], 'slot_uri': 'schema:identifier'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.linkml_meta","title":"linkml_meta  <code>class-attribute</code>","text":"<pre><code>linkml_meta: LinkMLMeta = LinkMLMeta({'from_schema': 'https://ibm.github.io/risk-atlas-nexus/ontology/ai_risk'})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(validate_assignment=True, validate_default=True, extra='forbid', arbitrary_types_allowed=True, use_enum_values=True, strict=False)\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: Optional[str] = Field(default=None, description='A text name of this instance.', json_schema_extra={'linkml_meta': {'alias': 'name', 'domain_of': ['Entity'], 'slot_uri': 'schema:name'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.url","title":"url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>url: Optional[str] = Field(default=None, description='An optional URL associated with this instance.', json_schema_extra={'linkml_meta': {'alias': 'url', 'domain_of': ['Entity'], 'slot_uri': 'schema:url'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.RiskTaxonomy.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: Optional[str] = Field(default=None, description='The version of the entity embodied by a specified resource.', json_schema_extra={'linkml_meta': {'alias': 'version', 'domain_of': ['License', 'RiskTaxonomy'], 'slot_uri': 'schema:version'}})\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.get_actions","title":"get_actions","text":"<pre><code>get_actions() -&gt; list[dict]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.get_related_risks","title":"get_related_risks","text":"<pre><code>get_related_risks(related_risks_str: str, risks: dict[str, str]) -&gt; list[str]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.nistactions2linkml.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; dict[str, str]\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml","title":"riskatlas2linkml","text":"<p>Functions:</p> <ul> <li> <code>convert_datetime_to_date</code>             \u2013              </li> <li> <code>create_container_object</code>             \u2013              </li> <li> <code>get_risks</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>DATA_DIR</code>           \u2013            </li> <li> <code>MO_API_PREFIX</code>           \u2013            </li> <li> <code>MO_HOST</code>           \u2013            </li> <li> <code>container</code>           \u2013            </li> </ul>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.DATA_DIR","title":"DATA_DIR  <code>module-attribute</code>","text":"<pre><code>DATA_DIR = 'src/risk_atlas_nexus/data/knowledge_graph/'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.MO_API_PREFIX","title":"MO_API_PREFIX  <code>module-attribute</code>","text":"<pre><code>MO_API_PREFIX = '/v1'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.MO_HOST","title":"MO_HOST  <code>module-attribute</code>","text":"<pre><code>MO_HOST = 'https://usage-gov-advisor.bx.cloud9.ibm.com'\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.container","title":"container  <code>module-attribute</code>","text":"<pre><code>container = create_container_object()\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.convert_datetime_to_date","title":"convert_datetime_to_date","text":"<pre><code>convert_datetime_to_date(datetime_str: str) -&gt; str\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.create_container_object","title":"create_container_object","text":"<pre><code>create_container_object() -&gt; Container\n</code></pre>"},{"location":"reference/#risk_atlas_nexus.ai_risk_ontology.util.riskatlas2linkml.get_risks","title":"get_risks","text":"<pre><code>get_risks() -&gt; list[dict]\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<ul> <li>Notebooks: <ul> <li>Risk Atlas Nexus Quickstart Overview of library functionality</li> <li>Risk identification Uncover risks related to your usecase</li> <li>Auto assist questionnaire Auto-fill questionnaire using Chain of Thought or Few-Shot Examples</li> <li>AI Tasks identification Uncover ai tasks related to your usecase</li> </ul> </li> </ul>"}]}